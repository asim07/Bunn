{
	"id": "a1eb2fe47b0681cfef7db39e11a266ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Farm/GlideToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.12;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\n// GlideToken with Governance.\ncontract GlideToken is ERC20('Glide', 'GLIDE'), Ownable  {\n    uint256 constant private _maxTotalSupply = 50000000e18; // 50,000,000 max supply\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        require(totalSupply().add(_amount) <= _maxTotalSupply, \"ERC20: minting more than MaxTotalSupply\");\n\n        _mint(_to, _amount);\n    }\n\n    // Returns maximum total supply of the token\n    function getMaxTotalSupply() external pure returns (uint256) {\n        return _maxTotalSupply;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ffc8f4d4c2f48872925ce7b3006f0cb92e2bfdd6acb94c8e499a6ea28546a85264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffc8f4d4c2f48872925ce7b3006f0cb92e2bfdd6acb94c8e499a6ea28546a85264736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC8 DELEGATECALL 0xD4 0xC2 DELEGATECALL DUP9 PUSH19 0x925CE7B3006F0CB92E2BFDD6ACB94C8E499A6E LOG2 DUP6 CHAINID 0xA8 MSTORE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffc8f4d4c2f48872925ce7b3006f0cb92e2bfdd6acb94c8e499a6ea28546a85264736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xC8 DELEGATECALL 0xD4 0xC2 DELEGATECALL DUP9 PUSH19 0x925CE7B3006F0CB92E2BFDD6ACB94C8E499A6E LOG2 DUP6 CHAINID 0xA8 MSTORE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffc8f4d4c2f48872925ce7b3006f0cb92e2bfdd6acb94c8e499a6ea28546a85264736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_26)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_26\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\n  pop\n  tag_27\n  swap3\n  swap2\n  pop\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_27\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_29)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      swap2\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122004800b2584214e506e5da0ffca05d4ffc2e94532eeb171c86ce280d4bf7b938164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000c6238038062000c628339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109f280620002706000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122004800b2584214e506e5da0ffca05d4ffc2e94532eeb171c86ce280d4bf7b938164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC62 CODESIZE SUB DUP1 PUSH3 0xC62 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH2 0x1A4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1B8 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1CD JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH2 0x260 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x20E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x220 JUMP JUMPDEST POP PUSH2 0x247 SWAP3 SWAP2 POP PUSH2 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x9F2 DUP1 PUSH3 0x270 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212200480 SIGNEXTEND 0x25 DUP5 0x21 0x4E POP PUSH15 0x5DA0FFCA05D4FFC2E94532EEB171C8 PUSH13 0xE280D4BF7B938164736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1321:9474:2:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1958:145:2;;;;;;;;;;-1:-1:-1;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1958:145:2;;;;;;;;;;-1:-1:-1;1958:145:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1958:145:2;;-1:-1:-1;;2032:13:2;;;;-1:-1:-1;2032:5:2;;:13;;;;;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;1321:9474:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:9474:2;;;-1:-1:-1;1321:9474:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122004800b2584214e506e5da0ffca05d4ffc2e94532eeb171c86ce280d4bf7b938164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212200480 SIGNEXTEND 0x25 DUP5 0x21 0x4E POP PUSH15 0x5DA0FFCA05D4FFC2E94532EEB171C8 PUSH13 0xE280D4BF7B938164736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1321:9474:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:2;;;;;;;;:::i;3399:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;2370:93::-;;;:::i;6291:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:2;;;;;;;;:::i;3727:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:2;;;;;;;;:::i;3957:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2168:89::-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:38;:50::i;3399:125::-;-1:-1:-1;;;;;3499:18:2;3473:7;3499:18;;;;;;;;;;;;3399:125::o;2370:93::-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;598:104:4:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;10701:92:2:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004800b2584214e506e5da0ffca05d4ffc2e94532eeb171c86ce280d4bf7b938164736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Farm/GlideToken.sol": {
				"GlideToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Farm/GlideToken.sol\":200:808  contract GlideToken is ERC20('Glide', 'GLIDE'), Ownable  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x476c696465)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x474c494445)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x05\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  swap2\n  swap3\n  pop\n  swap1\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n  dup3\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"contracts/Farm/GlideToken.sol\":200:808  contract GlideToken is ERC20('Glide', 'GLIDE'), Ownable  {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Farm/GlideToken.sol\":200:808  contract GlideToken is ERC20('Glide', 'GLIDE'), Ownable  {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Farm/GlideToken.sol\":200:808  contract GlideToken is ERC20('Glide', 'GLIDE'), Ownable  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5db30bb1\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_24:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_24)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"contracts/Farm/GlideToken.sol\":446:651  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/Farm/GlideToken.sol\":706:806  function getMaxTotalSupply() external pure returns (uint256) {... */\n    tag_10:\n      tag_31\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_41\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_22\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"contracts/Farm/GlideToken.sol\":446:651  function mint(address _to, uint256 _amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Farm/GlideToken.sol\":306:317  50000000e18 */\n      0x295be96e64066972000000\n        /* \"contracts/Farm/GlideToken.sol\":525:551  totalSupply().add(_amount) */\n      tag_101\n        /* \"contracts/Farm/GlideToken.sol\":543:550  _amount */\n      dup3\n        /* \"contracts/Farm/GlideToken.sol\":525:538  totalSupply() */\n      tag_102\n        /* \"contracts/Farm/GlideToken.sol\":525:536  totalSupply */\n      tag_32\n        /* \"contracts/Farm/GlideToken.sol\":525:538  totalSupply() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Farm/GlideToken.sol\":525:542  totalSupply().add */\n      swap1\n      tag_95\n        /* \"contracts/Farm/GlideToken.sol\":525:551  totalSupply().add(_amount) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Farm/GlideToken.sol\":525:570  totalSupply().add(_amount) <= _maxTotalSupply */\n      gt\n      iszero\n        /* \"contracts/Farm/GlideToken.sol\":517:614  require(totalSupply().add(_amount) <= _maxTotalSupply, \"ERC20: minting more than MaxTotalSupply\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9c844e7c031655cba896922c552399391670d0457f45b471ca1610852cc1d2c8\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/Farm/GlideToken.sol\":625:644  _mint(_to, _amount) */\n      tag_104\n        /* \"contracts/Farm/GlideToken.sol\":631:634  _to */\n      dup3\n        /* \"contracts/Farm/GlideToken.sol\":636:643  _amount */\n      dup3\n        /* \"contracts/Farm/GlideToken.sol\":625:630  _mint */\n      tag_105\n        /* \"contracts/Farm/GlideToken.sol\":625:644  _mint(_to, _amount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Farm/GlideToken.sol\":446:651  function mint(address _to, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Farm/GlideToken.sol\":706:806  function getMaxTotalSupply() external pure returns (uint256) {... */\n    tag_45:\n        /* \"contracts/Farm/GlideToken.sol\":306:317  50000000e18 */\n      0x295be96e64066972000000\n        /* \"contracts/Farm/GlideToken.sol\":706:806  function getMaxTotalSupply() external pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_111\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1842  _owner */\n      0x05\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x0100\n      swap1\n      div\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x05\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_143\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      swap2\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_146:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_148\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_146)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_149:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_151\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_153\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      tag_155\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      tag_156\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      swap3\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_141:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9c844e7c031655cba896922c552399391670d0457f45b471ca1610852cc1d2c8 45524332303a206d696e74696e67206d6f7265207468616e204d6178546f74616c537570706c79\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122059080b98ae4d64e3ff16c1a0ca8b66c48a1d42a358ce444f0c6fc18055607eb764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405180604001604052806005815260200164476c69646560d81b81525060405180604001604052806005815260200164474c49444560d81b81525081600390805190602001906100639291906100f0565b5080516100779060049060208401906100f0565b50506005805460ff191660121790555060006100916100ec565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610183565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013157805160ff191683800117855561015e565b8280016001018555821561015e579182015b8281111561015e578251825591602001919060010190610143565b5061016a92915061016e565b5090565b5b8082111561016a576000815560010161016f565b610ef280620001936000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102ec578063a9059cbb14610318578063dd62ed3e14610344578063f2fde38b1461037257610100565b806370a0823114610292578063715018a6146102b85780638da5cb5b146102c057806395d89b41146102e457610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806340c10f191461025c5780635db30bb11461028a57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610398565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042e565b604080519115158252519081900360200190f35b6101ca61044b565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610451565b61021a6104d8565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104e1565b6102886004803603604081101561027257600080fd5b506001600160a01b03813516906020013561052f565b005b6101ca61060c565b6101ca600480360360208110156102a857600080fd5b50356001600160a01b031661061b565b610288610636565b6102c86106fa565b604080516001600160a01b039092168252519081900360200190f35b61010d61070e565b6101ae6004803603604081101561030257600080fd5b506001600160a01b03813516906020013561076f565b6101ae6004803603604081101561032e57600080fd5b506001600160a01b0381351690602001356107d7565b6101ca6004803603604081101561035a57600080fd5b506001600160a01b03813581169160200135166107eb565b6102886004803603602081101561038857600080fd5b50356001600160a01b0316610816565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061044261043b610936565b848461093a565b50600192915050565b60025490565b600061045e848484610a26565b6104ce8461046a610936565b6104c985604051806060016040528060288152602001610e00602891396001600160a01b038a166000908152600160205260408120906104a8610936565b6001600160a01b031681526020810191909152604001600020549190610b81565b61093a565b5060019392505050565b60055460ff1690565b60006104426104ee610936565b846104c985600160006104ff610936565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c18565b610537610936565b6001600160a01b03166105486106fa565b6001600160a01b0316146105a3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6a295be96e640669720000006105c1826105bb61044b565b90610c18565b11156105fe5760405162461bcd60e51b8152600401808060200182810382526027815260200180610e286027913960400191505060405180910390fd5b6106088282610c79565b5050565b6a295be96e6406697200000090565b6001600160a01b031660009081526020819052604090205490565b61063e610936565b6001600160a01b031661064f6106fa565b6001600160a01b0316146106aa576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b600061044261077c610936565b846104c985604051806060016040528060258152602001610e9860259139600160006107a6610936565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b81565b60006104426107e4610936565b8484610a26565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61081e610936565b6001600160a01b031661082f6106fa565b6001600160a01b03161461088a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108cf5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b03831661097f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e746024913960400191505060405180910390fd5b6001600160a01b0382166109c45760405162461bcd60e51b8152600401808060200182810382526022815260200180610db86022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a6b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610e4f6025913960400191505060405180910390fd5b6001600160a01b038216610ab05760405162461bcd60e51b8152600401808060200182810382526023815260200180610d6f6023913960400191505060405180910390fd5b610abb838383610d69565b610af881604051806060016040528060268152602001610dda602691396001600160a01b0386166000908152602081905260409020549190610b81565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b279082610c18565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c105760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bd5578181015183820152602001610bbd565b50505050905090810190601f168015610c025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c72576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cd4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ce060008383610d69565b600254610ced9082610c18565b6002556001600160a01b038216600090815260208190526040902054610d139082610c18565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206d696e74696e67206d6f7265207468616e204d6178546f74616c537570706c7945524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122059080b98ae4d64e3ff16c1a0ca8b66c48a1d42a358ce444f0c6fc18055607eb764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x476C696465 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x474C494445 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x63 SWAP3 SWAP2 SWAP1 PUSH2 0xF0 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x77 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0xF0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x91 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x183 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x131 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x15E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x15E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x15E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x143 JUMP JUMPDEST POP PUSH2 0x16A SWAP3 SWAP2 POP PUSH2 0x16E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16F JUMP JUMPDEST PUSH2 0xEF2 DUP1 PUSH3 0x193 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E4 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DB30BB1 EQ PUSH2 0x28A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x451 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x52F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST PUSH2 0x288 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x70E JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76F JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x816 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x424 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x407 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x43B PUSH2 0x936 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP5 DUP5 DUP5 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x4CE DUP5 PUSH2 0x46A PUSH2 0x936 JUMP JUMPDEST PUSH2 0x4C9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE00 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4A8 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x4EE PUSH2 0x936 JUMP JUMPDEST DUP5 PUSH2 0x4C9 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x548 PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH2 0x5C1 DUP3 PUSH2 0x5BB PUSH2 0x44B JUMP JUMPDEST SWAP1 PUSH2 0xC18 JUMP JUMPDEST GT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE28 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x608 DUP3 DUP3 PUSH2 0xC79 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64F PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x77C PUSH2 0x936 JUMP JUMPDEST DUP5 PUSH2 0x4C9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x7A6 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x7E4 PUSH2 0x936 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x81E PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82F PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE74 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE4F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD6F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABB DUP4 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB27 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCE0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCED SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD13 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A206D696E PUSH21 0x696E67206D6F7265207468616E204D6178546F7461 PUSH13 0x537570706C7945524332303A20 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205908 SIGNEXTEND SWAP9 0xAE 0x4D PUSH5 0xE3FF16C1A0 0xCA DUP12 PUSH7 0xC48A1D42A358CE DIFFICULTY 0x4F 0xC PUSH16 0xC18055607EB764736F6C634300060C00 CALLER ",
							"sourceMap": "200:608:5:-:0;;;;;;;;;;;;;1958:145:2;;;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;2082:9:2;904:12:0;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;;-1:-1:-1;;;;;926:18:0;;;;;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;-1:-1:-1;;959:43:0;;-1:-1:-1;;959:43:0;850:159;200:608:5;;598:104:4;685:10;598:104;:::o;200:608:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;200:608:5;;;-1:-1:-1;200:608:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102ec578063a9059cbb14610318578063dd62ed3e14610344578063f2fde38b1461037257610100565b806370a0823114610292578063715018a6146102b85780638da5cb5b146102c057806395d89b41146102e457610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806340c10f191461025c5780635db30bb11461028a57610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610398565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042e565b604080519115158252519081900360200190f35b6101ca61044b565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610451565b61021a6104d8565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104e1565b6102886004803603604081101561027257600080fd5b506001600160a01b03813516906020013561052f565b005b6101ca61060c565b6101ca600480360360208110156102a857600080fd5b50356001600160a01b031661061b565b610288610636565b6102c86106fa565b604080516001600160a01b039092168252519081900360200190f35b61010d61070e565b6101ae6004803603604081101561030257600080fd5b506001600160a01b03813516906020013561076f565b6101ae6004803603604081101561032e57600080fd5b506001600160a01b0381351690602001356107d7565b6101ca6004803603604081101561035a57600080fd5b506001600160a01b03813581169160200135166107eb565b6102886004803603602081101561038857600080fd5b50356001600160a01b0316610816565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b5050505050905090565b600061044261043b610936565b848461093a565b50600192915050565b60025490565b600061045e848484610a26565b6104ce8461046a610936565b6104c985604051806060016040528060288152602001610e00602891396001600160a01b038a166000908152600160205260408120906104a8610936565b6001600160a01b031681526020810191909152604001600020549190610b81565b61093a565b5060019392505050565b60055460ff1690565b60006104426104ee610936565b846104c985600160006104ff610936565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c18565b610537610936565b6001600160a01b03166105486106fa565b6001600160a01b0316146105a3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6a295be96e640669720000006105c1826105bb61044b565b90610c18565b11156105fe5760405162461bcd60e51b8152600401808060200182810382526027815260200180610e286027913960400191505060405180910390fd5b6106088282610c79565b5050565b6a295be96e6406697200000090565b6001600160a01b031660009081526020819052604090205490565b61063e610936565b6001600160a01b031661064f6106fa565b6001600160a01b0316146106aa576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104245780601f106103f957610100808354040283529160200191610424565b600061044261077c610936565b846104c985604051806060016040528060258152602001610e9860259139600160006107a6610936565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b81565b60006104426107e4610936565b8484610a26565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61081e610936565b6001600160a01b031661082f6106fa565b6001600160a01b03161461088a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166108cf5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d926026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b03831661097f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e746024913960400191505060405180910390fd5b6001600160a01b0382166109c45760405162461bcd60e51b8152600401808060200182810382526022815260200180610db86022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a6b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610e4f6025913960400191505060405180910390fd5b6001600160a01b038216610ab05760405162461bcd60e51b8152600401808060200182810382526023815260200180610d6f6023913960400191505060405180910390fd5b610abb838383610d69565b610af881604051806060016040528060268152602001610dda602691396001600160a01b0386166000908152602081905260409020549190610b81565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b279082610c18565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c105760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bd5578181015183820152602001610bbd565b50505050905090810190601f168015610c025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c72576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610cd4576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610ce060008383610d69565b600254610ced9082610c18565b6002556001600160a01b038216600090815260208190526040902054610d139082610c18565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206d696e74696e67206d6f7265207468616e204d6178546f74616c537570706c7945524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122059080b98ae4d64e3ff16c1a0ca8b66c48a1d42a358ce444f0c6fc18055607eb764736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x372 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E4 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x5DB30BB1 EQ PUSH2 0x28A JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x398 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x451 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x52F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CA PUSH2 0x60C JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST PUSH2 0x288 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x70E JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76F JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x7EB JUMP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x816 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x424 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x407 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x43B PUSH2 0x936 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E DUP5 DUP5 DUP5 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x4CE DUP5 PUSH2 0x46A PUSH2 0x936 JUMP JUMPDEST PUSH2 0x4C9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE00 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x4A8 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x4EE PUSH2 0x936 JUMP JUMPDEST DUP5 PUSH2 0x4C9 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4FF PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x548 PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH11 0x295BE96E64066972000000 PUSH2 0x5C1 DUP3 PUSH2 0x5BB PUSH2 0x44B JUMP JUMPDEST SWAP1 PUSH2 0xC18 JUMP JUMPDEST GT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE28 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x608 DUP3 DUP3 PUSH2 0xC79 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH11 0x295BE96E64066972000000 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x63E PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x64F PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6AA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x424 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x77C PUSH2 0x936 JUMP JUMPDEST DUP5 PUSH2 0x4C9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x7A6 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x442 PUSH2 0x7E4 PUSH2 0x936 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x81E PUSH2 0x936 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82F PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x88A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE74 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE4F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD6F PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABB DUP4 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDA PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xB27 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xCE0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCED SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD13 SWAP1 DUP3 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A206D696E PUSH21 0x696E67206D6F7265207468616E204D6178546F7461 PUSH13 0x537570706C7945524332303A20 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205908 SIGNEXTEND SWAP9 0xAE 0x4D PUSH5 0xE3FF16C1A0 0xCA DUP12 PUSH7 0xC48A1D42A358CE DIFFICULTY 0x4F 0xC PUSH16 0xC18055607EB764736F6C634300060C00 CALLER ",
							"sourceMap": "200:608:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;3086:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:2;;;;;;;;:::i;446:205:5:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;446:205:5;;;;;;;;:::i;:::-;;706:100;;;:::i;3399:125:2:-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;1717:145:0:-;;;:::i;1085:85::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:0;;;;;;;;;;;;;;2370:93:2;;;:::i;6291:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:2;;;;;;;;:::i;3727:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:2;;;;;;;;:::i;3957:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;2168:89:2:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;:::o;3235:106::-;3322:12;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;:::o;3086:89::-;3159:9;;;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:38;:50::i;446:205:5:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;306:11:5::1;525:26;543:7;525:13;:11;:13::i;:::-;:17:::0;::::1;:26::i;:::-;:45;;517:97;;;;-1:-1:-1::0;;;517:97:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:19;631:3;636:7;625:5;:19::i;:::-;446:205:::0;;:::o;706:100::-;306:11;706:100;:::o;3399:125:2:-;-1:-1:-1;;;;;3499:18:2;3473:7;3499:18;;;;;;;;;;;;3399:125::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;1807:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1807:6:0::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;1085:85::-;1157:6;;;;;-1:-1:-1;;;;;1157:6:0;;1085:85::o;2370:93:2:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;6291:266;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;:38;:96::i;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;3957:149::-;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6:::1;::::0;::::1;;::::0;2179:38:::1;::::0;;;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;2227:17:0;;::::1;;;-1:-1:-1::0;;;;;;2227:17:0;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:4:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;7832:370:2:-;-1:-1:-1;;;;;7915:21:2;;7907:65;;;;;-1:-1:-1;;;7907:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:2;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:2;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;10701:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "765200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1168",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getMaxTotalSupply()": "287",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1115",
								"renounceOwnership()": "24319",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "476C696465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "474C494445"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1",
									"source": -1
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 200,
									"end": 808,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 808,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059080b98ae4d64e3ff16c1a0ca8b66c48a1d42a358ce444f0c6fc18055607eb764736f6c634300060c0033",
									".code": [
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "5DB30BB1"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 200,
											"end": 808,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 446,
											"end": 651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 706,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 706,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 306,
											"end": 317,
											"name": "PUSH",
											"source": 5,
											"value": "295BE96E64066972000000"
										},
										{
											"begin": 525,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 543,
											"end": 550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 525,
											"end": 538,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 538,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 525,
											"end": 538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 525,
											"end": 551,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 551,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 525,
											"end": 551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 570,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 525,
											"end": 570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH data",
											"source": 5,
											"value": "9C844E7C031655CBA896922C552399391670D0457F45B471CA1610852CC1D2C8"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 517,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 517,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 625,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 631,
											"end": 634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 636,
											"end": 643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 625,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 625,
											"end": 644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 446,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 317,
											"name": "PUSH",
											"source": 5,
											"value": "295BE96E64066972000000"
										},
										{
											"begin": 706,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 706,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9C844E7C031655CBA896922C552399391670D0457F45B471CA1610852CC1D2C8": "45524332303a206d696e74696e67206d6f7265207468616e204d6178546f74616c537570706c79",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getMaxTotalSupply()": "5db30bb1",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Farm/GlideToken.sol\":\"GlideToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/Farm/GlideToken.sol\":{\"keccak256\":\"0x3b876167a7573db0f6fd862f99f22918453800a1c80531adaeea8750baaec35b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef74a5cdc68a3bcfd736bd0ec674158bcce3f134c4a277e7dc998418ee6cb64\",\"dweb:/ipfs/QmQBQ4NRRDHjj6ALDKX3X7YCq2GP8frDeHcD2e3x9SL1k4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 1069,
							"src": "66:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1068,
										"src": "621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1068",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:0"
								}
							],
							"contractDependencies": [
								1068
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								1068
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "635:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "691:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "722:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:0"
									},
									"src": "664:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "874:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "884:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "926:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "935:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "926:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "954:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 109,
									"src": "850:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1140:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1150:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 109,
									"src": "1085:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1279:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1297:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:0"
									},
									"src": "1258:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1771:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1781:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1761:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:0"
									},
									"scope": 109,
									"src": "1717:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2081:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2179:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2174:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2071:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:0"
									},
									"scope": 109,
									"src": "2011:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "592:1661:0"
						}
					],
					"src": "33:2221:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 142,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 137,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 123,
													"id": 136,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 140,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 464,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 162,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 154,
													"id": 161,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 167,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 154,
												"id": 168,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 464,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 189,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 188,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 210,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 197,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 204,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 181,
												"id": 209,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 464,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 230,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 222,
													"id": 229,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 235,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 222,
												"id": 236,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 464,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 249,
													"id": 256,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 464,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 290,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 282,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 288,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 289,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 464,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 311,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 464,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 323,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 328,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 322,
													"id": 327,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 346,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 344,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 345,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 464,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 367,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 464,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 389,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 464,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 407,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 413,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 464,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 431,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 435,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 437,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 464,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 461,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 464,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 467,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 1069,
							"src": "66:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 468,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 1046,
							"src": "100:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 469,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 465,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 471,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1068,
										"src": "1339:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1068",
											"typeString": "contract Context"
										}
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 473,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1045,
										"src": "1348:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1045",
											"typeString": "contract IERC20"
										}
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								}
							],
							"contractDependencies": [
								1045,
								1068
							],
							"contractKind": "contract",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967,
								1045,
								1068
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 477,
									"libraryName": {
										"contractScope": null,
										"id": 475,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "1367:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:2",
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 481,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1394:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 480,
										"keyType": {
											"id": 478,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1447:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 486,
										"keyType": {
											"id": 482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 485,
											"keyType": {
												"id": 483,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 484,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1523:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 488,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 491,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1558:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 490,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1584:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 492,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1612:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 494,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2022:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 503,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2032:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 507,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 508,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 511,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2082:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:2"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:2",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 516,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "1971:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "1992:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:2"
									},
									"scope": 967,
									"src": "1958:145:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2228:29:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 522,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "2245:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 521,
												"id": 523,
												"nodeType": "Return",
												"src": "2238:12:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "2213:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:2"
									},
									"scope": 967,
									"src": "2168:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2432:31:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 531,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "2442:14:2"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "2417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:2"
									},
									"scope": 967,
									"src": "2370:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3142:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 540,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3159:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 539,
												"id": 541,
												"nodeType": "Return",
												"src": "3152:16:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "3135:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 537,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:2"
									},
									"scope": 967,
									"src": "3086:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3305:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 550,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "3322:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 551,
												"nodeType": "Return",
												"src": "3315:19:2"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 546,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:2"
									},
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "3296:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:2"
									},
									"scope": 967,
									"src": "3235:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3482:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 562,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "3499:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 564,
													"indexExpression": {
														"argumentTypes": null,
														"id": 563,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "3492:25:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:2"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "3418:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "3473:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:2"
									},
									"scope": 967,
									"src": "3399:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										994
									],
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "3819:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 579,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "3839:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3853:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3829:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 577,
												"id": 586,
												"nodeType": "Return",
												"src": "3881:11:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:2"
									},
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3745:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3764:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:2"
									},
									"scope": 967,
									"src": "3727:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "4055:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4072:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 601,
														"indexExpression": {
															"argumentTypes": null,
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "4084:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 603,
													"indexExpression": {
														"argumentTypes": null,
														"id": 602,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 604,
												"nodeType": "Return",
												"src": "4065:34:2"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:2"
									},
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3976:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "4046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:2"
									},
									"scope": 967,
									"src": "3957:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1014
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4333:77:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 618,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "4352:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "4366:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4375:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4343:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 616,
												"id": 625,
												"nodeType": "Return",
												"src": "4392:11:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:2"
									},
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4278:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:2"
									},
									"scope": 967,
									"src": "4244:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1026
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4989:205:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 641,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 642,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5017:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5028:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "4999:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 648,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5062:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "5114:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "5076:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 652,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 651,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "5088:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 653,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "5096:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "5076:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5045:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 639,
												"id": 663,
												"nodeType": "Return",
												"src": "5176:11:2"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:2"
									},
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4915:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4934:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4983:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:2"
									},
									"scope": 967,
									"src": "4877:317:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5683:121:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5702:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 686,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 679,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "5725:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 682,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 680,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "5737:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 684,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 683,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "5751:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 291,
																"src": "5725:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5693:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 674,
												"id": 691,
												"nodeType": "Return",
												"src": "5786:11:2"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5616:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5633:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5677:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:2"
									},
									"scope": 967,
									"src": "5589:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "6390:167:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 704,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "6409:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6423:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 714,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "6471:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 707,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "6432:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 710,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 708,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1056,
																				"src": "6444:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 712,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 711,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "6432:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "6400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 702,
												"id": 720,
												"nodeType": "Return",
												"src": "6539:11:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6335:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:2"
									},
									"scope": 967,
									"src": "6291:266:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "7118:443:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 733,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "7136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 734,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 743,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "7216:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 744,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 753,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 754,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7319:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7330:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7290:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7348:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7358:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 765,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "7368:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "7378:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "7368:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 770,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 772,
														"indexExpression": {
															"argumentTypes": null,
															"id": 771,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7459:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 777,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "7497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 773,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "7472:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 775,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 774,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "7482:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "7472:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 782,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7536:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 784,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7547:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "7519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "7514:40:2"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:2",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7066:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7085:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:2"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:2"
									},
									"scope": 967,
									"src": "7031:530:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "7897:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 797,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "7915:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 812,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7983:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 815,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "8043:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 818,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "8075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 816,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "8058:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "8058:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 822,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "8092:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 824,
														"indexExpression": {
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 829,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "8136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 825,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "8113:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 826,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "8123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "8113:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 838,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8188:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "8158:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "8153:42:2"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 843,
												"src": "7847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 843,
												"src": "7864:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:2"
									},
									"scope": 967,
									"src": "7832:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "8587:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 852,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "8605:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 853,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 862,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 867,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8717:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "8675:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 870,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "8735:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 872,
														"indexExpression": {
															"argumentTypes": null,
															"id": 871,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8779:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "8756:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 875,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8766:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "8756:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 882,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "8834:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 885,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8866:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 883,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "8849:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 313,
															"src": "8849:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 890,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "8888:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "EmitStatement",
												"src": "8883:42:2"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "8537:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "8554:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:2"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:2"
									},
									"scope": 967,
									"src": "8522:410:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9438:257:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 910,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "9456:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "9534:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 929,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "9605:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 932,
															"indexExpression": {
																"argumentTypes": null,
																"id": 930,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "9617:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 933,
														"indexExpression": {
															"argumentTypes": null,
															"id": 931,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 934,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "9635:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 938,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "9665:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 939,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "9656:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "9651:37:2"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9405:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:2"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:2"
									},
									"scope": 967,
									"src": "9355:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "10076:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 950,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "10086:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 951,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "10098:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:2",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 955,
												"src": "10042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 946,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:2"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:2"
									},
									"scope": 967,
									"src": "10018:96:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "10790:3:2",
										"statements": []
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10745:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:2"
									},
									"scope": 967,
									"src": "10701:92:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 968,
							"src": "1321:9474:2"
						}
					],
					"src": "33:10763:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1045
						]
					},
					"id": 1046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 970,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1045,
							"linearizedBaseContracts": [
								1045
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 976,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 1045,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 984,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 1045,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 994,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 994,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 994,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 1045,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1004,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 1045,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1014,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 1045,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1026,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1026,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1026,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1026,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 1045,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1035,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1035,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1044,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1044,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 1046,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1068
						]
					},
					"id": 1069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1047,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1068,
							"linearizedBaseContracts": [
								1068
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "668:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1052,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1054,
												"nodeType": "Return",
												"src": "678:17:4"
											}
										]
									},
									"documentation": null,
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:4"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1056,
												"src": "651:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:4"
									},
									"scope": 1068,
									"src": "598:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "773:165:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1061,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1068",
														"typeString": "contract Context"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "783:4:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1063,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1065,
												"nodeType": "Return",
												"src": "916:15:4"
											}
										]
									},
									"documentation": null,
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1067,
												"src": "759:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:4"
									},
									"scope": 1068,
									"src": "708:230:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1069,
							"src": "566:374:4"
						}
					],
					"src": "33:908:4"
				},
				"id": 4
			},
			"contracts/Farm/GlideToken.sol": {
				"ast": {
					"absolutePath": "contracts/Farm/GlideToken.sol",
					"exportedSymbols": {
						"GlideToken": [
							1117
						]
					},
					"id": 1118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1070,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1071,
							"nodeType": "ImportDirective",
							"scope": 1118,
							"sourceUnit": 968,
							"src": "59:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1072,
							"nodeType": "ImportDirective",
							"scope": 1118,
							"sourceUnit": 110,
							"src": "115:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"argumentTypes": null,
											"hexValue": "476c696465",
											"id": 1074,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "229:7:5",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_eee2b0be3222fd90333e0f53a18fa77c5647f5f5d9f40d2fedae38737e60fc4e",
												"typeString": "literal_string \"Glide\""
											},
											"value": "Glide"
										},
										{
											"argumentTypes": null,
											"hexValue": "474c494445",
											"id": 1075,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "238:7:5",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_5391051e5dea6a653b88d55bed4fd81f7969246c9a68d84c0f94e91bd60fb3e5",
												"typeString": "literal_string \"GLIDE\""
											},
											"value": "GLIDE"
										}
									],
									"baseName": {
										"contractScope": null,
										"id": 1073,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 967,
										"src": "223:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$967",
											"typeString": "contract ERC20"
										}
									},
									"id": 1076,
									"nodeType": "InheritanceSpecifier",
									"src": "223:23:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1077,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "248:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 1078,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:5"
								}
							],
							"contractDependencies": [
								109,
								967,
								1045,
								1068
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1117,
							"linearizedBaseContracts": [
								1117,
								109,
								967,
								1045,
								1068
							],
							"name": "GlideToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1081,
									"mutability": "constant",
									"name": "_maxTotalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1117,
									"src": "263:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1079,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3530303030303030653138",
										"id": 1080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "306:11:5",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000000000"
										},
										"value": "50000000e18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "507:144:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1095,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "543:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1092,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 553,
																			"src": "525:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "525:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 291,
																	"src": "525:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "525:26:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1097,
																"name": "_maxTotalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "555:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "525:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e74696e67206d6f7265207468616e204d6178546f74616c537570706c79",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:41:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c844e7c031655cba896922c552399391670d0457f45b471ca1610852cc1d2c8",
																"typeString": "literal_string \"ERC20: minting more than MaxTotalSupply\""
															},
															"value": "ERC20: minting more than MaxTotalSupply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c844e7c031655cba896922c552399391670d0457f45b471ca1610852cc1d2c8",
																"typeString": "literal_string \"ERC20: minting more than MaxTotalSupply\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "517:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "517:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "517:97:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1103,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "631:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1104,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "625:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "625:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "625:19:5"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "349:92:5",
										"text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterChef)."
									},
									"functionSelector": "40c10f19",
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1089,
											"modifierName": {
												"argumentTypes": null,
												"id": 1088,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "497:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "497:9:5"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1108,
												"src": "460:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1108,
												"src": "473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "459:30:5"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:0:5"
									},
									"scope": 1117,
									"src": "446:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "767:39:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1113,
													"name": "_maxTotalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1081,
													"src": "784:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1114,
												"nodeType": "Return",
												"src": "777:22:5"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5db30bb1",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTotalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:2:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1116,
												"src": "758:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:9:5"
									},
									"scope": 1117,
									"src": "706:100:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1118,
							"src": "200:608:5"
						}
					],
					"src": "33:775:5"
				},
				"id": 5
			}
		}
	}
}