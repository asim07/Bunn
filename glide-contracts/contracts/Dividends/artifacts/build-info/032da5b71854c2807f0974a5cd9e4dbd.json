{
	"id": "032da5b71854c2807f0974a5cd9e4dbd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dividends/FeeDistributor.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\n\nimport '../Swap/libraries/RouterHelper.sol';\n\nimport \"./interfaces/IFeeReceiver.sol\";\n\ncontract FeeDistributor is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    uint256 public platformShareBP;\n\n    address public rewardsReceiver;\n    address public feeHolder;\n\n    address public schedulerAddress;\n\n    address public wElaAddress;\n\n    event RescueTokens(address indexed user, address indexed token, uint256 amount);\n    event UpdateFeeSettings(address indexed user, uint platformShareBP);\n    event UpdateFeeReceivers(address indexed user, address rewardsReceiver, address feeHolder);\n    event SetSchedulerAddress(address indexed user, address newAddr);\n\n    constructor(\n        address _rewardsReceiver,\n        address _feeHolder,\n        address _schedulerAddress,\n        address _wElaAddress\n    ) public {\n        rewardsReceiver = _rewardsReceiver;\n        feeHolder = _feeHolder;\n        schedulerAddress = _schedulerAddress;\n        wElaAddress = _wElaAddress;\n    }\n\n    modifier onlyAdmins(){\n        require(msg.sender == schedulerAddress || msg.sender == owner(), \"onlyAdmins: FORBIDDEN\");\n        _;\n    }\n\n    function removeLiquidity(address router, address lpToken) external onlyAdmins {\n        uint256 amount = IERC20(lpToken).balanceOf(address(this));\n        RouterHelper.removeLiquidity(router, lpToken, amount);\n    }\n\n    function sellTokens(address router, address inputToken, address outputToken, address[] memory path) external onlyAdmins {\n        uint256 amount = IERC20(inputToken).balanceOf(address(this));\n        RouterHelper.swapTokens(router, amount, inputToken, outputToken, path);\n    }\n\n    function distributeFees() external onlyAdmins {\n\n        uint256 balance = IERC20(wElaAddress).balanceOf(address(this));\n\n        uint256 platformAmount = balance.mul(platformShareBP).div(10000);\n        uint256 receiverAmount = balance.sub(platformAmount);\n\n        IERC20(wElaAddress).safeIncreaseAllowance(rewardsReceiver, receiverAmount);\n        IFeeReceiver(rewardsReceiver).income(receiverAmount);\n\n        safeTokenTransfer(feeHolder, platformAmount);\n    }\n     function test() external returns(uint,uint) {\n         uint balance = 1 ether;\n        uint256 platformAmount = balance.mul(platformShareBP).div(10000);\n        uint256 receiverAmount = balance.sub(platformAmount);\n\n       \n    }\n\n    function safeTokenTransfer(address to, uint256 amount) internal {\n        uint256 balance = IERC20(wElaAddress).balanceOf(address(this));\n        if (amount > balance) {\n            IERC20(wElaAddress).safeTransfer(to, balance);\n        } else {\n            IERC20(wElaAddress).safeTransfer(to, amount);\n        }\n    }\n\n    function rescueToken(address token) external onlyOwner {\n        uint256 balance = IERC20(token).balanceOf(address(this));\n        IERC20(token).safeTransfer(feeHolder, balance);\n        emit RescueTokens(msg.sender, token, balance);\n    }\n\n    function updateFeeSettings(uint256 _platformShareBP) external onlyOwner {\n        platformShareBP = _platformShareBP;\n        emit UpdateFeeSettings(msg.sender, platformShareBP);\n    }\n\n    function updateFeeReceivers(address _rewardsReceiver, address _feeHolder) external onlyOwner {\n        rewardsReceiver = _rewardsReceiver;\n        feeHolder = _feeHolder;\n        emit UpdateFeeReceivers(msg.sender, rewardsReceiver, feeHolder);\n    }\n\n    function setSchedulerAddr(address newAddr) external onlyAdmins {\n        schedulerAddress = newAddr;\n        emit SetSchedulerAddress(msg.sender, newAddr);\n    }\n}"
			},
			"contracts/Dividends/interfaces/IFeeReceiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\ninterface IFeeReceiver {\n    function income(uint256 dollarAmount) external;\n}"
			},
			"contracts/Swap/libraries/RouterHelper.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/Math.sol';\nimport '@openzeppelin/contracts/math/SafeMath.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\n\nimport '../interfaces/IGlideRouter.sol';\nimport '../interfaces/IGlidePair.sol';\n\nlibrary RouterHelper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    function getTxDeadline() private view returns (uint256){\n        return block.timestamp + 60;\n    }\n\n    //Given X input tokens, return Y output tokens without concern about minimum/slippage\n    function swapTokens(address router, uint256 amount, address inputToken, address outputToken, address[] memory path) internal returns (uint256) {\n        if (inputToken == outputToken) {\n            return amount;\n        }\n\n        require(path.length > 0, \"swapTokens: INVALID PATH\");\n        require(path[0] == inputToken, \"swapTokens: INVALID PATH\");\n        require(path[path.length - 1] == outputToken, \"swapTokens: INVALID PATH\");\n\n        uint256 inputTokenBal = IERC20(inputToken).balanceOf(address(this));\n        require(inputTokenBal >= amount, \"swapTokens: INSUFFICIENT AMOUNT\");\n\n        uint256 outputTokenBal = IERC20(outputToken).balanceOf(address(this));\n\n        IERC20(inputToken).safeIncreaseAllowance(router, amount);\n        IGlideRouter(router).swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            amount,\n            0,\n            path,\n            address(this),\n            getTxDeadline()\n        );\n\n        uint256 gains = IERC20(outputToken).balanceOf(address(this)).sub(outputTokenBal);\n        return gains;\n    }\n\n    function addLiquidity(\n        address router,\n        address token0Address,\n        address token1Address,\n        uint256 token0Amt,\n        uint256 token1Amt\n    ) internal returns (uint256, uint256, uint256) {\n        IERC20(token0Address).safeIncreaseAllowance(router, token0Amt);\n        IERC20(token1Address).safeIncreaseAllowance(router, token1Amt);\n        (uint amount0, uint amount1, uint liquidity) = IGlideRouter(router).addLiquidity(\n            token0Address,\n            token1Address,\n            token0Amt,\n            token1Amt,\n            0,\n            0,\n            address(this),\n            getTxDeadline()\n        );\n        return (amount0, amount1, liquidity);\n    }\n\n    function removeLiquidity(\n        address router,\n        address pairAddress,\n        uint256 pairAmount\n    ) internal returns (uint256, uint256){\n        address token0Address = IGlidePair(pairAddress).token0();\n        address token1Address = IGlidePair(pairAddress).token1();\n\n        IERC20(pairAddress).safeIncreaseAllowance(router, pairAmount);\n        (uint256 amount0, uint256 amount1) = IGlideRouter(router).removeLiquidity(\n            token0Address,\n            token1Address,\n            pairAmount,\n            0,\n            0,\n            address(this),\n            getTxDeadline()\n        );\n        return (amount0, amount1);\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/Swap/interfaces/IGlidePair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.6;\n\ninterface IGlidePair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"contracts/Swap/interfaces/IGlideRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2;\n\ninterface IGlideRouter {\n    function factory() external pure returns (address);\n\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    payable\n    returns (uint[] memory amounts);\n\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n    external\n    returns (uint[] memory amounts);\n\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n    external\n    returns (uint[] memory amounts);\n\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n    external\n    payable\n    returns (uint[] memory amounts);\n\n    function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) external view returns (uint256 amountB);\n\n    function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) external view returns (uint256 amountOut);\n\n    function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) external view returns (uint256 amountIn);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\n\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/Math.sol\":140:808  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/Math.sol\":140:808  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220699efbba716a15c8c407a5a695553b18976c46532a8cb6f065163d0b5c1ba12364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699efbba716a15c8c407a5a695553b18976c46532a8cb6f065163d0b5c1ba12364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9EFBBA716A15C8C407A5 0xA6 SWAP6 SSTORE EXTCODESIZE XOR SWAP8 PUSH13 0x46532A8CB6F065163D0B5C1BA1 0x23 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "140:668:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220699efbba716a15c8c407a5a695553b18976c46532a8cb6f065163d0b5c1ba12364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x9EFBBA716A15C8C407A5 0xA6 SWAP6 SSTORE EXTCODESIZE XOR SWAP8 PUSH13 0x46532A8CB6F065163D0B5C1BA1 0x23 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "140:668:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 140,
									"end": 808,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220699efbba716a15c8c407a5a695553b18976c46532a8cb6f065163d0b5c1ba12364736f6c634300060c0033",
									".code": [
										{
											"begin": 140,
											"end": 808,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 140,
											"end": 808,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 140,
											"end": 808,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 140,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 140,
											"end": 808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 140,
											"end": 808,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE8 0xB3 0xE JUMP 0x22 KECCAK256 STOP 0xED 0x1F INVALID SELFBALANCE 0xC2 CODECOPY 0x2E PUSH32 0x14DB6413D7CA2BA4690B7E66E49B685C64736F6C634300060C00330000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE8 0xB3 0xE JUMP 0x22 KECCAK256 STOP 0xED 0x1F INVALID SELFBALANCE 0xC2 CODECOPY 0x2E PUSH32 0x14DB6413D7CA2BA4690B7E66E49B685C64736F6C634300060C00330000000000 ",
							"sourceMap": "630:6594:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE0 0xD1 SELFDESTRUCT PUSH32 0x2C2D733D847B459A235EE7C593115D17C8B4E8DD44CFF50888CA9864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE0 0xD1 SELFDESTRUCT PUSH32 0x2C2D733D847B459A235EE7C593115D17C8B4E8DD44CFF50888CA9864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB6 0x22 0x29 INVALID PUSH30 0x609475A1D56051D57A1B79C6D477BBA6A418596CF0C9977D3B3A64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB6 0x22 0x29 INVALID PUSH30 0x609475A1D56051D57A1B79C6D477BBA6A418596CF0C9977D3B3A64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "134:7684:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dividends/FeeDistributor.sol": {
				"FeeDistributor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeHolder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_schedulerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_wElaAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RescueTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "SetSchedulerAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardsReceiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeHolder",
									"type": "address"
								}
							],
							"name": "UpdateFeeReceivers",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "platformShareBP",
									"type": "uint256"
								}
							],
							"name": "UpdateFeeSettings",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "distributeFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeHolder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformShareBP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rescueToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "schedulerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "inputToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "outputToken",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "sellTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddr",
									"type": "address"
								}
							],
							"name": "setSchedulerAddr",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeHolder",
									"type": "address"
								}
							],
							"name": "updateFeeReceivers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_platformShareBP",
									"type": "uint256"
								}
							],
							"name": "updateFeeSettings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wElaAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dividends/FeeDistributor.sol\":368:3829  contract FeeDistributor is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dividends/FeeDistributor.sol\":974:1291  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  swap1\n  swap4\n  add\n  mload\n  swap2\n  swap3\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/Dividends/FeeDistributor.sol\":1136:1151  rewardsReceiver */\n  0x02\n    /* \"contracts/Dividends/FeeDistributor.sol\":1136:1170  rewardsReceiver = _rewardsReceiver */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Dividends/FeeDistributor.sol\":1180:1189  feeHolder */\n  0x03\n    /* \"contracts/Dividends/FeeDistributor.sol\":1180:1202  feeHolder = _feeHolder */\n  dup1\n  sload\n  swap5\n  dup7\n  and\n  swap5\n  dup3\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Dividends/FeeDistributor.sol\":1212:1228  schedulerAddress */\n  0x04\n    /* \"contracts/Dividends/FeeDistributor.sol\":1212:1248  schedulerAddress = _schedulerAddress */\n  dup1\n  sload\n  swap3\n  dup6\n  and\n  swap3\n  dup5\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Dividends/FeeDistributor.sol\":1258:1269  wElaAddress */\n  0x05\n    /* \"contracts/Dividends/FeeDistributor.sol\":1258:1284  wElaAddress = _wElaAddress */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Dividends/FeeDistributor.sol\":368:3829  contract FeeDistributor is Ownable {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Dividends/FeeDistributor.sol\":368:3829  contract FeeDistributor is Ownable {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dividends/FeeDistributor.sol\":368:3829  contract FeeDistributor is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae45850b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd7236159\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd7236159\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfca11cb8\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xae45850b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbb57ad20\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc0d46b91\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcc6be5e4\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x717815de\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x717815de\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7a2829d2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9cf38f7c\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x208995cf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x43abd319\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4460d3cf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dividends/FeeDistributor.sol\":3221:3405  function updateFeeSettings(uint256 _platformShareBP) external onlyOwner {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/Dividends/FeeDistributor.sol\":3666:3827  function setSchedulerAddr(address newAddr) external onlyAdmins {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_27\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":2976:3215  function rescueToken(address token) external onlyOwner {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_22\n      tag_32\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":616:642  address public wElaAddress */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Dividends/FeeDistributor.sol\":1662:1939  function sellTokens(address router, address inputToken, address outputToken, address[] memory path) external onlyAdmins {... */\n    tag_8:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      dup3\n      and\n      swap3\n      0x40\n      dup3\n      add\n      calldataload\n      swap1\n      swap3\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_40\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_33\n      tag_42\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":1441:1656  function removeLiquidity(address router, address lpToken) external onlyAdmins {... */\n    tag_10:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_45\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":578:609  address public schedulerAddress */\n    tag_11:\n      tag_33\n      tag_47\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":1945:2410  function distributeFees() external onlyAdmins {... */\n    tag_12:\n      tag_22\n      tag_49\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":474:504  uint256 public platformShareBP */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Dividends/FeeDistributor.sol\":547:571  address public feeHolder */\n    tag_14:\n      tag_33\n      tag_53\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":3411:3660  function updateFeeReceivers(address _rewardsReceiver, address _feeHolder) external onlyOwner {... */\n    tag_15:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_59\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":2416:2645  function test() external returns(uint,uint) {... */\n    tag_17:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/Dividends/FeeDistributor.sol\":511:541  address public rewardsReceiver */\n    tag_18:\n      tag_33\n      tag_63\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":3221:3405  function updateFeeSettings(uint256 _platformShareBP) external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Dividends/FeeDistributor.sol\":3303:3318  platformShareBP */\n      0x01\n        /* \"contracts/Dividends/FeeDistributor.sol\":3303:3337  platformShareBP = _platformShareBP */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":3352:3398  UpdateFeeSettings(msg.sender, platformShareBP) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":3370:3380  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3352:3398  UpdateFeeSettings(msg.sender, platformShareBP) */\n      0x4707e55f0a09c2af9ce22cf5f17b652615a810a1ea25f650cb18276dee658d6e\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3221:3405  function updateFeeSettings(uint256 _platformShareBP) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":3666:3827  function setSchedulerAddr(address newAddr) external onlyAdmins {... */\n    tag_27:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1350:1366  schedulerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1346  msg.sender */\n      caller\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1366  msg.sender == schedulerAddress */\n      eq\n      dup1\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n      tag_71\n      jumpi\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      tag_72\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1389  owner */\n      tag_42\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1380  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n    tag_71:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1328:1417  require(msg.sender == schedulerAddress || msg.sender == owner(), \"onlyAdmins: FORBIDDEN\") */\n      tag_73\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x37b7363ca0b236b4b7399d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_73:\n        /* \"contracts/Dividends/FeeDistributor.sol\":3739:3755  schedulerAddress */\n      0x04\n        /* \"contracts/Dividends/FeeDistributor.sol\":3739:3765  schedulerAddress = newAddr */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":3780:3820  SetSchedulerAddress(msg.sender, newAddr) */\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":3800:3810  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3780:3820  SetSchedulerAddress(msg.sender, newAddr) */\n      0x3286106f3d6ecbfd95574eec1ebdfd0640a1d7bfea3ac1ef867907e32830ec3f\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3666:3827  function setSchedulerAddr(address newAddr) external onlyAdmins {... */\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":2976:3215  function rescueToken(address token) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/Dividends/FeeDistributor.sol\":3041:3056  uint256 balance */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":3066:3071  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":3059:3082  IERC20(token).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Dividends/FeeDistributor.sol\":3091:3095  this */\n      address\n        /* \"contracts/Dividends/FeeDistributor.sol\":3059:3097  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":3134:3143  feeHolder */\n      sload(0x03)\n        /* \"contracts/Dividends/FeeDistributor.sol\":3059:3097  IERC20(token).balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":3107:3153  IERC20(token).safeTransfer(feeHolder, balance) */\n      tag_84\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":3107:3133  IERC20(token).safeTransfer */\n      dup5\n      dup2\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3134:3143  feeHolder */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":3059:3097  IERC20(token).balanceOf(address(this)) */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":3107:3133  IERC20(token).safeTransfer */\n      tag_85\n        /* \"contracts/Dividends/FeeDistributor.sol\":3107:3153  IERC20(token).safeTransfer(feeHolder, balance) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Dividends/FeeDistributor.sol\":3168:3208  RescueTokens(msg.sender, token, balance) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3181:3191  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3168:3208  RescueTokens(msg.sender, token, balance) */\n      0x0de377c3f3362540c047602ad996510f81ec5d84f9ad151c7b6ebecce8ea6b7b\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2976:3215  function rescueToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":616:642  address public wElaAddress */\n    tag_34:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":1662:1939  function sellTokens(address router, address inputToken, address outputToken, address[] memory path) external onlyAdmins {... */\n    tag_40:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1350:1366  schedulerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1346  msg.sender */\n      caller\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1366  msg.sender == schedulerAddress */\n      eq\n      dup1\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n      tag_92\n      jumpi\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      tag_93\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1389  owner */\n      tag_42\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1380  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n    tag_92:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1328:1417  require(msg.sender == schedulerAddress || msg.sender == owner(), \"onlyAdmins: FORBIDDEN\") */\n      tag_94\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x37b7363ca0b236b4b7399d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1792:1806  uint256 amount */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":1816:1826  inputToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1809:1837  IERC20(inputToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Dividends/FeeDistributor.sol\":1846:1850  this */\n      address\n        /* \"contracts/Dividends/FeeDistributor.sol\":1809:1852  IERC20(inputToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1862:1932  RouterHelper.swapTokens(router, amount, inputToken, outputToken, path) */\n      tag_100\n        /* \"contracts/Dividends/FeeDistributor.sol\":1886:1892  router */\n      dup6\n        /* \"contracts/Dividends/FeeDistributor.sol\":1809:1852  IERC20(inputToken).balanceOf(address(this)) */\n      dup3\n        /* \"contracts/Dividends/FeeDistributor.sol\":1902:1912  inputToken */\n      dup7\n        /* \"contracts/Dividends/FeeDistributor.sol\":1914:1925  outputToken */\n      dup7\n        /* \"contracts/Dividends/FeeDistributor.sol\":1927:1931  path */\n      dup7\n        /* \"contracts/Dividends/FeeDistributor.sol\":1862:1885  RouterHelper.swapTokens */\n      tag_101\n        /* \"contracts/Dividends/FeeDistributor.sol\":1862:1932  RouterHelper.swapTokens(router, amount, inputToken, outputToken, path) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1427:1428  _ */\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1662:1939  function sellTokens(address router, address inputToken, address outputToken, address[] memory path) external onlyAdmins {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":1441:1656  function removeLiquidity(address router, address lpToken) external onlyAdmins {... */\n    tag_45:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1350:1366  schedulerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1346  msg.sender */\n      caller\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1366  msg.sender == schedulerAddress */\n      eq\n      dup1\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      tag_105\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1389  owner */\n      tag_42\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1380  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n    tag_104:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1328:1417  require(msg.sender == schedulerAddress || msg.sender == owner(), \"onlyAdmins: FORBIDDEN\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x37b7363ca0b236b4b7399d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1529:1543  uint256 amount */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":1553:1560  lpToken */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1546:1571  IERC20(lpToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Dividends/FeeDistributor.sol\":1580:1584  this */\n      address\n        /* \"contracts/Dividends/FeeDistributor.sol\":1546:1586  IERC20(lpToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1596:1649  RouterHelper.removeLiquidity(router, lpToken, amount) */\n      tag_112\n        /* \"contracts/Dividends/FeeDistributor.sol\":1625:1631  router */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":1633:1640  lpToken */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":1546:1586  IERC20(lpToken).balanceOf(address(this)) */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":1596:1624  RouterHelper.removeLiquidity */\n      tag_113\n        /* \"contracts/Dividends/FeeDistributor.sol\":1596:1649  RouterHelper.removeLiquidity(router, lpToken, amount) */\n      jump\t// in\n    tag_112:\n      pop\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1427:1428  _ */\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1441:1656  function removeLiquidity(address router, address lpToken) external onlyAdmins {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":578:609  address public schedulerAddress */\n    tag_47:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":1945:2410  function distributeFees() external onlyAdmins {... */\n    tag_49:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1350:1366  schedulerAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1346  msg.sender */\n      caller\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1366  msg.sender == schedulerAddress */\n      eq\n      dup1\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n      tag_115\n      jumpi\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      tag_116\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1389  owner */\n      tag_42\n        /* \"contracts/Dividends/FeeDistributor.sol\":1384:1391  owner() */\n      jump\t// in\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1380  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":1370:1391  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/Dividends/FeeDistributor.sol\":1336:1391  msg.sender == schedulerAddress || msg.sender == owner() */\n    tag_115:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1328:1417  require(msg.sender == schedulerAddress || msg.sender == owner(), \"onlyAdmins: FORBIDDEN\") */\n      tag_117\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x59, 0x37b7363ca0b236b4b7399d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2027:2038  wElaAddress */\n      sload(0x05)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":2058:2062  this */\n      address\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":2002:2017  uint256 balance */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2027:2038  wElaAddress */\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2049  IERC20(wElaAddress).balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2027:2038  wElaAddress */\n      dup7\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":2112:2127  platformShareBP */\n      sload(0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2075:2097  uint256 platformAmount */\n      0x00\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2139  balance.mul(platformShareBP).div(10000) */\n      tag_123\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2133:2138  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2128  balance.mul(platformShareBP) */\n      tag_124\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2020:2064  IERC20(wElaAddress).balanceOf(address(this)) */\n      dup6\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2111  balance.mul */\n      tag_125\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2128  balance.mul(platformShareBP) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2132  balance.mul(platformShareBP).div */\n      swap1\n      tag_126\n        /* \"contracts/Dividends/FeeDistributor.sol\":2100:2139  balance.mul(platformShareBP).div(10000) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2075:2139  uint256 platformAmount = balance.mul(platformShareBP).div(10000) */\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2149:2171  uint256 receiverAmount */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":2174:2201  balance.sub(platformAmount) */\n      tag_127\n        /* \"contracts/Dividends/FeeDistributor.sol\":2174:2181  balance */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2075:2139  uint256 platformAmount = balance.mul(platformShareBP).div(10000) */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2174:2185  balance.sub */\n      tag_128\n        /* \"contracts/Dividends/FeeDistributor.sol\":2174:2201  balance.sub(platformAmount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2254:2269  rewardsReceiver */\n      sload(0x02)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2219:2230  wElaAddress */\n      sload(0x05)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2149:2201  uint256 receiverAmount = balance.sub(platformAmount) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2212:2286  IERC20(wElaAddress).safeIncreaseAllowance(rewardsReceiver, receiverAmount) */\n      tag_129\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2219:2230  wElaAddress */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2254:2269  rewardsReceiver */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":2149:2201  uint256 receiverAmount = balance.sub(platformAmount) */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2212:2253  IERC20(wElaAddress).safeIncreaseAllowance */\n      tag_130\n        /* \"contracts/Dividends/FeeDistributor.sol\":2212:2286  IERC20(wElaAddress).safeIncreaseAllowance(rewardsReceiver, receiverAmount) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2309:2324  rewardsReceiver */\n      sload(0x02)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2296:2348  IFeeReceiver(rewardsReceiver).income(receiverAmount) */\n      0x40\n      dup1\n      mload\n      0x84ed8c5600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2309:2324  rewardsReceiver */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2296:2332  IFeeReceiver(rewardsReceiver).income */\n      0x84ed8c56\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2296:2348  IFeeReceiver(rewardsReceiver).income(receiverAmount) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"contracts/Dividends/FeeDistributor.sol\":2309:2324  rewardsReceiver */\n      0x00\n      swap3\n        /* \"contracts/Dividends/FeeDistributor.sol\":2296:2348  IFeeReceiver(rewardsReceiver).income(receiverAmount) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2309:2324  rewardsReceiver */\n      dup4\n      dup8\n        /* \"contracts/Dividends/FeeDistributor.sol\":2296:2348  IFeeReceiver(rewardsReceiver).income(receiverAmount) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2377:2386  feeHolder */\n      sload(0x03)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2359:2403  safeTokenTransfer(feeHolder, platformAmount) */\n      tag_134\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2377:2386  feeHolder */\n      and\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2388:2402  platformAmount */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2359:2376  safeTokenTransfer */\n      tag_135\n        /* \"contracts/Dividends/FeeDistributor.sol\":2359:2403  safeTokenTransfer(feeHolder, platformAmount) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/Dividends/FeeDistributor.sol\":1427:1428  _ */\n      pop\n      pop\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":1945:2410  function distributeFees() external onlyAdmins {... */\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":474:504  uint256 public platformShareBP */\n    tag_51:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":547:571  address public feeHolder */\n    tag_53:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":3411:3660  function updateFeeReceivers(address _rewardsReceiver, address _feeHolder) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/Dividends/FeeDistributor.sol\":3514:3529  rewardsReceiver */\n      0x02\n        /* \"contracts/Dividends/FeeDistributor.sol\":3514:3548  rewardsReceiver = _rewardsReceiver */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      swap3\n      dup4\n      and\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":3558:3567  feeHolder */\n      0x03\n        /* \"contracts/Dividends/FeeDistributor.sol\":3558:3580  feeHolder = _feeHolder */\n      dup1\n      sload\n      dup6\n      dup4\n      and\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":3595:3653  UpdateFeeReceivers(msg.sender, rewardsReceiver, feeHolder) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":3626:3641  rewardsReceiver */\n      swap4\n      dup3\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":3595:3653  UpdateFeeReceivers(msg.sender, rewardsReceiver, feeHolder) */\n      dup5\n      mstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":3643:3652  feeHolder */\n      swap2\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":3595:3653  UpdateFeeReceivers(msg.sender, rewardsReceiver, feeHolder) */\n      0x20\n      dup4\n      add\n      mstore\n      dup1\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":3614:3624  msg.sender */\n      caller\n      swap3\n        /* \"contracts/Dividends/FeeDistributor.sol\":3595:3653  UpdateFeeReceivers(msg.sender, rewardsReceiver, feeHolder) */\n      0xe21787ff2af43740120359435dbc79c3d7431032c8974862cbc5c8dbaa207fe6\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/Dividends/FeeDistributor.sol\":3411:3660  function updateFeeReceivers(address _rewardsReceiver, address _feeHolder) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      swap3\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":2416:2645  function test() external returns(uint,uint) {... */\n    tag_61:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2449:2453  uint */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":2454:2458  uint */\n      dup1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2471:2483  uint balance */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":2486:2493  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Dividends/FeeDistributor.sol\":2471:2493  uint balance = 1 ether */\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2503:2525  uint256 platformAmount */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2567  balance.mul(platformShareBP).div(10000) */\n      tag_148\n        /* \"contracts/Dividends/FeeDistributor.sol\":2561:2566  10000 */\n      0x2710\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2556  balance.mul(platformShareBP) */\n      tag_124\n        /* \"contracts/Dividends/FeeDistributor.sol\":2540:2555  platformShareBP */\n      sload(0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2535  balance */\n      dup6\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2539  balance.mul */\n      tag_125\n      swap1\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2556  balance.mul(platformShareBP) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Dividends/FeeDistributor.sol\":2528:2567  balance.mul(platformShareBP).div(10000) */\n    tag_148:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2503:2567  uint256 platformAmount = balance.mul(platformShareBP).div(10000) */\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2577:2599  uint256 receiverAmount */\n      0x00\n        /* \"contracts/Dividends/FeeDistributor.sol\":2602:2629  balance.sub(platformAmount) */\n      tag_150\n        /* \"contracts/Dividends/FeeDistributor.sol\":2602:2609  balance */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2503:2567  uint256 platformAmount = balance.mul(platformShareBP).div(10000) */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2602:2613  balance.sub */\n      tag_128\n        /* \"contracts/Dividends/FeeDistributor.sol\":2602:2629  balance.sub(platformAmount) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2577:2629  uint256 receiverAmount = balance.sub(platformAmount) */\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2416:2645  function test() external returns(uint,uint) {... */\n      pop\n      pop\n      pop\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":511:541  address public rewardsReceiver */\n    tag_63:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_134\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":650:1710  function swapTokens(address router, uint256 amount, address inputToken, address outputToken, address[] memory path) internal returns (uint256) {... */\n    tag_101:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":784:791  uint256 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":821:832  outputToken */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":807:832  inputToken == outputToken */\n      and\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":807:817  inputToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":807:832  inputToken == outputToken */\n      and\n      eq\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":803:872  if (inputToken == outputToken) {... */\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":855:861  amount */\n      dup4\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":848:861  return amount */\n      jump(tag_155)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":803:872  if (inputToken == outputToken) {... */\n    tag_156:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":904:905  0 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":890:894  path */\n      dup3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":890:901  path.length */\n      mload\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":890:905  path.length > 0 */\n      gt\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":882:934  require(path.length > 0, \"swapTokens: INVALID PATH\") */\n      tag_157\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x73776170546f6b656e733a20494e56414c494420504154480000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":963:973  inputToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":952:973  path[0] == inputToken */\n      and\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":952:956  path */\n      dup3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":957:958  0 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":952:959  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":952:973  path[0] == inputToken */\n      and\n      eq\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":944:1002  require(path[0] == inputToken, \"swapTokens: INVALID PATH\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x73776170546f6b656e733a20494e56414c494420504154480000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1045:1056  outputToken */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1020:1056  path[path.length - 1] == outputToken */\n      and\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1020:1024  path */\n      dup3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1039:1040  1 */\n      0x01\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1025:1029  path */\n      dup5\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1025:1036  path.length */\n      mload\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1025:1040  path.length - 1 */\n      sub\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1020:1041  path[path.length - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      invalid\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1020:1056  path[path.length - 1] == outputToken */\n      and\n      eq\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1012:1085  require(path[path.length - 1] == outputToken, \"swapTokens: INVALID PATH\") */\n      tag_161\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x73776170546f6b656e733a20494e56414c494420504154480000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1096:1117  uint256 inputTokenBal */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1127:1137  inputToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1120:1148  IERC20(inputToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1157:1161  this */\n      address\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1120:1163  IERC20(inputToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1181:1204  inputTokenBal >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1173:1240  require(inputTokenBal >= amount, \"swapTokens: INSUFFICIENT AMOUNT\") */\n      tag_166\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x73776170546f6b656e733a20494e53554646494349454e5420414d4f554e5400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1251:1273  uint256 outputTokenBal */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1283:1294  outputToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1276:1305  IERC20(outputToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1314:1318  this */\n      address\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1276:1320  IERC20(outputToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1331:1387  IERC20(inputToken).safeIncreaseAllowance(router, amount) */\n      tag_171\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1331:1371  IERC20(inputToken).safeIncreaseAllowance */\n      dup8\n      and\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1372:1378  router */\n      dup10\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1380:1386  amount */\n      dup10\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1331:1371  IERC20(inputToken).safeIncreaseAllowance */\n      tag_130\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1331:1387  IERC20(inputToken).safeIncreaseAllowance(router, amount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1410:1416  router */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1397:1471  IGlideRouter(router).swapExactTokensForTokensSupportingFeeOnTransferTokens */\n      and\n      0x5c11d795\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1485:1491  amount */\n      dup9\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1505:1506  0 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1520:1524  path */\n      dup8\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1546:1550  this */\n      address\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1565:1580  getTxDeadline() */\n      tag_172\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1565:1578  getTxDeadline */\n      tag_173\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1565:1580  getTxDeadline() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1397:1590  IGlideRouter(router).swapExactTokensForTokensSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_174:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_176\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_174)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1601:1614  uint256 gains */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1617:1681  IERC20(outputToken).balanceOf(address(this)).sub(outputTokenBal) */\n      tag_180\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1666:1680  outputTokenBal */\n      dup3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1624:1635  outputToken */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1617:1646  IERC20(outputToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1655:1659  this */\n      address\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1617:1661  IERC20(outputToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      mload\n      swap1\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1617:1665  IERC20(outputToken).balanceOf(address(this)).sub */\n      tag_128\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1617:1681  IERC20(outputToken).balanceOf(address(this)).sub(outputTokenBal) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":1601:1681  uint256 gains = IERC20(outputToken).balanceOf(address(this)).sub(outputTokenBal) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":650:1710  function swapTokens(address router, uint256 amount, address inputToken, address outputToken, address[] memory path) internal returns (uint256) {... */\n    tag_155:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2418:3068  function removeLiquidity(... */\n    tag_113:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2548:2555  uint256 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2557:2564  uint256 */\n      dup1\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2575:2596  address token0Address */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2610:2621  pairAddress */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2599:2629  IGlidePair(pairAddress).token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2599:2631  IGlidePair(pairAddress).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      mload\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2697  IGlidePair(pairAddress).token1() */\n      0x40\n      dup1\n      mload\n      0xd21220a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2599:2631  IGlidePair(pairAddress).token0() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2641:2662  address token1Address */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2695  IGlidePair(pairAddress).token1 */\n      dup9\n      and\n      swap2\n      0xd21220a7\n      swap2\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2697  IGlidePair(pairAddress).token1() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2599:2631  IGlidePair(pairAddress).token0() */\n      0x20\n      swap3\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2697  IGlidePair(pairAddress).token1() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2695  IGlidePair(pairAddress).token1 */\n      dup7\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2665:2697  IGlidePair(pairAddress).token1() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2708:2769  IERC20(pairAddress).safeIncreaseAllowance(router, pairAmount) */\n      tag_194\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2708:2749  IERC20(pairAddress).safeIncreaseAllowance */\n      dup8\n      and\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2750:2756  router */\n      dup9\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2758:2768  pairAmount */\n      dup8\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2708:2749  IERC20(pairAddress).safeIncreaseAllowance */\n      tag_130\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2708:2769  IERC20(pairAddress).safeIncreaseAllowance(router, pairAmount) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2780:2795  uint256 amount0 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2797:2812  uint256 amount1 */\n      dup1\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2829:2835  router */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2816:2852  IGlideRouter(router).removeLiquidity */\n      and\n      0xbaa2abde\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2866:2879  token0Address */\n      dup6\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2893:2906  token1Address */\n      dup6\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2920:2930  pairAmount */\n      dup11\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2944:2945  0 */\n      0x00\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2959:2960  0 */\n      dup1\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2982:2986  this */\n      address\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":3001:3016  getTxDeadline() */\n      tag_195\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":3001:3014  getTxDeadline */\n      tag_173\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":3001:3016  getTxDeadline() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2816:3026  IGlideRouter(router).removeLiquidity(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n      swap1\n      swap11\n      swap1\n      swap10\n      pop\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":2418:3068  function removeLiquidity(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3619:3625  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      tag_201\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3627:3635  return 0 */\n      jump(tag_200)\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_201:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3657:3658  a */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3685  c / a */\n      tag_202\n      jumpi\n      invalid\n    tag_202:\n      div\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3745:3746  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_200:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_205\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_205:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_206\n      jumpi\n      invalid\n    tag_206:\n      div\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_208\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_208:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1967:2250  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2063:2083  uint256 newAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2136  token.allowance(address(this), spender).add(value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2130:2135  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2091  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2101  token.allowance */\n      and\n      0xdd62ed3e\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2110:2114  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2117:2124  spender */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2125  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      mload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2129  token.allowance(address(this), spender).add */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2086:2136  token.allowance(address(this), spender).add(value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2173:2242  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2196:2218  token.approve.selector */\n      0x095ea7b300000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2173:2242  abi.encodeWithSelector(token.approve.selector, spender, newAllowance) */\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2063:2136  uint256 newAllowance = token.allowance(address(this), spender).add(value) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2146:2243  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      tag_216\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2166:2171  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2146:2165  _callOptionalReturn */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2146:2243  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance)) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1967:2250  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/FeeDistributor.sol\":2651:2970  function safeTokenTransfer(address to, uint256 amount) internal {... */\n    tag_135:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2750:2761  wElaAddress */\n      sload(0x05)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2743:2787  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Dividends/FeeDistributor.sol\":2781:2785  this */\n      address\n        /* \"contracts/Dividends/FeeDistributor.sol\":2743:2787  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/Dividends/FeeDistributor.sol\":2725:2740  uint256 balance */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2750:2761  wElaAddress */\n      and\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2743:2772  IERC20(wElaAddress).balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2743:2787  IERC20(wElaAddress).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Dividends/FeeDistributor.sol\":2750:2761  wElaAddress */\n      dup7\n        /* \"contracts/Dividends/FeeDistributor.sol\":2743:2787  IERC20(wElaAddress).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Dividends/FeeDistributor.sol\":2801:2817  amount > balance */\n      dup1\n      dup3\n      gt\n        /* \"contracts/Dividends/FeeDistributor.sol\":2797:2964  if (amount > balance) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/Dividends/FeeDistributor.sol\":2840:2851  wElaAddress */\n      sload(0x05)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2833:2878  IERC20(wElaAddress).safeTransfer(to, balance) */\n      tag_223\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2840:2851  wElaAddress */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":2866:2868  to */\n      dup5\n        /* \"contracts/Dividends/FeeDistributor.sol\":2870:2877  balance */\n      dup4\n        /* \"contracts/Dividends/FeeDistributor.sol\":2833:2865  IERC20(wElaAddress).safeTransfer */\n      tag_85\n        /* \"contracts/Dividends/FeeDistributor.sol\":2833:2878  IERC20(wElaAddress).safeTransfer(to, balance) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2797:2964  if (amount > balance) {... */\n      jump(tag_134)\n    tag_222:\n        /* \"contracts/Dividends/FeeDistributor.sol\":2916:2927  wElaAddress */\n      sload(0x05)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2909:2953  IERC20(wElaAddress).safeTransfer(to, amount) */\n      tag_134\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/FeeDistributor.sol\":2916:2927  wElaAddress */\n      and\n        /* \"contracts/Dividends/FeeDistributor.sol\":2942:2944  to */\n      dup5\n        /* \"contracts/Dividends/FeeDistributor.sol\":2946:2952  amount */\n      dup5\n        /* \"contracts/Dividends/FeeDistributor.sol\":2909:2941  IERC20(wElaAddress).safeTransfer */\n      tag_85\n        /* \"contracts/Dividends/FeeDistributor.sol\":2909:2953  IERC20(wElaAddress).safeTransfer(to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      and\n      tag_228\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":455:554  function getTxDeadline() private view returns (uint256){... */\n    tag_173:\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":545:547  60 */\n      0x3c\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":527:542  block.timestamp */\n      timestamp\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":527:547  block.timestamp + 60 */\n      add\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":455:554  function getTxDeadline() private view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_203\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_236\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_235:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_241\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_242\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_243:\n      0x20\n      dup4\n      lt\n      tag_245\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_243)\n    tag_245:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_248\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_247)\n    tag_248:\n      0x60\n      swap2\n      pop\n    tag_247:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_253\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_235)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_257:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_259\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_257)\n    tag_259:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_260\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_260:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212205540fdb56380e7af3da900a82ed347054cda717c121079c2347b9e988ddc5aa264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611c25380380611c258339818101604052608081101561003357600080fd5b508051602082015160408301516060909301519192909160006100546100f1565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b039586166001600160a01b03199182161790915560038054948616948216949094179093556004805492851692841692909217909155600580549190931691161790556100f5565b3390565b611b21806101046000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063ae45850b11610097578063d723615911610066578063d7236159146102c8578063f2fde38b146102f6578063f8a8fd6d1461031c578063fca11cb81461033d57610100565b8063ae45850b14610296578063bb57ad201461029e578063c0d46b91146102a6578063cc6be5e4146102c057610100565b8063717815de116100d3578063717815de146101785780637a2829d21461019c5780638da5cb5b146102605780639cf38f7c1461026857610100565b8063208995cf1461010557806343abd319146101245780634460d3cf1461014a578063715018a614610170575b600080fd5b6101226004803603602081101561011b57600080fd5b5035610345565b005b6101226004803603602081101561013a57600080fd5b50356001600160a01b03166103f7565b6101226004803603602081101561016057600080fd5b50356001600160a01b03166104d5565b610122610625565b6101806106f0565b604080516001600160a01b039092168252519081900360200190f35b610122600480360360808110156101b257600080fd5b6001600160a01b03823581169260208101358216926040820135909216918101906080810160608201356401000000008111156101ee57600080fd5b82018360208201111561020057600080fd5b8035906020019184602083028401116401000000008311171561022257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506106ff945050505050565b61018061080b565b6101226004803603604081101561027e57600080fd5b506001600160a01b038135811691602001351661081a565b610180610923565b610122610932565b6102ae610b0d565b60408051918252519081900360200190f35b610180610b13565b610122600480360360408110156102de57600080fd5b506001600160a01b0381358116916020013516610b22565b6101226004803603602081101561030c57600080fd5b50356001600160a01b0316610c15565b610324610d36565b6040805192835260208301919091528051918290030190f35b610180610d7a565b61034d610d89565b6001600160a01b031661035e61080b565b6001600160a01b0316146103b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600181905560408051828152905133917f4707e55f0a09c2af9ce22cf5f17b652615a810a1ea25f650cb18276dee658d6e919081900360200190a250565b6004546001600160a01b0316331480610428575061041361080b565b6001600160a01b0316336001600160a01b0316145b610471576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b600480546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155604080519182525133917f3286106f3d6ecbfd95574eec1ebdfd0640a1d7bfea3ac1ef867907e32830ec3f919081900360200190a250565b6104dd610d89565b6001600160a01b03166104ee61080b565b6001600160a01b031614610549576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561059857600080fd5b505afa1580156105ac573d6000803e3d6000fd5b505050506040513d60208110156105c257600080fd5b50516003549091506105e1906001600160a01b03848116911683610d8d565b6040805182815290516001600160a01b0384169133917f0de377c3f3362540c047602ad996510f81ec5d84f9ad151c7b6ebecce8ea6b7b9181900360200190a35050565b61062d610d89565b6001600160a01b031661063e61080b565b6001600160a01b031614610699576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6005546001600160a01b031681565b6004546001600160a01b0316331480610730575061071b61080b565b6001600160a01b0316336001600160a01b0316145b610779576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107c857600080fd5b505afa1580156107dc573d6000803e3d6000fd5b505050506040513d60208110156107f257600080fd5b505190506108038582868686610e0d565b505050505050565b6000546001600160a01b031690565b6004546001600160a01b031633148061084b575061083661080b565b6001600160a01b0316336001600160a01b0316145b610894576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d602081101561090d57600080fd5b5051905061091c838383611241565b5050505050565b6004546001600160a01b031681565b6004546001600160a01b0316331480610963575061094e61080b565b6001600160a01b0316336001600160a01b0316145b6109ac576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156109f757600080fd5b505afa158015610a0b573d6000803e3d6000fd5b505050506040513d6020811015610a2157600080fd5b5051600154909150600090610a459061271090610a3f90859061142a565b9061148c565b90506000610a5383836114f3565b600254600554919250610a73916001600160a01b03908116911683611550565b600254604080517f84ed8c560000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b03909216916384ed8c569160248082019260009290919082900301818387803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b5050600354610b0892506001600160a01b031690508361166f565b505050565b60015481565b6003546001600160a01b031681565b610b2a610d89565b6001600160a01b0316610b3b61080b565b6001600160a01b031614610b96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b0380851673ffffffffffffffffffffffffffffffffffffffff199283161792839055600380548583169316929092179182905560408051938216845291166020830152805133927fe21787ff2af43740120359435dbc79c3d7431032c8974862cbc5c8dbaa207fe692908290030190a25050565b610c1d610d89565b6001600160a01b0316610c2e61080b565b6001600160a01b031614610c89576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610cce5760405162461bcd60e51b8152600401808060200182810382526026815260200180611a556026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000806000670de0b6b3a764000090506000610d63612710610a3f6001548561142a90919063ffffffff16565b90506000610d7183836114f3565b90505050509091565b6002546001600160a01b031681565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610b08908490611723565b6000826001600160a01b0316846001600160a01b03161415610e30575083611238565b6000825111610e86576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b836001600160a01b031682600081518110610e9d57fe5b60200260200101516001600160a01b031614610f00576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b826001600160a01b031682600184510381518110610f1a57fe5b60200260200101516001600160a01b031614610f7d576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610fcc57600080fd5b505afa158015610fe0573d6000803e3d6000fd5b505050506040513d6020811015610ff657600080fd5b505190508581101561104f576040805162461bcd60e51b815260206004820152601f60248201527f73776170546f6b656e733a20494e53554646494349454e5420414d4f554e5400604482015290519081900360640190fd5b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561109e57600080fd5b505afa1580156110b2573d6000803e3d6000fd5b505050506040513d60208110156110c857600080fd5b505190506110e06001600160a01b0387168989611550565b876001600160a01b0316635c11d79588600087306110fc6117d4565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561116c578181015183820152602001611154565b505050509050019650505050505050600060405180830381600087803b15801561119557600080fd5b505af11580156111a9573d6000803e3d6000fd5b50505050600061123282876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561120057600080fd5b505afa158015611214573d6000803e3d6000fd5b505050506040513d602081101561122a57600080fd5b5051906114f3565b93505050505b95945050505050565b6000806000846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561127f57600080fd5b505afa158015611293573d6000803e3d6000fd5b505050506040513d60208110156112a957600080fd5b5051604080517fd21220a700000000000000000000000000000000000000000000000000000000815290519192506000916001600160a01b0388169163d21220a7916004808301926020929190829003018186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d602081101561133457600080fd5b5051905061134c6001600160a01b0387168887611550565b600080886001600160a01b031663baa2abde85858a6000803061136d6117d4565b6040518863ffffffff1660e01b815260040180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b031681526020018281526020019750505050505050506040805180830381600087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d604081101561141157600080fd5b508051602090910151909a909950975050505050505050565b60008261143957506000611486565b8282028284828161144657fe5b04146114835760405162461bcd60e51b8152600401808060200182810382526021815260200180611aa16021913960400191505060405180910390fd5b90505b92915050565b60008082116114e2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816114eb57fe5b049392505050565b60008282111561154a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006115e682856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b1580156115b457600080fd5b505afa1580156115c8573d6000803e3d6000fd5b505050506040513d60208110156115de57600080fd5b5051906117db565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052909150611669908590611723565b50505050565b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116ba57600080fd5b505afa1580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b505190508082111561170c57600554611707906001600160a01b03168483610d8d565b610b08565b600554610b08906001600160a01b03168484610d8d565b6060611778826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118359092919063ffffffff16565b805190915015610b085780806020019051602081101561179757600080fd5b5051610b085760405162461bcd60e51b815260040180806020018281038252602a815260200180611ac2602a913960400191505060405180910390fd5b603c420190565b600082820183811015611483576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060611844848460008561184e565b90505b9392505050565b60608247101561188f5760405162461bcd60e51b8152600401808060200182810382526026815260200180611a7b6026913960400191505060405180910390fd5b611898856119aa565b6118e9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106119285780518252601f199092019160209182019101611909565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461198a576040519150601f19603f3d011682016040523d82523d6000602084013e61198f565b606091505b509150915061199f8282866119b0565b979650505050505050565b3b151590565b606083156119bf575081611847565b8251156119cf5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a19578181015183820152602001611a01565b50505050905090810190601f168015611a465780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212205540fdb56380e7af3da900a82ed347054cda717c121079c2347b9e988ddc5aa264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C25 CODESIZE SUB DUP1 PUSH2 0x1C25 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 PUSH2 0x54 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP5 DUP7 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xF5 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x1B21 DUP1 PUSH2 0x104 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE45850B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD7236159 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD7236159 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xFCA11CB8 EQ PUSH2 0x33D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xAE45850B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xBB57AD20 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC0D46B91 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xCC6BE5E4 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x717815DE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x717815DE EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x7A2829D2 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9CF38F7C EQ PUSH2 0x268 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x208995CF EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x43ABD319 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x4460D3CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180 PUSH2 0x80B JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x81A JUMP JUMPDEST PUSH2 0x180 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x324 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x34D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x4707E55F0A09C2AF9CE22CF5F17B652615A810A1EA25F650CB18276DEE658D6E SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x428 JUMPI POP PUSH2 0x413 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD CALLER SWAP2 PUSH32 0x3286106F3D6ECBFD95574EEC1EBDFD0640A1D7BFEA3AC1EF867907E32830EC3F SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x5E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0xDE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x62D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x699 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x730 JUMPI POP PUSH2 0x71B PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x803 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0xE0D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x84B JUMPI POP PUSH2 0x836 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x894 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x91C DUP4 DUP4 DUP4 PUSH2 0x1241 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x963 JUMPI POP PUSH2 0x94E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x9AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xA45 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0xA3F SWAP1 DUP6 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA53 DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD SWAP2 SWAP3 POP PUSH2 0xA73 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x84ED8C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x84ED8C56 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xB08 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP4 PUSH2 0x166F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB2A PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB3B PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 DUP4 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP3 AND DUP5 MSTORE SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD CALLER SWAP3 PUSH32 0xE21787FF2AF43740120359435DBC79C3D7431032C8974862CBC5C8DBAA207FE6 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xC1D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A55 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0xD63 PUSH2 0x2710 PUSH2 0xA3F PUSH1 0x1 SLOAD DUP6 PUSH2 0x142A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD71 DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xB08 SWAP1 DUP5 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE30 JUMPI POP DUP4 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xE86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE9D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xF1A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF7D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x104F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E53554646494349454E5420414D4F554E5400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x10E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP10 DUP10 PUSH2 0x1550 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 DUP9 PUSH1 0x0 DUP8 ADDRESS PUSH2 0x10FC PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1154 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x1232 DUP3 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1214 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x14F3 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD21220A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x134C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP9 DUP8 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBAA2ABDE DUP6 DUP6 DUP11 PUSH1 0x0 DUP1 ADDRESS PUSH2 0x136D PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1439 JUMPI POP PUSH1 0x0 PUSH2 0x1486 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1446 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AA1 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x14E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x14EB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x154A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E6 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 SWAP2 POP PUSH2 0x1669 SWAP1 DUP6 SWAP1 PUSH2 0x1723 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x5 SLOAD PUSH2 0x1707 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xB08 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1778 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1835 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB08 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC2 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C TIMESTAMP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1844 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A7B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1898 DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x18E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1928 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x198F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x199F DUP3 DUP3 DUP7 PUSH2 0x19B0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x19BF JUMPI POP DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x19CF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A19 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A01 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A46 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212205540FDB5 PUSH4 0x80E7AF3D 0xA9 STOP 0xA8 0x2E 0xD3 SELFBALANCE SDIV 0x4C 0xDA PUSH18 0x7C121079C2347B9E988DDC5AA264736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "368:3461:7:-:0;;;974:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;974:317:7;;;;;;;;;;;;;;;;;;;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;1136:15:7;:34;;-1:-1:-1;;;;;1136:34:7;;;-1:-1:-1;;;;;;1136:34:7;;;;;;;1180:9;:22;;;;;;;;;;;;;;;1212:16;:36;;;;;;;;;;;;;;;1258:11;:26;;;;;;;;;;;368:3461;;598:104:6;685:10;598:104;:::o;368:3461:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063ae45850b11610097578063d723615911610066578063d7236159146102c8578063f2fde38b146102f6578063f8a8fd6d1461031c578063fca11cb81461033d57610100565b8063ae45850b14610296578063bb57ad201461029e578063c0d46b91146102a6578063cc6be5e4146102c057610100565b8063717815de116100d3578063717815de146101785780637a2829d21461019c5780638da5cb5b146102605780639cf38f7c1461026857610100565b8063208995cf1461010557806343abd319146101245780634460d3cf1461014a578063715018a614610170575b600080fd5b6101226004803603602081101561011b57600080fd5b5035610345565b005b6101226004803603602081101561013a57600080fd5b50356001600160a01b03166103f7565b6101226004803603602081101561016057600080fd5b50356001600160a01b03166104d5565b610122610625565b6101806106f0565b604080516001600160a01b039092168252519081900360200190f35b610122600480360360808110156101b257600080fd5b6001600160a01b03823581169260208101358216926040820135909216918101906080810160608201356401000000008111156101ee57600080fd5b82018360208201111561020057600080fd5b8035906020019184602083028401116401000000008311171561022257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506106ff945050505050565b61018061080b565b6101226004803603604081101561027e57600080fd5b506001600160a01b038135811691602001351661081a565b610180610923565b610122610932565b6102ae610b0d565b60408051918252519081900360200190f35b610180610b13565b610122600480360360408110156102de57600080fd5b506001600160a01b0381358116916020013516610b22565b6101226004803603602081101561030c57600080fd5b50356001600160a01b0316610c15565b610324610d36565b6040805192835260208301919091528051918290030190f35b610180610d7a565b61034d610d89565b6001600160a01b031661035e61080b565b6001600160a01b0316146103b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600181905560408051828152905133917f4707e55f0a09c2af9ce22cf5f17b652615a810a1ea25f650cb18276dee658d6e919081900360200190a250565b6004546001600160a01b0316331480610428575061041361080b565b6001600160a01b0316336001600160a01b0316145b610471576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b600480546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155604080519182525133917f3286106f3d6ecbfd95574eec1ebdfd0640a1d7bfea3ac1ef867907e32830ec3f919081900360200190a250565b6104dd610d89565b6001600160a01b03166104ee61080b565b6001600160a01b031614610549576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561059857600080fd5b505afa1580156105ac573d6000803e3d6000fd5b505050506040513d60208110156105c257600080fd5b50516003549091506105e1906001600160a01b03848116911683610d8d565b6040805182815290516001600160a01b0384169133917f0de377c3f3362540c047602ad996510f81ec5d84f9ad151c7b6ebecce8ea6b7b9181900360200190a35050565b61062d610d89565b6001600160a01b031661063e61080b565b6001600160a01b031614610699576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6005546001600160a01b031681565b6004546001600160a01b0316331480610730575061071b61080b565b6001600160a01b0316336001600160a01b0316145b610779576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b6000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156107c857600080fd5b505afa1580156107dc573d6000803e3d6000fd5b505050506040513d60208110156107f257600080fd5b505190506108038582868686610e0d565b505050505050565b6000546001600160a01b031690565b6004546001600160a01b031633148061084b575061083661080b565b6001600160a01b0316336001600160a01b0316145b610894576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b505050506040513d602081101561090d57600080fd5b5051905061091c838383611241565b5050505050565b6004546001600160a01b031681565b6004546001600160a01b0316331480610963575061094e61080b565b6001600160a01b0316336001600160a01b0316145b6109ac576040805162461bcd60e51b815260206004820152601560248201527437b7363ca0b236b4b7399d102327a92124a22222a760591b604482015290519081900360640190fd5b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156109f757600080fd5b505afa158015610a0b573d6000803e3d6000fd5b505050506040513d6020811015610a2157600080fd5b5051600154909150600090610a459061271090610a3f90859061142a565b9061148c565b90506000610a5383836114f3565b600254600554919250610a73916001600160a01b03908116911683611550565b600254604080517f84ed8c560000000000000000000000000000000000000000000000000000000081526004810184905290516001600160a01b03909216916384ed8c569160248082019260009290919082900301818387803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b5050600354610b0892506001600160a01b031690508361166f565b505050565b60015481565b6003546001600160a01b031681565b610b2a610d89565b6001600160a01b0316610b3b61080b565b6001600160a01b031614610b96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b0380851673ffffffffffffffffffffffffffffffffffffffff199283161792839055600380548583169316929092179182905560408051938216845291166020830152805133927fe21787ff2af43740120359435dbc79c3d7431032c8974862cbc5c8dbaa207fe692908290030190a25050565b610c1d610d89565b6001600160a01b0316610c2e61080b565b6001600160a01b031614610c89576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610cce5760405162461bcd60e51b8152600401808060200182810382526026815260200180611a556026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000806000670de0b6b3a764000090506000610d63612710610a3f6001548561142a90919063ffffffff16565b90506000610d7183836114f3565b90505050509091565b6002546001600160a01b031681565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610b08908490611723565b6000826001600160a01b0316846001600160a01b03161415610e30575083611238565b6000825111610e86576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b836001600160a01b031682600081518110610e9d57fe5b60200260200101516001600160a01b031614610f00576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b826001600160a01b031682600184510381518110610f1a57fe5b60200260200101516001600160a01b031614610f7d576040805162461bcd60e51b815260206004820152601860248201527f73776170546f6b656e733a20494e56414c494420504154480000000000000000604482015290519081900360640190fd5b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610fcc57600080fd5b505afa158015610fe0573d6000803e3d6000fd5b505050506040513d6020811015610ff657600080fd5b505190508581101561104f576040805162461bcd60e51b815260206004820152601f60248201527f73776170546f6b656e733a20494e53554646494349454e5420414d4f554e5400604482015290519081900360640190fd5b6000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561109e57600080fd5b505afa1580156110b2573d6000803e3d6000fd5b505050506040513d60208110156110c857600080fd5b505190506110e06001600160a01b0387168989611550565b876001600160a01b0316635c11d79588600087306110fc6117d4565b6040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561116c578181015183820152602001611154565b505050509050019650505050505050600060405180830381600087803b15801561119557600080fd5b505af11580156111a9573d6000803e3d6000fd5b50505050600061123282876001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561120057600080fd5b505afa158015611214573d6000803e3d6000fd5b505050506040513d602081101561122a57600080fd5b5051906114f3565b93505050505b95945050505050565b6000806000846001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561127f57600080fd5b505afa158015611293573d6000803e3d6000fd5b505050506040513d60208110156112a957600080fd5b5051604080517fd21220a700000000000000000000000000000000000000000000000000000000815290519192506000916001600160a01b0388169163d21220a7916004808301926020929190829003018186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d602081101561133457600080fd5b5051905061134c6001600160a01b0387168887611550565b600080886001600160a01b031663baa2abde85858a6000803061136d6117d4565b6040518863ffffffff1660e01b815260040180886001600160a01b03168152602001876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b031681526020018281526020019750505050505050506040805180830381600087803b1580156113e757600080fd5b505af11580156113fb573d6000803e3d6000fd5b505050506040513d604081101561141157600080fd5b508051602090910151909a909950975050505050505050565b60008261143957506000611486565b8282028284828161144657fe5b04146114835760405162461bcd60e51b8152600401808060200182810382526021815260200180611aa16021913960400191505060405180910390fd5b90505b92915050565b60008082116114e2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816114eb57fe5b049392505050565b60008282111561154a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006115e682856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b1580156115b457600080fd5b505afa1580156115c8573d6000803e3d6000fd5b505050506040513d60208110156115de57600080fd5b5051906117db565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052909150611669908590611723565b50505050565b600554604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156116ba57600080fd5b505afa1580156116ce573d6000803e3d6000fd5b505050506040513d60208110156116e457600080fd5b505190508082111561170c57600554611707906001600160a01b03168483610d8d565b610b08565b600554610b08906001600160a01b03168484610d8d565b6060611778826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118359092919063ffffffff16565b805190915015610b085780806020019051602081101561179757600080fd5b5051610b085760405162461bcd60e51b815260040180806020018281038252602a815260200180611ac2602a913960400191505060405180910390fd5b603c420190565b600082820183811015611483576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060611844848460008561184e565b90505b9392505050565b60608247101561188f5760405162461bcd60e51b8152600401808060200182810382526026815260200180611a7b6026913960400191505060405180910390fd5b611898856119aa565b6118e9576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106119285780518252601f199092019160209182019101611909565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461198a576040519150601f19603f3d011682016040523d82523d6000602084013e61198f565b606091505b509150915061199f8282866119b0565b979650505050505050565b3b151590565b606083156119bf575081611847565b8251156119cf5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a19578181015183820152602001611a01565b50505050905090810190601f168015611a465780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212205540fdb56380e7af3da900a82ed347054cda717c121079c2347b9e988ddc5aa264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE45850B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD7236159 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD7236159 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xFCA11CB8 EQ PUSH2 0x33D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xAE45850B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xBB57AD20 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC0D46B91 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xCC6BE5E4 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x717815DE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x717815DE EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x7A2829D2 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9CF38F7C EQ PUSH2 0x268 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x208995CF EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x43ABD319 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x4460D3CF EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x625 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x6FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x180 PUSH2 0x80B JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x81A JUMP JUMPDEST PUSH2 0x180 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x122 PUSH2 0x932 JUMP JUMPDEST PUSH2 0x2AE PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x324 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x34D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x35E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x4707E55F0A09C2AF9CE22CF5F17B652615A810A1EA25F650CB18276DEE658D6E SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x428 JUMPI POP PUSH2 0x413 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD CALLER SWAP2 PUSH32 0x3286106F3D6ECBFD95574EEC1EBDFD0640A1D7BFEA3AC1EF867907E32830EC3F SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x4DD PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EE PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x549 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x5E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0xDE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x62D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x699 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x730 JUMPI POP PUSH2 0x71B PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x803 DUP6 DUP3 DUP7 DUP7 DUP7 PUSH2 0xE0D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x84B JUMPI POP PUSH2 0x836 PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x894 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x91C DUP4 DUP4 DUP4 PUSH2 0x1241 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x963 JUMPI POP PUSH2 0x94E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x9AC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x37B7363CA0B236B4B7399D102327A92124A22222A7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xA45 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0xA3F SWAP1 DUP6 SWAP1 PUSH2 0x142A JUMP JUMPDEST SWAP1 PUSH2 0x148C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA53 DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD SWAP2 SWAP3 POP PUSH2 0xA73 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP4 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x84ED8C5600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x84ED8C56 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xB08 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP4 PUSH2 0x166F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xB2A PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB3B PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP6 DUP4 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 DUP3 AND DUP5 MSTORE SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD CALLER SWAP3 PUSH32 0xE21787FF2AF43740120359435DBC79C3D7431032C8974862CBC5C8DBAA207FE6 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xC1D PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2E PUSH2 0x80B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A55 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0xD63 PUSH2 0x2710 PUSH2 0xA3F PUSH1 0x1 SLOAD DUP6 PUSH2 0x142A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD71 DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST SWAP1 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xB08 SWAP1 DUP5 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE30 JUMPI POP DUP4 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xE86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xE9D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF00 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xF1A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF7D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E56414C494420504154480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x104F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73776170546F6B656E733A20494E53554646494349454E5420414D4F554E5400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x10E0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP10 DUP10 PUSH2 0x1550 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C11D795 DUP9 PUSH1 0x0 DUP8 ADDRESS PUSH2 0x10FC PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1154 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x1232 DUP3 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1214 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x14F3 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x127F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xD21220A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x134C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP9 DUP8 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBAA2ABDE DUP6 DUP6 DUP11 PUSH1 0x0 DUP1 ADDRESS PUSH2 0x136D PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1439 JUMPI POP PUSH1 0x0 PUSH2 0x1486 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1446 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AA1 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x14E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x14EB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x154A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E6 DUP3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDD62ED3E ADDRESS DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 SWAP2 POP PUSH2 0x1669 SWAP1 DUP6 SWAP1 PUSH2 0x1723 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x170C JUMPI PUSH1 0x5 SLOAD PUSH2 0x1707 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0xD8D JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xB08 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1778 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1835 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB08 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AC2 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C TIMESTAMP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1844 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x184E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1A7B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1898 DUP6 PUSH2 0x19AA JUMP JUMPDEST PUSH2 0x18E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1928 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1909 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x198A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x198F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x199F DUP3 DUP3 DUP7 PUSH2 0x19B0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x19BF JUMPI POP DUP2 PUSH2 0x1847 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x19CF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A19 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A01 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A46 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212205540FDB5 PUSH4 0x80E7AF3D 0xA9 STOP 0xA8 0x2E 0xD3 SELFBALANCE SDIV 0x4C 0xDA PUSH18 0x7C121079C2347B9E988DDC5AA264736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "368:3461:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3221:184;;;;;;;;;;;;;;;;-1:-1:-1;3221:184:7;;:::i;:::-;;3666:161;;;;;;;;;;;;;;;;-1:-1:-1;3666:161:7;-1:-1:-1;;;;;3666:161:7;;:::i;2976:239::-;;;;;;;;;;;;;;;;-1:-1:-1;2976:239:7;-1:-1:-1;;;;;2976:239:7;;:::i;1717:145:0:-;;;:::i;616:26:7:-;;;:::i;:::-;;;;-1:-1:-1;;;;;616:26:7;;;;;;;;;;;;;;1662:277;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1662:277:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1662:277:7;;-1:-1:-1;1662:277:7;;-1:-1:-1;;;;;1662:277:7:i;1085:85:0:-;;;:::i;1441:215:7:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1441:215:7;;;;;;;;;;:::i;578:31::-;;;:::i;1945:465::-;;;:::i;474:30::-;;;:::i;:::-;;;;;;;;;;;;;;;;547:24;;;:::i;3411:249::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3411:249:7;;;;;;;;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;2416:229:7:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;511:30;;;:::i;3221:184::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3303:15:7::1;:34:::0;;;3352:46:::1;::::0;;;;;;;3370:10:::1;::::0;3352:46:::1;::::0;;;;;::::1;::::0;;::::1;3221:184:::0;:::o;3666:161::-;1350:16;;-1:-1:-1;;;;;1350:16:7;1336:10;:30;;:55;;;1384:7;:5;:7::i;:::-;-1:-1:-1;;;;;1370:21:7;:10;-1:-1:-1;;;;;1370:21:7;;1336:55;1328:89;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;;;;3739:16:::1;:26:::0;;-1:-1:-1;;;;;3739:26:7;::::1;-1:-1:-1::0;;3739:26:7;;::::1;::::0;::::1;::::0;;;3780:40:::1;::::0;;;;;;3800:10:::1;::::0;3780:40:::1;::::0;;;;;::::1;::::0;;::::1;3666:161:::0;:::o;2976:239::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:15:7::1;3066:5;-1:-1:-1::0;;;;;3059:23:7::1;;3091:4;3059:38;;;;;;;;;;;;;-1:-1:-1::0;;;;;3059:38:7::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3059:38:7;3134:9:::1;::::0;3059:38;;-1:-1:-1;3107:46:7::1;::::0;-1:-1:-1;;;;;3107:26:7;;::::1;::::0;3134:9:::1;3059:38:::0;3107:26:::1;:46::i;:::-;3168:40;::::0;;;;;;;-1:-1:-1;;;;;3168:40:7;::::1;::::0;3181:10:::1;::::0;3168:40:::1;::::0;;;;::::1;::::0;;::::1;1367:1:0;2976:239:7::0;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;1836:19:0::1;::::0;;1717:145::o;616:26:7:-;;;-1:-1:-1;;;;;616:26:7;;:::o;1662:277::-;1350:16;;-1:-1:-1;;;;;1350:16:7;1336:10;:30;;:55;;;1384:7;:5;:7::i;:::-;-1:-1:-1;;;;;1370:21:7;:10;-1:-1:-1;;;;;1370:21:7;;1336:55;1328:89;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;;;;1792:14:::1;1816:10;-1:-1:-1::0;;;;;1809:28:7::1;;1846:4;1809:43;;;;;;;;;;;;;-1:-1:-1::0;;;;;1809:43:7::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;1809:43:7;;-1:-1:-1;1862:70:7::1;1886:6:::0;1809:43;1902:10;1914:11;1927:4;1862:23:::1;:70::i;:::-;;1427:1;1662:277:::0;;;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;1441:215:7:-;1350:16;;-1:-1:-1;;;;;1350:16:7;1336:10;:30;;:55;;;1384:7;:5;:7::i;:::-;-1:-1:-1;;;;;1370:21:7;:10;-1:-1:-1;;;;;1370:21:7;;1336:55;1328:89;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;;;;1529:14:::1;1553:7;-1:-1:-1::0;;;;;1546:25:7::1;;1580:4;1546:40;;;;;;;;;;;;;-1:-1:-1::0;;;;;1546:40:7::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;1546:40:7;;-1:-1:-1;1596:53:7::1;1625:6:::0;1633:7;1546:40;1596:28:::1;:53::i;:::-;;;1427:1;1441:215:::0;;:::o;578:31::-;;;-1:-1:-1;;;;;578:31:7;;:::o;1945:465::-;1350:16;;-1:-1:-1;;;;;1350:16:7;1336:10;:30;;:55;;;1384:7;:5;:7::i;:::-;-1:-1:-1;;;;;1370:21:7;:10;-1:-1:-1;;;;;1370:21:7;;1336:55;1328:89;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;-1:-1:-1;;;1328:89:7;;;;;;;;;;;;;;;2027:11:::1;::::0;2020:44:::1;::::0;;-1:-1:-1;;;2020:44:7;;2058:4:::1;2020:44;::::0;::::1;::::0;;;2002:15:::1;::::0;-1:-1:-1;;;;;2027:11:7::1;::::0;2020:29:::1;::::0;:44;;;;;::::1;::::0;;;;;;;;2027:11;2020:44;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2020:44:7;2112:15:::1;::::0;2020:44;;-1:-1:-1;2075:22:7::1;::::0;2100:39:::1;::::0;2133:5:::1;::::0;2100:28:::1;::::0;2020:44;;2100:11:::1;:28::i;:::-;:32:::0;::::1;:39::i;:::-;2075:64:::0;-1:-1:-1;2149:22:7::1;2174:27;:7:::0;2075:64;2174:11:::1;:27::i;:::-;2254:15;::::0;2219:11:::1;::::0;2149:52;;-1:-1:-1;2212:74:7::1;::::0;-1:-1:-1;;;;;2219:11:7;;::::1;::::0;2254:15:::1;2149:52:::0;2212:41:::1;:74::i;:::-;2309:15;::::0;2296:52:::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;2309:15:7;;::::1;::::0;2296:36:::1;::::0;:52;;;;;2309:15:::1;::::0;2296:52;;;;;;;;2309:15;;2296:52;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2377:9:7::1;::::0;2359:44:::1;::::0;-1:-1:-1;;;;;;2377:9:7::1;::::0;-1:-1:-1;2388:14:7;2359:17:::1;:44::i;:::-;1427:1;;;1945:465::o:0;474:30::-;;;;:::o;547:24::-;;;-1:-1:-1;;;;;547:24:7;;:::o;3411:249::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3514:15:7::1;:34:::0;;-1:-1:-1;;;;;3514:34:7;;::::1;-1:-1:-1::0;;3514:34:7;;::::1;;::::0;;;;3558:9:::1;:22:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;3595:58:::1;::::0;;3626:15;;::::1;3595:58:::0;;3643:9;::::1;3595:58;::::0;::::1;::::0;;;3614:10:::1;::::0;3595:58:::1;::::0;;;;;;;::::1;3411:249:::0;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;2416:229:7:-;2449:4;2454;2471:12;2486:7;2471:22;;2503;2528:39;2561:5;2528:28;2540:15;;2528:7;:11;;:28;;;;:::i;:39::-;2503:64;-1:-1:-1;2577:22:7;2602:27;:7;2503:64;2602:11;:27::i;:::-;2577:52;;2416:229;;;;;:::o;511:30::-;;;-1:-1:-1;;;;;511:30:7;;:::o;598:104:6:-;685:10;598:104;:::o;704:175:4:-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:23;813:58;;;786:86;;806:5;;786:19;:86::i;650:1060:11:-;784:7;821:11;-1:-1:-1;;;;;807:25:11;:10;-1:-1:-1;;;;;807:25:11;;803:69;;;-1:-1:-1;855:6:11;848:13;;803:69;904:1;890:4;:11;:15;882:52;;;;;-1:-1:-1;;;882:52:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:10;-1:-1:-1;;;;;952:21:11;:4;957:1;952:7;;;;;;;;;;;;;;-1:-1:-1;;;;;952:21:11;;944:58;;;;;-1:-1:-1;;;944:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1045:11;-1:-1:-1;;;;;1020:36:11;:4;1039:1;1025:4;:11;:15;1020:21;;;;;;;;;;;;;;-1:-1:-1;;;;;1020:36:11;;1012:73;;;;;-1:-1:-1;;;1012:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:21;1127:10;-1:-1:-1;;;;;1120:28:11;;1157:4;1120:43;;;;;;;;;;;;;-1:-1:-1;;;;;1120:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1120:43:11;;-1:-1:-1;1181:23:11;;;;1173:67;;;;;-1:-1:-1;;;1173:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:22;1283:11;-1:-1:-1;;;;;1276:29:11;;1314:4;1276:44;;;;;;;;;;;;;-1:-1:-1;;;;;1276:44:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1276:44:11;;-1:-1:-1;1331:56:11;-1:-1:-1;;;;;1331:40:11;;1372:6;1380;1331:40;:56::i;:::-;1410:6;-1:-1:-1;;;;;1397:74:11;;1485:6;1505:1;1520:4;1546;1565:15;:13;:15::i;:::-;1397:193;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1397:193:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:13;1617:64;1666:14;1624:11;-1:-1:-1;;;;;1617:29:11;;1655:4;1617:44;;;;;;;;;;;;;-1:-1:-1;;;;;1617:44:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1617:44:11;;:48;:64::i;:::-;1601:80;-1:-1:-1;;;;650:1060:11;;;;;;;;:::o;2418:650::-;2548:7;2557;2575:21;2610:11;-1:-1:-1;;;;;2599:30:11;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2599:32:11;2665;;;;;;;;2599;;-1:-1:-1;2641:21:11;;-1:-1:-1;;;;;2665:30:11;;;;;:32;;;;;2599;;2665;;;;;;;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2665:32:11;;-1:-1:-1;2708:61:11;-1:-1:-1;;;;;2708:41:11;;2750:6;2758:10;2708:41;:61::i;:::-;2780:15;2797;2829:6;-1:-1:-1;;;;;2816:36:11;;2866:13;2893;2920:10;2944:1;2959;2982:4;3001:15;:13;:15::i;:::-;2816:210;;;;;;;;;;;;;-1:-1:-1;;;;;2816:210:11;;;;;;-1:-1:-1;;;;;2816:210:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2816:210:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2816:210:11;;;;;;;;;;;-1:-1:-1;2418:650:11;-1:-1:-1;;;;;;;;2418:650:11:o;3538:215:2:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:2;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;-1:-1:-1;3538:215:2;;;;;:::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:2:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:2;;;3136:155::o;1967:283:4:-;2063:20;2086:50;2130:5;2086;-1:-1:-1;;;;;2086:15:4;;2110:4;2117:7;2086:39;;;;;;;;;;;;;-1:-1:-1;;;;;2086:39:4;;;;;;-1:-1:-1;;;;;2086:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2086:39:4;;:43;:50::i;:::-;2173:69;;;-1:-1:-1;;;;;2173:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:22;2173:69;;;2063:73;;-1:-1:-1;2146:97:4;;2166:5;;2146:19;:97::i;:::-;1967:283;;;;:::o;2651:319:7:-;2750:11;;2743:44;;;-1:-1:-1;;;2743:44:7;;2781:4;2743:44;;;;;;2725:15;;-1:-1:-1;;;;;2750:11:7;;2743:29;;:44;;;;;;;;;;;;;;2750:11;2743:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2743:44:7;;-1:-1:-1;2801:16:7;;;2797:167;;;2840:11;;2833:45;;-1:-1:-1;;;;;2840:11:7;2866:2;2870:7;2833:32;:45::i;:::-;2797:167;;;2916:11;;2909:44;;-1:-1:-1;;;;;2916:11:7;2942:2;2946:6;2909:32;:44::i;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;455:99:11;545:2;527:15;:20;455:99;:::o;2690:175:2:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:5;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1389000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"distributeFees()": "infinite",
								"feeHolder()": "1126",
								"owner()": "1104",
								"platformShareBP()": "1065",
								"removeLiquidity(address,address)": "infinite",
								"renounceOwnership()": "24333",
								"rescueToken(address)": "infinite",
								"rewardsReceiver()": "1125",
								"schedulerAddress()": "1060",
								"sellTokens(address,address,address,address[])": "infinite",
								"setSchedulerAddr(address)": "24294",
								"test()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateFeeReceivers(address,address)": "44603",
								"updateFeeSettings(uint256)": "22594",
								"wElaAddress()": "1060"
							},
							"internal": {
								"safeTokenTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 974,
									"end": 1291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1136,
									"end": 1151,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1136,
									"end": 1170,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1189,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1202,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1228,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1248,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1269,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 3829,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205540fdb56380e7af3da900a82ed347054cda717c121079c2347b9e988ddc5aa264736f6c634300060c0033",
									".code": [
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "AE45850B"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "D7236159"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "D7236159"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "F8A8FD6D"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "FCA11CB8"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "AE45850B"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "BB57AD20"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "C0D46B91"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "CC6BE5E4"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "717815DE"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "717815DE"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "7A2829D2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "9CF38F7C"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "208995CF"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "43ABD319"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "4460D3CF"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 3829,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 547,
											"end": 571,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3337,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "4707E55F0A09C2AF9CE22CF5F17B652615A810A1EA25F650CB18276DEE658D6E"
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3398,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3405,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363CA0B236B4B7399D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3755,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 3810,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 3810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "3286106F3D6ECBFD95574EEC1EBDFD0640A1D7BFEA3AC1EF867907E32830EC3F"
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3820,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3827,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3041,
											"end": 3056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3091,
											"end": 3095,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3107,
											"end": 3153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3133,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3133,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3133,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3097,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 3107,
											"end": 3153,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3107,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "DE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B"
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3208,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 3215,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 616,
											"end": 642,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 616,
											"end": 642,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 642,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363CA0B236B4B7399D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1837,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1925,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1931,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1862,
											"end": 1932,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1862,
											"end": 1932,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1862,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1862,
											"end": 1932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1939,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363CA0B236B4B7399D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1571,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1571,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 1580,
											"end": 1584,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1656,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 578,
											"end": 609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 609,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 578,
											"end": 609,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 578,
											"end": 609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 578,
											"end": 609,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1350,
											"end": 1366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1366,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1370,
											"end": 1391,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1336,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363CA0B236B4B7399D102327A92124A22222A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1328,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2049,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2020,
											"end": 2049,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2038,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2127,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2100,
											"end": 2139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2100,
											"end": 2139,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2139,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2100,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2149,
											"end": 2171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2139,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2174,
											"end": 2201,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2201,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 2174,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2201,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2201,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2212,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "84ED8C5600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2332,
											"name": "PUSH",
											"source": 7,
											"value": "84ED8C56"
										},
										{
											"begin": 2296,
											"end": 2332,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2324,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2296,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2410,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 474,
											"end": 504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 474,
											"end": 504,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 547,
											"end": 571,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 547,
											"end": 571,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 547,
											"end": 571,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 547,
											"end": 571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 571,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3529,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3548,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3567,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3641,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3652,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3624,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "PUSH",
											"source": 7,
											"value": "E21787FF2AF43740120359435DBC79C3D7431032C8974862CBC5C8DBAA207FE6"
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3653,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3660,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "PUSH",
											"source": 7,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2471,
											"end": 2493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2540,
											"end": 2555,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2528,
											"end": 2539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2556,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2528,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2602,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2645,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 511,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 511,
											"end": 541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 511,
											"end": 541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 511,
											"end": 541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 541,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 784,
											"end": 791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 832,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 832,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 807,
											"end": 817,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 807,
											"end": 832,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 807,
											"end": 832,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 803,
											"end": 872,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 803,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 803,
											"end": 872,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 861,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 848,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 848,
											"end": 861,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 803,
											"end": 872,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 803,
											"end": 872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 890,
											"end": 901,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 890,
											"end": 905,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "73776170546F6B656E733A20494E56414C494420504154480000000000000000"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 882,
											"end": 934,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 882,
											"end": 934,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 963,
											"end": 973,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 952,
											"end": 973,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 952,
											"end": 956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 952,
											"end": 959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 952,
											"end": 959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 952,
											"end": 973,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 952,
											"end": 973,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "73776170546F6B656E733A20494E56414C494420504154480000000000000000"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 944,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1045,
											"end": 1056,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1056,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1036,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1040,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1041,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1056,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1056,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "73776170546F6B656E733A20494E56414C494420504154480000000000000000"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1012,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1137,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1148,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1157,
											"end": 1161,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "73776170546F6B656E733A20494E53554646494349454E5420414D4F554E5400"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1173,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1320,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1371,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1331,
											"end": 1371,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1331,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1331,
											"end": 1387,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1387,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1331,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1471,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1471,
											"name": "PUSH",
											"source": 11,
											"value": "5C11D795"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1505,
											"end": 1506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1524,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1397,
											"end": 1590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1666,
											"end": 1680,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1646,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1646,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1617,
											"end": 1681,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1681,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1617,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1681,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 650,
											"end": 1710,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2418,
											"end": 3068,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 2418,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2621,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 11,
											"value": "DFE1681"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2641,
											"end": 2662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2641,
											"end": 2662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "PUSH",
											"source": 11,
											"value": "D21220A7"
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2631,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2695,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2708,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2708,
											"end": 2749,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2749,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2768,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2708,
											"end": 2769,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2708,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2708,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2812,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 2852,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2852,
											"name": "PUSH",
											"source": 11,
											"value": "BAA2ABDE"
										},
										{
											"begin": 2866,
											"end": 2879,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2893,
											"end": 2906,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2930,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2944,
											"end": 2945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2960,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP11",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 3026,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 3068,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 3068,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 2,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2101,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 2110,
											"end": 2114,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2117,
											"end": 2124,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2086,
											"end": 2136,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2136,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2086,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2218,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2146,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2146,
											"end": 2243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2171,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2146,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2146,
											"end": 2243,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2243,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2146,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2250,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2651,
											"end": 2970,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2651,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2785,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2772,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2743,
											"end": 2772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 2817,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2817,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2833,
											"end": 2878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2868,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2870,
											"end": 2877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2833,
											"end": 2878,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2878,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2833,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2797,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2916,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2916,
											"end": 2927,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2909,
											"end": 2953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2944,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2909,
											"end": 2953,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 4,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 455,
											"end": 554,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 455,
											"end": 554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 11,
											"value": "3C"
										},
										{
											"begin": 527,
											"end": 542,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 527,
											"end": 547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 455,
											"end": 554,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 455,
											"end": 554,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 5,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 5
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"distributeFees()": "bb57ad20",
							"feeHolder()": "cc6be5e4",
							"owner()": "8da5cb5b",
							"platformShareBP()": "c0d46b91",
							"removeLiquidity(address,address)": "9cf38f7c",
							"renounceOwnership()": "715018a6",
							"rescueToken(address)": "4460d3cf",
							"rewardsReceiver()": "fca11cb8",
							"schedulerAddress()": "ae45850b",
							"sellTokens(address,address,address,address[])": "7a2829d2",
							"setSchedulerAddr(address)": "43abd319",
							"test()": "f8a8fd6d",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeReceivers(address,address)": "d7236159",
							"updateFeeSettings(uint256)": "208995cf",
							"wElaAddress()": "717815de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeHolder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_schedulerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wElaAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RescueTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"SetSchedulerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardsReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeHolder\",\"type\":\"address\"}],\"name\":\"UpdateFeeReceivers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformShareBP\",\"type\":\"uint256\"}],\"name\":\"UpdateFeeSettings\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"distributeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeHolder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformShareBP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schedulerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inputToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"outputToken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"setSchedulerAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeHolder\",\"type\":\"address\"}],\"name\":\"updateFeeReceivers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformShareBP\",\"type\":\"uint256\"}],\"name\":\"updateFeeSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wElaAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dividends/FeeDistributor.sol\":\"FeeDistributor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"contracts/Dividends/FeeDistributor.sol\":{\"keccak256\":\"0x348a0fbe163aad70dcc4c308eaae725914fbfbd2e5aafc23b96cd20c727c2ba1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcef411c418bc9a10b330df15855d8ef720cfc02f6be51f0f896f87c7e0fd6bc\",\"dweb:/ipfs/QmNmkigSCyrZiXtH3EnADuzkrTr48PrtPE61dfwpMgyJvM\"]},\"contracts/Dividends/interfaces/IFeeReceiver.sol\":{\"keccak256\":\"0xfa9449f5edc9b9e5df3e7d8c54e61afe9c01ef0c3e2a995e79bed6f5529eb2cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d06b91be9787ce4bb0fb44160e663fed9f514297d293155c75b098dbcc93e812\",\"dweb:/ipfs/QmTHXNZ6Uzme1WcrUnuuWgrSLyW9AbgSxyN4JUj1tfGKSY\"]},\"contracts/Swap/interfaces/IGlidePair.sol\":{\"keccak256\":\"0xd31d5b0e8c0fd58d7ca46bdda64cf64246b7f38ddc6ecfef73ea224988d833f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8e4c2ff4a5a0d42814b98ad8a75a32c74c54c5e3b76604d6f8874fa566b5169\",\"dweb:/ipfs/QmcsxEYidYCaSqNf6GxQZpuJGi5z84im9KQ7TRgfEUXyDk\"]},\"contracts/Swap/interfaces/IGlideRouter.sol\":{\"keccak256\":\"0xa857d773a4f9b635cf8f18b7d0cffec9bc641a4bd6930c08029766aa4a606df4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://891dbbc1f8c2729b67b99a11b6a9a812ab55ffbe30c3af25339da38b2120e759\",\"dweb:/ipfs/QmRVbdNtqErNzvHd4dLTXj6bQxh9i9qmKjvha461w5qQod\"]},\"contracts/Swap/libraries/RouterHelper.sol\":{\"keccak256\":\"0x8673e639f80035fd2aaa31de25a2a37c9c6260cec6bcbcf6a3094c4019406a12\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://14e6dabbe2224f7ddfb47343d66d8a15e840a187948cab2eb622902a020d0ac0\",\"dweb:/ipfs/Qmex7DLN3onadQmCKFA1gkDcngg9zsbY734ZhfKiWF5En4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dividends/interfaces/IFeeReceiver.sol": {
				"IFeeReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dollarAmount",
									"type": "uint256"
								}
							],
							"name": "income",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"income(uint256)": "84ed8c56"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dollarAmount\",\"type\":\"uint256\"}],\"name\":\"income\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dividends/interfaces/IFeeReceiver.sol\":\"IFeeReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/Dividends/interfaces/IFeeReceiver.sol\":{\"keccak256\":\"0xfa9449f5edc9b9e5df3e7d8c54e61afe9c01ef0c3e2a995e79bed6f5529eb2cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d06b91be9787ce4bb0fb44160e663fed9f514297d293155c75b098dbcc93e812\",\"dweb:/ipfs/QmTHXNZ6Uzme1WcrUnuuWgrSLyW9AbgSxyN4JUj1tfGKSY\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Swap/interfaces/IGlidePair.sol": {
				"IGlidePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap/interfaces/IGlidePair.sol\":\"IGlidePair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/Swap/interfaces/IGlidePair.sol\":{\"keccak256\":\"0xd31d5b0e8c0fd58d7ca46bdda64cf64246b7f38ddc6ecfef73ea224988d833f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8e4c2ff4a5a0d42814b98ad8a75a32c74c54c5e3b76604d6f8874fa566b5169\",\"dweb:/ipfs/QmcsxEYidYCaSqNf6GxQZpuJGi5z84im9KQ7TRgfEUXyDk\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Swap/interfaces/IGlideRouter.sol": {
				"IGlideRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap/interfaces/IGlideRouter.sol\":\"IGlideRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/Swap/interfaces/IGlideRouter.sol\":{\"keccak256\":\"0xa857d773a4f9b635cf8f18b7d0cffec9bc641a4bd6930c08029766aa4a606df4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://891dbbc1f8c2729b67b99a11b6a9a812ab55ffbe30c3af25339da38b2120e759\",\"dweb:/ipfs/QmRVbdNtqErNzvHd4dLTXj6bQxh9i9qmKjvha461w5qQod\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Swap/libraries/RouterHelper.sol": {
				"RouterHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Swap/libraries/RouterHelper.sol\":363:3071  library RouterHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Swap/libraries/RouterHelper.sol\":363:3071  library RouterHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069de5106436e93256865f26aad31c244e14983266f885d75abbfd8cd464d917064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069de5106436e93256865f26aad31c244e14983266f885d75abbfd8cd464d917064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDE5106436E93256865F2 PUSH11 0xAD31C244E14983266F885D PUSH22 0xABBFD8CD464D917064736F6C634300060C0033000000 ",
							"sourceMap": "363:2708:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069de5106436e93256865f26aad31c244e14983266f885d75abbfd8cd464d917064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDE5106436E93256865F2 PUSH11 0xAD31C244E14983266F885D PUSH22 0xABBFD8CD464D917064736F6C634300060C0033000000 ",
							"sourceMap": "363:2708:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addLiquidity(address,address,address,uint256,uint256)": "infinite",
								"getTxDeadline()": "infinite",
								"removeLiquidity(address,address,uint256)": "infinite",
								"swapTokens(address,uint256,address,address,address[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 363,
									"end": 3071,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069de5106436e93256865f26aad31c244e14983266f885d75abbfd8cd464d917064736f6c634300060c0033",
									".code": [
										{
											"begin": 363,
											"end": 3071,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 363,
											"end": 3071,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap/libraries/RouterHelper.sol\":\"RouterHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"contracts/Swap/interfaces/IGlidePair.sol\":{\"keccak256\":\"0xd31d5b0e8c0fd58d7ca46bdda64cf64246b7f38ddc6ecfef73ea224988d833f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8e4c2ff4a5a0d42814b98ad8a75a32c74c54c5e3b76604d6f8874fa566b5169\",\"dweb:/ipfs/QmcsxEYidYCaSqNf6GxQZpuJGi5z84im9KQ7TRgfEUXyDk\"]},\"contracts/Swap/interfaces/IGlideRouter.sol\":{\"keccak256\":\"0xa857d773a4f9b635cf8f18b7d0cffec9bc641a4bd6930c08029766aa4a606df4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://891dbbc1f8c2729b67b99a11b6a9a812ab55ffbe30c3af25339da38b2120e759\",\"dweb:/ipfs/QmRVbdNtqErNzvHd4dLTXj6bQxh9i9qmKjvha461w5qQod\"]},\"contracts/Swap/libraries/RouterHelper.sol\":{\"keccak256\":\"0x8673e639f80035fd2aaa31de25a2a37c9c6260cec6bcbcf6a3094c4019406a12\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://14e6dabbe2224f7ddfb47343d66d8a15e840a187948cab2eb622902a020d0ac0\",\"dweb:/ipfs/Qmex7DLN3onadQmCKFA1gkDcngg9zsbY734ZhfKiWF5En4\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/Dividends/FeeDistributor.sol:74:9: Warning: Unused local variable.\n        uint256 receiverAmount = balance.sub(platformAmount);\n        ^--------------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2599,
					"file": "contracts/Dividends/FeeDistributor.sol",
					"start": 2577
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/Dividends/FeeDistributor.sol:71:6: Warning: Function state mutability can be restricted to view\n     function test() external returns(uint,uint) {\n     ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2645,
					"file": "contracts/Dividends/FeeDistributor.sol",
					"start": 2416
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 1148,
							"src": "66:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1147,
										"src": "621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1147",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:0"
								}
							],
							"contractDependencies": [
								1147
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								1147
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "635:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "691:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "722:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:0"
									},
									"src": "664:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "874:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "884:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "926:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "935:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "926:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "954:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 109,
									"src": "850:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1140:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1150:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 109,
									"src": "1085:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1279:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1297:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1135,
																	"src": "1308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:0"
									},
									"src": "1258:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1771:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1781:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1761:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:0"
									},
									"scope": 109,
									"src": "1717:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2081:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2179:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2174:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2071:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:0"
									},
									"scope": 109,
									"src": "2011:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "592:1661:0"
						}
					],
					"src": "33:2221:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "66:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "290:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 122,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "307:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 123,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "312:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "307:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "320:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "307:14:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "316:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 128,
												"nodeType": "Return",
												"src": "300:21:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "159:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "236:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "247:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:22:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 130,
												"src": "281:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "280:9:1"
									},
									"scope": 182,
									"src": "223:105:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "466:37:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 140,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "483:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "487:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "483:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "495:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "483:13:1",
													"trueExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "491:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 139,
												"id": 146,
												"nodeType": "Return",
												"src": "476:20:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "334:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "411:22:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 148,
												"src": "457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "456:9:1"
									},
									"scope": 182,
									"src": "399:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "687:119:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 158,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "759:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "763:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "759:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 161,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 162,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "769:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "773:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "769:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "768:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "758:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 167,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "780:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "784:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "780:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 170,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 153,
																					"src": "788:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 171,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "792:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "788:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "780:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "779:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "797:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "779:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "778:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "758:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 157,
												"id": 179,
												"nodeType": "Return",
												"src": "751:48:1"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "509:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "633:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "644:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:22:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 181,
												"src": "678:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:9:1"
									},
									"scope": 182,
									"src": "616:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 183,
							"src": "140:668:1"
						}
					],
					"src": "33:776:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							537
						]
					},
					"id": 538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "865:98:2",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 215,
														"src": "875:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "891:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 203,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "906:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 204,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 210,
												"nodeType": "IfStatement",
												"src": "902:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 208,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 196,
													"id": 209,
													"nodeType": "Return",
													"src": "913:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "954:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 213,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 196,
												"id": 214,
												"nodeType": "Return",
												"src": "940:16:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "805:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "816:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "850:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 216,
												"src": "856:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:2"
									},
									"scope": 537,
									"src": "789:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1185:75:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1199:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1203:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 235,
												"nodeType": "IfStatement",
												"src": "1195:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 227,
													"id": 234,
													"nodeType": "Return",
													"src": "1206:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "1247:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 240,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 227,
												"id": 241,
												"nodeType": "Return",
												"src": "1233:20:2"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:2",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "1125:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "1136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "1170:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "1176:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:2"
									},
									"scope": 537,
									"src": "1109:151:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1484:359:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 255,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1716:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 262,
												"nodeType": "IfStatement",
												"src": "1712:28:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 260,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 254,
													"id": 261,
													"nodeType": "Return",
													"src": "1724:16:2"
												}
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 283,
														"src": "1750:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 268,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 265,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1762:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 269,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1781:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 270,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1785:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 272,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 278,
												"nodeType": "IfStatement",
												"src": "1777:33:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 276,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 254,
													"id": 277,
													"nodeType": "Return",
													"src": "1793:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 280,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1834:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 281,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 254,
												"id": 282,
												"nodeType": "Return",
												"src": "1820:16:2"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "1424:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "1435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "1469:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "1475:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:2"
									},
									"scope": 537,
									"src": "1408:435:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2068:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 296,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2082:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 303,
												"nodeType": "IfStatement",
												"src": "2078:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 301,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 295,
													"id": 302,
													"nodeType": "Return",
													"src": "2090:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 305,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2131:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 306,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2135:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 308,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 295,
												"id": 309,
												"nodeType": "Return",
												"src": "2117:20:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2019:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2053:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "2059:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:2"
									},
									"scope": 537,
									"src": "1992:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2379:76:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 323,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "2393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 330,
												"nodeType": "IfStatement",
												"src": "2389:29:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 328,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 322,
													"id": 329,
													"nodeType": "Return",
													"src": "2401:17:2"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "2442:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "2446:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 335,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 322,
												"id": 336,
												"nodeType": "Return",
												"src": "2428:20:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "2319:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "2330:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "2364:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 338,
												"src": "2370:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:2"
									},
									"scope": 537,
									"src": "2303:152:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2757:108:2",
										"statements": [
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 363,
														"src": "2767:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 350,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2779:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 351,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2783:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 355,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "2802:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 356,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2807:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 361,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2857:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 362,
												"nodeType": "Return",
												"src": "2850:8:2"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 364,
												"src": "2703:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 364,
												"src": "2714:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:2"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 364,
												"src": "2748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:2"
									},
									"scope": 537,
									"src": "2690:175:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "3203:88:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 375,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "3221:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 376,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3226:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 381,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 382,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3283:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 384,
												"nodeType": "Return",
												"src": "3272:12:2"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "3149:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "3160:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 386,
												"src": "3194:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:2"
									},
									"scope": 537,
									"src": "3136:155:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "3605:148:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 396,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3619:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 401,
												"nodeType": "IfStatement",
												"src": "3615:20:2",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 395,
													"id": 400,
													"nodeType": "Return",
													"src": "3627:8:2"
												}
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 419,
														"src": "3645:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 404,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3657:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3661:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3680:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "3684:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "3689:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 417,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "3745:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 395,
												"id": 418,
												"nodeType": "Return",
												"src": "3738:8:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "3551:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "3562:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "3596:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:2"
									},
									"scope": 537,
									"src": "3538:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "4284:83:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 431,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "4302:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "4355:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "4359:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 440,
												"nodeType": "Return",
												"src": "4348:12:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 442,
												"src": "4230:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 442,
												"src": "4241:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 442,
												"src": "4275:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:2"
									},
									"scope": 537,
									"src": "4217:150:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4887:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 453,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "4905:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 459,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "4956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 460,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4960:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 462,
												"nodeType": "Return",
												"src": "4949:12:2"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "4833:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "4844:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "4878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:2"
									},
									"scope": 537,
									"src": "4820:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "5527:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 477,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "5545:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 478,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5550:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5553:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 483,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "5583:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 484,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "5587:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 475,
												"id": 486,
												"nodeType": "Return",
												"src": "5576:12:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "5445:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "5456:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "5467:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 488,
												"src": "5518:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:2"
									},
									"scope": 537,
									"src": "5432:163:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "6347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 501,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "6365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 504,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "6372:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 507,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "6402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 508,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "6406:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 499,
												"id": 510,
												"nodeType": "Return",
												"src": "6395:12:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 512,
												"src": "6265:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 512,
												"src": "6276:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 512,
												"src": "6287:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 512,
												"src": "6338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:2"
									},
									"scope": 537,
									"src": "6252:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7155:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 525,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "7173:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 528,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "7180:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 531,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "7210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 532,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "7214:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 523,
												"id": 534,
												"nodeType": "Return",
												"src": "7203:12:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "7073:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "7084:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "7095:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "7146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:2"
									},
									"scope": 537,
									"src": "7060:162:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 538,
							"src": "630:6594:2"
						}
					],
					"src": "33:7192:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							615
						]
					},
					"id": 616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 540,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 615,
							"linearizedBaseContracts": [
								615
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 615,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 554,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 615,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 564,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 564,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 564,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 615,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 574,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 615,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 615,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 596,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 615,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 605,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 605,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 614,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 614,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 614,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 614,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 616,
							"src": "137:2566:3"
						}
					],
					"src": "33:2671:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							828
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 617,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 618,
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 616,
							"src": "66:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 619,
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 538,
							"src": "89:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 620,
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 1125,
							"src": "123:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 621,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 828,
							"linearizedBaseContracts": [
								828
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 624,
									"libraryName": {
										"contractScope": null,
										"id": 622,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 537,
										"src": "646:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$537",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:4",
									"typeName": {
										"id": 623,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 627,
									"libraryName": {
										"contractScope": null,
										"id": 625,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1124,
										"src": "678:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1124",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:4",
									"typeName": {
										"id": 626,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "776:103:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 637,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "806:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 640,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "836:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$615",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 564,
																		"src": "836:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 643,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "861:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "865:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 638,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 636,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "786:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "786:86:4"
											}
										]
									},
									"documentation": null,
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "726:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 628,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "740:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "752:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:4"
									},
									"scope": 828,
									"src": "704:175:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "975:113:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1005:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 664,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "1035:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$615",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 596,
																		"src": "1035:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 667,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "1064:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 668,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "1070:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1074:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 662,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 660,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "985:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "985:96:4"
											}
										]
									},
									"documentation": null,
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "911:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 650,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "911:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "925:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "939:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 674,
												"src": "951:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:4"
									},
									"scope": 828,
									"src": "885:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "1424:537:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 681,
																			"src": "1713:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 688,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 693,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$828",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$828",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 692,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 691,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 694,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 695,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 679,
																					"src": "1760:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 689,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 677,
																					"src": "1729:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$615",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 574,
																				"src": "1729:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 699,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "1884:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "1914:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$615",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 584,
																		"src": "1914:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 711,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "1938:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "1947:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1864:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "1369:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 676,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "1369:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "1383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "1400:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:4"
									},
									"scope": 828,
									"src": "1348:613:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2053:197:4",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 752,
														"src": "2063:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 737,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "2130:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 732,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$828",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$828",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 730,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 734,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "2117:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 728,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2086:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$615",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 574,
																"src": "2086:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "2086:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 741,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 744,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "2196:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$615",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 584,
																		"src": "2196:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 747,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "2220:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 748,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "2229:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 740,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2146:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:4"
											}
										]
									},
									"documentation": null,
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "1998:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 718,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "1998:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "2012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "2029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:4"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:4"
									},
									"scope": 828,
									"src": "1967:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2342:242:4",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 789,
														"src": "2352:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 773,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2419:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 768,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$828",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$828",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 766,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 770,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "2406:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 764,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "2375:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$615",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 574,
																"src": "2375:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "2375:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 778,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "2500:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 781,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "2530:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$615",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 584,
																		"src": "2530:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 784,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "2554:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 785,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "2563:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 779,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 777,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "2480:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:4"
											}
										]
									},
									"documentation": null,
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 790,
												"src": "2287:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 754,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "2287:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 790,
												"src": "2301:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 790,
												"src": "2318:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:4"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:4"
									},
									"scope": 828,
									"src": "2256:328:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "3037:681:4",
										"statements": [
											{
												"assignments": [
													799
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 826,
														"src": "3386:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 798,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 805,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "3440:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 802,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "3420:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$615",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$615",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 800,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 919,
														"src": "3412:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 809,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3495:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 825,
												"nodeType": "IfStatement",
												"src": "3491:221:4",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "3518:194:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 816,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "3635:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 817,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 819,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 814,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 813,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 827,
												"src": "2996:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$615",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 792,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 615,
													"src": "2996:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$615",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 827,
												"src": "3010:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:4"
									},
									"scope": 828,
									"src": "2967:751:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 829,
							"src": "616:3104:4"
						}
					],
					"src": "33:3688:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1124
						]
					},
					"id": 1125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 831,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1124,
							"linearizedBaseContracts": [
								1124
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "792:347:5",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 847,
														"src": "989:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:5",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:5",
														"valueSize": 1
													}
												],
												"id": 842,
												"nodeType": "InlineAssembly",
												"src": "1067:41:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 843,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1124:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 838,
												"id": 846,
												"nodeType": "Return",
												"src": "1117:15:5"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "786:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:5"
									},
									"scope": 1124,
									"src": "726:413:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "2127:320:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 859,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1124",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1124",
																				"typeString": "library Address"
																			}
																		],
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 857,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2170:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:5"
											},
											{
												"assignments": [
													868,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 881,
														"src": "2299:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 867,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 875,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 869,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "2317:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 871,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2340:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "2370:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 876,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 882,
												"src": "2075:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 882,
												"src": "2102:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:5"
									},
									"scope": 1124,
									"src": "2056:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "3277:82:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "3305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 894,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 892,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															899,
															919
														],
														"referencedDeclaration": 919,
														"src": "3292:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 891,
												"id": 897,
												"nodeType": "Return",
												"src": "3285:67:5"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "3210:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "3226:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:5"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "3263:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:5"
									},
									"scope": 1124,
									"src": "3188:171:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "3698:76:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "3737:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 913,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3745:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 915,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "3754:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 911,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															939,
															989
														],
														"referencedDeclaration": 989,
														"src": "3715:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 910,
												"id": 917,
												"nodeType": "Return",
												"src": "3708:59:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "3603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "3619:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "3638:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 905,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 919,
												"src": "3684:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:5"
									},
									"scope": 1124,
									"src": "3581:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "4249:111:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 932,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "4288:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 933,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "4296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 934,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 931,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															939,
															989
														],
														"referencedDeclaration": 989,
														"src": "4266:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 930,
												"id": 937,
												"nodeType": "Return",
												"src": "4259:94:5"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4167:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4183:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4202:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:5"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 939,
												"src": "4235:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:5"
									},
									"scope": 1124,
									"src": "4136:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "4749:382:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 956,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1124",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1124",
																				"typeString": "library Address"
																			}
																		],
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 954,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "4792:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 966,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "4869:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 965,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "4858:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:5"
											},
											{
												"assignments": [
													972,
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 988,
														"src": "4981:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 971,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 988,
														"src": "4995:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 973,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 979,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "5050:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 975,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "5022:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 977,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "5042:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "5090:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 984,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "5099:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 985,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "5111:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 982,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "5072:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 952,
												"id": 987,
												"nodeType": "Return",
												"src": "5065:59:5"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "4639:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "4655:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "4674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "4689:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "4735:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:5"
									},
									"scope": 1124,
									"src": "4608:523:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "5408:97:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1000,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "5444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1001,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5452:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 999,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1006,
															1041
														],
														"referencedDeclaration": 1041,
														"src": "5425:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 998,
												"id": 1004,
												"nodeType": "Return",
												"src": "5418:80:5"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1006,
												"src": "5336:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1006,
												"src": "5352:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1006,
												"src": "5394:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:5"
									},
									"scope": 1124,
									"src": "5308:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "5817:288:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1020,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "5846:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1019,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "5835:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:5"
											},
											{
												"assignments": [
													1026,
													1028
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1040,
														"src": "5965:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1025,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1028,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1040,
														"src": "5979:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1027,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1031,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "6024:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1029,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "6006:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1035,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6064:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1036,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "6073:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1037,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "6085:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1034,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "6046:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1039,
												"nodeType": "Return",
												"src": "6039:59:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "5717:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "5733:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "5752:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1012,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "5803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:5"
									},
									"scope": 1124,
									"src": "5689:416:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "6381:101:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1052,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "6419:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1053,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "6427:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1051,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1058,
															1093
														],
														"referencedDeclaration": 1093,
														"src": "6398:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1056,
												"nodeType": "Return",
												"src": "6391:84:5"
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "6314:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "6330:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "6367:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:5"
									},
									"scope": 1124,
									"src": "6284:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "6793:292:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "6822:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1071,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "6811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:5"
											},
											{
												"assignments": [
													1078,
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1092,
														"src": "6943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1077,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1092,
														"src": "6957:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1079,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1083,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "7004:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1081,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "6984:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1087,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "7044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1088,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "7053:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1089,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7065:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1086,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "7026:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1091,
												"nodeType": "Return",
												"src": "7019:59:5"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "6698:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "6714:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "6733:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1064,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1093,
												"src": "6779:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:5"
									},
									"scope": 1124,
									"src": "6668:417:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "7220:596:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1104,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "7234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "7291:519:5",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1108,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1097,
																		"src": "7375:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1118,
																"nodeType": "Block",
																"src": "7747:53:5",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1115,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "7772:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1114,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1117,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:5"
																	}
																]
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "7371:429:5",
															"trueBody": {
																"id": 1113,
																"nodeType": "Block",
																"src": "7398:343:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:5"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1097,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1097,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1112,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "7230:580:5",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "7243:42:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1105,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "7264:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1103,
															"id": 1106,
															"nodeType": "Return",
															"src": "7257:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "7118:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "7132:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "7157:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:5"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1123,
												"src": "7206:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:5"
									},
									"scope": 1124,
									"src": "7091:725:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1125,
							"src": "134:7684:5"
						}
					],
					"src": "33:7786:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1147
						]
					},
					"id": 1148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1126,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1147,
							"linearizedBaseContracts": [
								1147
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "668:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1131,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1133,
												"nodeType": "Return",
												"src": "678:17:6"
											}
										]
									},
									"documentation": null,
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:6"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1135,
												"src": "651:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:6"
									},
									"scope": 1147,
									"src": "598:104:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "773:165:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1140,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1147",
														"typeString": "contract Context"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "783:4:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1144,
												"nodeType": "Return",
												"src": "916:15:6"
											}
										]
									},
									"documentation": null,
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:6"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1146,
												"src": "759:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:6"
									},
									"scope": 1147,
									"src": "708:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1148,
							"src": "566:374:6"
						}
					],
					"src": "33:908:6"
				},
				"id": 6
			},
			"contracts/Dividends/FeeDistributor.sol": {
				"ast": {
					"absolutePath": "contracts/Dividends/FeeDistributor.sol",
					"exportedSymbols": {
						"FeeDistributor": [
							1537
						]
					},
					"id": 1538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1149,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 1150,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 538,
							"src": "58:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1151,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 110,
							"src": "110:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1152,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 616,
							"src": "163:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 1153,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 829,
							"src": "220:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Swap/libraries/RouterHelper.sol",
							"file": "../Swap/libraries/RouterHelper.sol",
							"id": 1154,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 2456,
							"src": "281:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Dividends/interfaces/IFeeReceiver.sol",
							"file": "./interfaces/IFeeReceiver.sol",
							"id": 1155,
							"nodeType": "ImportDirective",
							"scope": 1538,
							"sourceUnit": 1546,
							"src": "327:39:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1156,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "395:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 1157,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:7"
								}
							],
							"contractDependencies": [
								109,
								1147
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1537,
							"linearizedBaseContracts": [
								1537,
								109,
								1147
							],
							"name": "FeeDistributor",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1160,
									"libraryName": {
										"contractScope": null,
										"id": 1158,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 537,
										"src": "415:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$537",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "409:27:7",
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "428:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1163,
									"libraryName": {
										"contractScope": null,
										"id": 1161,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 828,
										"src": "447:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$828",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "441:27:7",
									"typeName": {
										"contractScope": null,
										"id": 1162,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 615,
										"src": "461:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$615",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c0d46b91",
									"id": 1165,
									"mutability": "mutable",
									"name": "platformShareBP",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1537,
									"src": "474:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fca11cb8",
									"id": 1167,
									"mutability": "mutable",
									"name": "rewardsReceiver",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1537,
									"src": "511:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc6be5e4",
									"id": 1169,
									"mutability": "mutable",
									"name": "feeHolder",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1537,
									"src": "547:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ae45850b",
									"id": 1171,
									"mutability": "mutable",
									"name": "schedulerAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1537,
									"src": "578:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1170,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "717815de",
									"id": 1173,
									"mutability": "mutable",
									"name": "wElaAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1537,
									"src": "616:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1172,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1181,
									"name": "RescueTokens",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "668:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "690:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1181,
												"src": "713:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "667:61:7"
									},
									"src": "649:80:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1187,
									"name": "UpdateFeeSettings",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "758:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "platformShareBP",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1187,
												"src": "780:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "780:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:44:7"
									},
									"src": "734:68:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1195,
									"name": "UpdateFeeReceivers",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1195,
												"src": "832:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardsReceiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1195,
												"src": "854:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1195,
												"src": "879:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:66:7"
									},
									"src": "807:91:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1201,
									"name": "SetSchedulerAddress",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "929:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAddr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "951:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "928:39:7"
									},
									"src": "903:65:7"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "1126:165:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1212,
														"name": "rewardsReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "1136:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1213,
														"name": "_rewardsReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "1154:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "1136:34:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1216,
														"name": "feeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "1180:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1217,
														"name": "_feeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "1192:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1180:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1180:22:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1220,
														"name": "schedulerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "1212:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1221,
														"name": "_schedulerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1231:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1212:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1212:36:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1224,
														"name": "wElaAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1258:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1225,
														"name": "_wElaAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1272:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1258:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "1258:26:7"
											}
										]
									},
									"documentation": null,
									"id": 1229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "_rewardsReceiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "995:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "_feeHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1029:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "_schedulerAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1057:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "_wElaAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1229,
												"src": "1092:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "985:133:7"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:7"
									},
									"scope": 1537,
									"src": "974:317:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "1318:117:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1232,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1336:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1336:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "schedulerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "1350:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1336:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1236,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "1370:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1370:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1238,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "1384:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1384:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1370:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1336:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7941646d696e733a20464f5242494444454e",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1393:23:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_418d9cb4190c03090172cf41a6e1d1d55428ee7b3133f53c00ad6bd5f90ab2c4",
																"typeString": "literal_string \"onlyAdmins: FORBIDDEN\""
															},
															"value": "onlyAdmins: FORBIDDEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_418d9cb4190c03090172cf41a6e1d1d55428ee7b3133f53c00ad6bd5f90ab2c4",
																"typeString": "literal_string \"onlyAdmins: FORBIDDEN\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1328:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1328:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1328:89:7"
											},
											{
												"id": 1245,
												"nodeType": "PlaceholderStatement",
												"src": "1427:1:7"
											}
										]
									},
									"documentation": null,
									"id": 1247,
									"name": "onlyAdmins",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:7"
									},
									"src": "1297:138:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "1519:137:7",
										"statements": [
											{
												"assignments": [
													1257
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1276,
														"src": "1529:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1529:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1264,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1580:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1572:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1572:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1572:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1259,
																	"name": "lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "1553:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1258,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1546:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1546:15:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "1546:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1546:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1529:57:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1271,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "1625:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1272,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "1633:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "1642:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1268,
															"name": "RouterHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "1596:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_RouterHelper_$2455_$",
																"typeString": "type(library RouterHelper)"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2454,
														"src": "1596:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256,uint256)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "1596:53:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9cf38f7c",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1254,
											"modifierName": {
												"argumentTypes": null,
												"id": 1253,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1247,
												"src": "1508:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1508:10:7"
										}
									],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "1466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "lpToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1277,
												"src": "1482:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1465:33:7"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:7"
									},
									"scope": 1537,
									"src": "1441:215:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "1782:157:7",
										"statements": [
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1313,
														"src": "1792:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1792:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1302,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1299,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1846:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1838:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1838:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1838:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1294,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "1816:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1293,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1809:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1809:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "1809:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1792:60:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1306,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1886:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1307,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "1894:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1308,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "1902:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1309,
															"name": "outputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "1914:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1310,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "1927:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1303,
															"name": "RouterHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "1862:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_RouterHelper_$2455_$",
																"typeString": "type(library RouterHelper)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2326,
														"src": "1862:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address,address,address[] memory) returns (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "1862:70:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7a2829d2",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1289,
											"modifierName": {
												"argumentTypes": null,
												"id": 1288,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1247,
												"src": "1771:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1771:10:7"
										}
									],
									"name": "sellTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1314,
												"src": "1682:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "inputToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1314,
												"src": "1698:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "outputToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1314,
												"src": "1718:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1314,
												"src": "1739:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1739:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1739:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1681:80:7"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:0:7"
									},
									"scope": 1537,
									"src": "1662:277:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "1991:419:7",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "2002:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2002:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1327,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2058:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2050:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2050:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2050:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1322,
																	"name": "wElaAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "2027:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1321,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2020:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2020:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "2020:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2002:62:7"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "platformAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "2075:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2075:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1340,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2133:5:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1335,
																	"name": "platformShareBP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "2112:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1333,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2100:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 420,
																"src": "2100:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2100:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 442,
														"src": "2100:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:64:7"
											},
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "receiverAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1368,
														"src": "2149:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2149:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1345,
															"name": "platformAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "2186:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1343,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "2174:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "2174:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2149:52:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1352,
															"name": "rewardsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "2254:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1353,
															"name": "receiverAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "2271:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1349,
																	"name": "wElaAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "2219:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1348,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2212:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2212:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "2212:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2212:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1355,
												"nodeType": "ExpressionStatement",
												"src": "2212:74:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1360,
															"name": "receiverAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "2333:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1357,
																	"name": "rewardsReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "2309:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1356,
																"name": "IFeeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "2296:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IFeeReceiver_$1545_$",
																	"typeString": "type(contract IFeeReceiver)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2296:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFeeReceiver_$1545",
																"typeString": "contract IFeeReceiver"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "income",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1544,
														"src": "2296:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "2296:52:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1364,
															"name": "feeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "2377:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "platformAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "2388:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1363,
														"name": "safeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "2359:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2359:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "2359:44:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bb57ad20",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1317,
											"modifierName": {
												"argumentTypes": null,
												"id": 1316,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1247,
												"src": "1980:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1980:10:7"
										}
									],
									"name": "distributeFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1991:0:7"
									},
									"scope": 1537,
									"src": "1945:465:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "2460:185:7",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1397,
														"src": "2471:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2471:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2486:7:7",
													"subdenomination": "ether",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2471:22:7"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "platformAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1397,
														"src": "2503:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2503:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2561:5:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1384,
																	"name": "platformShareBP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "2540:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1382,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "2528:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 420,
																"src": "2528:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2528:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 442,
														"src": "2528:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2503:64:7"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "receiverAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1397,
														"src": "2577:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2577:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1396,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1394,
															"name": "platformAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "2614:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1392,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "2602:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "2602:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f8a8fd6d",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2429:2:7"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1398,
												"src": "2449:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2449:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1398,
												"src": "2454:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2454:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2448:11:7"
									},
									"scope": 1537,
									"src": "2416:229:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "2715:255:7",
										"statements": [
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1439,
														"src": "2725:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2725:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1416,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2781:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2773:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1408,
																	"name": "wElaAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "2750:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1407,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2743:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2743:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "2743:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2743:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2725:62:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1417,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "2801:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1418,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "2810:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2801:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1437,
													"nodeType": "Block",
													"src": "2895:69:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1433,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "2942:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1434,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "2946:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1430,
																				"name": "wElaAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "2916:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1429,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "2909:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2909:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$615",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 649,
																	"src": "2909:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2909:44:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1436,
															"nodeType": "ExpressionStatement",
															"src": "2909:44:7"
														}
													]
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "2797:167:7",
												"trueBody": {
													"id": 1428,
													"nodeType": "Block",
													"src": "2819:70:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1424,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "2866:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1425,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "2870:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1421,
																				"name": "wElaAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "2840:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1420,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "2833:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2833:19:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$615",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 649,
																	"src": "2833:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:45:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1427,
															"nodeType": "ExpressionStatement",
															"src": "2833:45:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1440,
												"src": "2678:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1440,
												"src": "2690:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2677:28:7"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:0:7"
									},
									"scope": 1537,
									"src": "2651:319:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3031:184:7",
										"statements": [
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1474,
														"src": "3041:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3041:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1455,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "3091:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FeeDistributor_$1537",
																		"typeString": "contract FeeDistributor"
																	}
																],
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3083:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1453,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3083:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3083:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1450,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "3066:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1449,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "3059:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3059:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "3059:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3041:56:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1463,
															"name": "feeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "3134:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1464,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "3145:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1460,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "3114:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1459,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "3107:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3107:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 649,
														"src": "3107:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3107:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "3107:46:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3181:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3181:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1470,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3193:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1471,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "3200:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1467,
														"name": "RescueTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3168:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "EmitStatement",
												"src": "3163:45:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4460d3cf",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1445,
											"modifierName": {
												"argumentTypes": null,
												"id": 1444,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "3021:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3021:9:7"
										}
									],
									"name": "rescueToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1475,
												"src": "2997:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2996:15:7"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3031:0:7"
									},
									"scope": 1537,
									"src": "2976:239:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "3293:112:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1482,
														"name": "platformShareBP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3303:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1483,
														"name": "_platformShareBP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "3321:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3303:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "3303:34:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1487,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3370:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3370:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1489,
															"name": "platformShareBP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "3382:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1486,
														"name": "UpdateFeeSettings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "3352:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "3347:51:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "208995cf",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1480,
											"modifierName": {
												"argumentTypes": null,
												"id": 1479,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "3283:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3283:9:7"
										}
									],
									"name": "updateFeeSettings",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_platformShareBP",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1493,
												"src": "3248:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3247:26:7"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3293:0:7"
									},
									"scope": 1537,
									"src": "3221:184:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "3504:156:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1502,
														"name": "rewardsReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "3514:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1503,
														"name": "_rewardsReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3532:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3514:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "3514:34:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1506,
														"name": "feeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3558:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1507,
														"name": "_feeHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "3570:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3558:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "3558:22:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3614:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3614:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1513,
															"name": "rewardsReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3626:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1514,
															"name": "feeHolder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "3643:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1510,
														"name": "UpdateFeeReceivers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "3595:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "EmitStatement",
												"src": "3590:63:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d7236159",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1500,
											"modifierName": {
												"argumentTypes": null,
												"id": 1499,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "3494:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3494:9:7"
										}
									],
									"name": "updateFeeReceivers",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_rewardsReceiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1518,
												"src": "3439:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "_feeHolder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1518,
												"src": "3465:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3438:46:7"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3504:0:7"
									},
									"scope": 1537,
									"src": "3411:249:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "3729:98:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1525,
														"name": "schedulerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "3739:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1526,
														"name": "newAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "3758:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3739:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "3739:26:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1530,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3800:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3800:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1532,
															"name": "newAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3812:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1529,
														"name": "SetSchedulerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3780:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3780:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "EmitStatement",
												"src": "3775:45:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "43abd319",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1523,
											"modifierName": {
												"argumentTypes": null,
												"id": 1522,
												"name": "onlyAdmins",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1247,
												"src": "3718:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3718:10:7"
										}
									],
									"name": "setSchedulerAddr",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "newAddr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1536,
												"src": "3692:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3692:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3691:17:7"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3729:0:7"
									},
									"scope": 1537,
									"src": "3666:161:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1538,
							"src": "368:3461:7"
						}
					],
					"src": "33:3796:7"
				},
				"id": 7
			},
			"contracts/Dividends/interfaces/IFeeReceiver.sol": {
				"ast": {
					"absolutePath": "contracts/Dividends/interfaces/IFeeReceiver.sol",
					"exportedSymbols": {
						"IFeeReceiver": [
							1545
						]
					},
					"id": 1546,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1539,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1545,
							"linearizedBaseContracts": [
								1545
							],
							"name": "IFeeReceiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "84ed8c56",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "income",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "dollarAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1544,
												"src": "103:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "102:22:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:8"
									},
									"scope": 1545,
									"src": "87:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1546,
							"src": "58:78:8"
						}
					],
					"src": "33:103:8"
				},
				"id": 8
			},
			"contracts/Swap/interfaces/IGlidePair.sol": {
				"ast": {
					"absolutePath": "contracts/Swap/interfaces/IGlidePair.sol",
					"exportedSymbols": {
						"IGlidePair": [
							1787
						]
					},
					"id": 1788,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1547,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1787,
							"linearizedBaseContracts": [
								1787
							],
							"name": "IGlidePair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 1555,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "101:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "101:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "124:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "149:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "149:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "100:60:9"
									},
									"src": "86:75:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1563,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "181:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "203:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1563,
												"src": "223:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "180:54:9"
									},
									"src": "166:69:9"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:9"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1568,
												"src": "280:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1565,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "280:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:15:9"
									},
									"scope": 1787,
									"src": "241:54:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:9"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1573,
												"src": "341:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "341:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:15:9"
									},
									"scope": 1787,
									"src": "300:56:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 1578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:2:9"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1578,
												"src": "404:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1575,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "404:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "403:7:9"
									},
									"scope": 1787,
									"src": "361:50:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:9"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1583,
												"src": "462:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:6:9"
									},
									"scope": 1787,
									"src": "416:52:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 1590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1590,
												"src": "492:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:15:9"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1590,
												"src": "530:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "530:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "529:6:9"
									},
									"scope": 1787,
									"src": "473:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "560:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "575:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "559:32:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "615:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "614:6:9"
									},
									"scope": 1787,
									"src": "541:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "644:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "661:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "643:29:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1608,
												"src": "691:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "691:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:6:9"
									},
									"scope": 1787,
									"src": "627:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 1617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1617,
												"src": "720:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1617,
												"src": "732:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:24:9"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1617,
												"src": "762:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "761:6:9"
									},
									"scope": 1787,
									"src": "702:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "795:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "809:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "821:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "821:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "794:38:9"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1628,
												"src": "851:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "850:6:9"
									},
									"scope": 1787,
									"src": "773:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3644e515",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:2:9"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1633,
												"src": "914:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "913:9:9"
									},
									"scope": 1787,
									"src": "863:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "30adf81f",
									"id": 1638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:2:9"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1638,
												"src": "978:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "977:9:9"
									},
									"scope": 1787,
									"src": "928:59:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7ecebe00",
									"id": 1645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1645,
												"src": "1008:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1007:15:9"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1645,
												"src": "1046:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1046:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:6:9"
									},
									"scope": 1787,
									"src": "992:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d505accf",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1074:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1089:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1106:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1106:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1118:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1118:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1133:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1654,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1133:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1142:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1662,
												"src": "1153:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1073:90:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:0:9"
									},
									"scope": 1787,
									"src": "1058:115:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1670,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1670,
												"src": "1190:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1670,
												"src": "1214:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1670,
												"src": "1228:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1228:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1189:52:9"
									},
									"src": "1179:63:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1680,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "1258:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "1282:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1282:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "1296:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1296:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1680,
												"src": "1310:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1257:72:9"
									},
									"src": "1247:83:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1694,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1355:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1387:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1387:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1411:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1411:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1435:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1460:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1460:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1694,
												"src": "1485:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1345:164:9"
									},
									"src": "1335:175:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1700,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1700,
												"src": "1526:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1695,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1700,
												"src": "1544:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1697,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1525:36:9"
									},
									"src": "1515:47:9"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ba9a7a56",
									"id": 1705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:2:9"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1705,
												"src": "1620:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1620:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1619:6:9"
									},
									"scope": 1787,
									"src": "1568:58:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c45a0155",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:2:9"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1710,
												"src": "1673:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1672:9:9"
									},
									"scope": 1787,
									"src": "1631:51:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0dfe1681",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1702:2:9"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "1728:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:9"
									},
									"scope": 1787,
									"src": "1687:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d21220a7",
									"id": 1720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:9"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1720,
												"src": "1783:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1782:9:9"
									},
									"scope": 1787,
									"src": "1742:50:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0902f1ac",
									"id": 1729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:2:9"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1729,
												"src": "1843:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1722,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1729,
												"src": "1861:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1724,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1729,
												"src": "1879:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1726,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1879:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:63:9"
									},
									"scope": 1787,
									"src": "1797:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5909c0d5",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:2:9"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1734,
												"src": "1966:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1966:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1965:6:9"
									},
									"scope": 1787,
									"src": "1911:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5a3d5493",
									"id": 1739,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:9"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "2032:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2032:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2031:6:9"
									},
									"scope": 1787,
									"src": "1977:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7464fc3d",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:9"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1744,
												"src": "2083:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2083:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2082:6:9"
									},
									"scope": 1787,
									"src": "2043:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6a627842",
									"id": 1751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1751,
												"src": "2109:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2108:12:9"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1751,
												"src": "2139:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2139:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2138:16:9"
									},
									"scope": 1787,
									"src": "2095:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "89afcb44",
									"id": 1760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "2174:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2173:12:9"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "2204:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2204:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1760,
												"src": "2218:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2218:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:28:9"
									},
									"scope": 1787,
									"src": "2160:72:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "022c0d9f",
									"id": 1771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "2251:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2251:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "2268:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "2285:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "2297:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2297:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2250:67:9"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:9"
									},
									"scope": 1787,
									"src": "2237:90:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bc25cf77",
									"id": 1776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1776,
												"src": "2346:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2345:12:9"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:9"
									},
									"scope": 1787,
									"src": "2332:35:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fff6cae9",
									"id": 1779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:9"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:9"
									},
									"scope": 1787,
									"src": "2372:25:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "485cc955",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "2423:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1786,
												"src": "2432:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2422:18:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2449:0:9"
									},
									"scope": 1787,
									"src": "2403:47:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1788,
							"src": "59:2393:9"
						}
					],
					"src": "33:2419:9"
				},
				"id": 9
			},
			"contracts/Swap/interfaces/IGlideRouter.sol": {
				"ast": {
					"absolutePath": "contracts/Swap/interfaces/IGlideRouter.sol",
					"exportedSymbols": {
						"IGlideRouter": [
							2177
						]
					},
					"id": 2178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1789,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2177,
							"linearizedBaseContracts": [
								2177
							],
							"name": "IGlideRouter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c45a0155",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:10"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1794,
												"src": "130:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "129:9:10"
									},
									"scope": 2177,
									"src": "88:51:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ad5c4648",
									"id": 1799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:10"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1799,
												"src": "184:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "183:9:10"
									},
									"scope": 2177,
									"src": "145:48:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "e8e33700",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "230:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "254:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "278:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "278:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "307:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "307:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "336:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "336:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "361:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "386:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "406:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "220:205:10"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "444:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "458:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "458:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1824,
												"src": "472:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:44:10"
									},
									"scope": 2177,
									"src": "199:289:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f305d719",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "528:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "551:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "551:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "584:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "613:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "613:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "640:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "660:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "518:161:10"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "706:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "706:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "724:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "724:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1845,
												"src": "740:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:50:10"
									},
									"scope": 2177,
									"src": "494:262:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "baa2abde",
									"id": 1866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "796:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "820:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "844:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "868:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "893:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "893:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "918:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "938:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "938:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:171:10"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "976:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1866,
												"src": "990:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "990:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:28:10"
									},
									"scope": 2177,
									"src": "762:242:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "02751cec",
									"id": 1885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1047:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1070:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1070:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1094:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1094:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1123:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1123:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1150:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1170:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1037:152:10"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1208:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1885,
												"src": "1226:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1226:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1207:34:10"
									},
									"scope": 2177,
									"src": "1010:232:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2195995c",
									"id": 1914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1292:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1316:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1340:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1340:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1364:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1389:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1414:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1434:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1457:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1900,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1474:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1902,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1483:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1904,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1494:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1282:227:10"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1528:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1914,
												"src": "1542:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1542:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1527:28:10"
									},
									"scope": 2177,
									"src": "1248:308:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ded9382a",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1609:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1632:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1632:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1656:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1656:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1685:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1685:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1712:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1732:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1732:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1755:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1755:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1772:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1929,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1772:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1781:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1792:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1599:208:10"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1826:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1826:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1941,
												"src": "1844:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1825:34:10"
									},
									"scope": 2177,
									"src": "1562:298:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "38ed1739",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "1909:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1909:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "1932:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "1959:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1946,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1959:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1947,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1959:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "1992:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "2012:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2012:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1899:132:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1958,
												"src": "2050:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1954,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2050:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1955,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2050:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2049:23:10"
									},
									"scope": 2177,
									"src": "1866:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "8803dbee",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2122:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2122:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2146:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2146:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2172:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1963,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2172:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1964,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2172:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2205:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2225:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2225:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2112:132:10"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1975,
												"src": "2263:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1971,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2263:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1972,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2263:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2262:23:10"
									},
									"scope": 2177,
									"src": "2079:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7ff36ab5",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2323:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2323:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2342:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1978,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2342:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1979,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2342:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2367:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2379:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2379:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2322:71:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1990,
												"src": "2432:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1986,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2432:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1987,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2432:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2431:23:10"
									},
									"scope": 2177,
									"src": "2292:163:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "4a25d94a",
									"id": 2007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2492:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2492:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2508:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2508:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2526:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1995,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2526:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1996,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2526:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2551:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2563:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2491:86:10"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2007,
												"src": "2604:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2003,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2604:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2004,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2604:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2603:23:10"
									},
									"scope": 2177,
									"src": "2461:166:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18cbafe5",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2664:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2664:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2679:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2679:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2698:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2012,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2698:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2013,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2698:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2723:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2723:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2735:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2735:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2663:86:10"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2024,
												"src": "2776:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2020,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2776:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2021,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2776:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2775:23:10"
									},
									"scope": 2177,
									"src": "2633:166:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fb3bdb41",
									"id": 2039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2039,
												"src": "2836:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2836:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2039,
												"src": "2852:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2027,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2852:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2028,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2852:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2039,
												"src": "2877:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2039,
												"src": "2889:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2889:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2835:68:10"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2039,
												"src": "2942:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2035,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2942:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2036,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2942:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2941:23:10"
									},
									"scope": 2177,
									"src": "2805:160:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ad615dec",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2050,
												"src": "2986:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2050,
												"src": "3003:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2050,
												"src": "3021:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2985:53:10"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2050,
												"src": "3062:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3061:17:10"
									},
									"scope": 2177,
									"src": "2971:108:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "054d50d4",
									"id": 2061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2061,
												"src": "3107:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2061,
												"src": "3125:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2061,
												"src": "3144:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3144:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3106:57:10"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2061,
												"src": "3187:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3186:19:10"
									},
									"scope": 2177,
									"src": "3085:121:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "85f8c259",
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "3233:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "3252:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "3271:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3232:58:10"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "3314:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3313:18:10"
									},
									"scope": 2177,
									"src": "3212:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d06ca61f",
									"id": 2083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "3361:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "3379:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2075,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3379:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2076,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3379:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3360:43:10"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2083,
												"src": "3427:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2079,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3427:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2080,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3427:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3426:26:10"
									},
									"scope": 2177,
									"src": "3338:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "1f00ca74",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2094,
												"src": "3481:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2094,
												"src": "3500:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2086,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3500:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2087,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3500:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3480:44:10"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2094,
												"src": "3548:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2090,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3548:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2091,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3548:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3547:26:10"
									},
									"scope": 2177,
									"src": "3459:115:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "af2979eb",
									"id": 2111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3646:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3669:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3669:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3693:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3693:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3722:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3722:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3749:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3769:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3769:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3636:152:10"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2111,
												"src": "3807:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3807:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3806:16:10"
									},
									"scope": 2177,
									"src": "3580:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5b0d5984",
									"id": 2136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "3905:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "3928:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3928:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "3952:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3952:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "3981:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3981:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4008:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4028:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4028:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4051:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4051:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4068:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2126,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4068:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4077:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4088:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4088:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3895:208:10"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2136,
												"src": "4122:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4122:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4121:16:10"
									},
									"scope": 2177,
									"src": "3829:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5c11d795",
									"id": 2150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2150,
												"src": "4216:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4216:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2150,
												"src": "4239:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4239:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2150,
												"src": "4266:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2141,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4266:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2142,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4266:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2150,
												"src": "4299:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4299:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2150,
												"src": "4319:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4319:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4206:132:10"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4347:0:10"
									},
									"scope": 2177,
									"src": "4144:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b6f9de95",
									"id": 2162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2162,
												"src": "4423:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4423:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2162,
												"src": "4450:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2153,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4450:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2154,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4450:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2162,
												"src": "4483:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2162,
												"src": "4503:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4413:109:10"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4539:0:10"
									},
									"scope": 2177,
									"src": "4354:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "791ac947",
									"id": 2176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2176,
												"src": "4615:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4615:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2176,
												"src": "4638:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2176,
												"src": "4665:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2167,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4665:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2168,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "4665:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2176,
												"src": "4698:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2176,
												"src": "4718:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4718:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4605:132:10"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:10"
									},
									"scope": 2177,
									"src": "4546:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2178,
							"src": "59:4690:10"
						}
					],
					"src": "33:4716:10"
				},
				"id": 10
			},
			"contracts/Swap/libraries/RouterHelper.sol": {
				"ast": {
					"absolutePath": "contracts/Swap/libraries/RouterHelper.sol",
					"exportedSymbols": {
						"RouterHelper": [
							2455
						]
					},
					"id": 2456,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2179,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/Math.sol",
							"file": "@openzeppelin/contracts/math/Math.sol",
							"id": 2180,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 183,
							"src": "64:47:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 2181,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 538,
							"src": "112:51:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2182,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 616,
							"src": "164:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 2183,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 829,
							"src": "221:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Swap/interfaces/IGlideRouter.sol",
							"file": "../interfaces/IGlideRouter.sol",
							"id": 2184,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 2178,
							"src": "282:40:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Swap/interfaces/IGlidePair.sol",
							"file": "../interfaces/IGlidePair.sol",
							"id": 2185,
							"nodeType": "ImportDirective",
							"scope": 2456,
							"sourceUnit": 1788,
							"src": "323:38:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2455,
							"linearizedBaseContracts": [
								2455
							],
							"name": "RouterHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2188,
									"libraryName": {
										"contractScope": null,
										"id": 2186,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 537,
										"src": "396:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$537",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "390:27:11",
									"typeName": {
										"id": 2187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "409:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2191,
									"libraryName": {
										"contractScope": null,
										"id": 2189,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 828,
										"src": "428:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$828",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "422:27:11",
									"typeName": {
										"contractScope": null,
										"id": 2190,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 615,
										"src": "442:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$615",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "510:44:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2196,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "527:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "527:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3630",
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "545:2:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "60"
													},
													"src": "527:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2195,
												"id": 2200,
												"nodeType": "Return",
												"src": "520:27:11"
											}
										]
									},
									"documentation": null,
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTxDeadline",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:11"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2202,
												"src": "502:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:9:11"
									},
									"scope": 2455,
									"src": "455:99:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "793:917:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2218,
														"name": "inputToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "807:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2219,
														"name": "outputToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2210,
														"src": "821:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "807:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2224,
												"nodeType": "IfStatement",
												"src": "803:69:11",
												"trueBody": {
													"id": 2223,
													"nodeType": "Block",
													"src": "834:38:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2221,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "855:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2217,
															"id": 2222,
															"nodeType": "Return",
															"src": "848:13:11"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2226,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "890:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "890:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "904:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "890:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73776170546f6b656e733a20494e56414c49442050415448",
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "907:26:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															},
															"value": "swapTokens: INVALID PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															}
														],
														"id": 2225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "882:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "882:52:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2234,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "952:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2236,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "957:1:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "952:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2237,
																"name": "inputToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2208,
																"src": "963:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "952:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73776170546f6b656e733a20494e56414c49442050415448",
															"id": 2239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:26:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															},
															"value": "swapTokens: INVALID PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															}
														],
														"id": 2233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "944:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "944:58:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2243,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "1020:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2248,
																"indexExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2244,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "1025:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1025:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1039:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1025:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1020:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2249,
																"name": "outputToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "1045:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1020:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73776170546f6b656e733a20494e56414c49442050415448",
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1058:26:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															},
															"value": "swapTokens: INVALID PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6973c07d893563c485cf55ef7f38967433b38f17f96135f1de5085e51493e25a",
																"typeString": "literal_string \"swapTokens: INVALID PATH\""
															}
														],
														"id": 2242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1012:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "1012:73:11"
											},
											{
												"assignments": [
													2255
												],
												"declarations": [
													{
														"constant": false,
														"id": 2255,
														"mutability": "mutable",
														"name": "inputTokenBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2325,
														"src": "1096:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1096:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2265,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2262,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1157:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																],
																"id": 2261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1149:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1149:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1149:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2257,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "1127:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2256,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1120:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1120:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "1120:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:43:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1096:67:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2267,
																"name": "inputTokenBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "1181:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2268,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "1198:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1181:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73776170546f6b656e733a20494e53554646494349454e5420414d4f554e54",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1206:33:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f28e2ab797fc150d7f3661cea7d0fe9e1b37ae6fb159b5025e16201e53100bef",
																"typeString": "literal_string \"swapTokens: INSUFFICIENT AMOUNT\""
															},
															"value": "swapTokens: INSUFFICIENT AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f28e2ab797fc150d7f3661cea7d0fe9e1b37ae6fb159b5025e16201e53100bef",
																"typeString": "literal_string \"swapTokens: INSUFFICIENT AMOUNT\""
															}
														],
														"id": 2266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1173:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1173:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "1173:67:11"
											},
											{
												"assignments": [
													2274
												],
												"declarations": [
													{
														"constant": false,
														"id": 2274,
														"mutability": "mutable",
														"name": "outputTokenBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2325,
														"src": "1251:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1251:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2281,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1314:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																],
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1306:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2279,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1306:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1306:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2276,
																	"name": "outputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "1283:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2275,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1276:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1276:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "1276:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1276:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1251:69:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2289,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2204,
															"src": "1372:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2290,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "1380:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2286,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "1338:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2285,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1331:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "1331:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "1331:56:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2297,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "1485:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1505:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2299,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "1520:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2302,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1546:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																],
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1538:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2300,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1538:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1538:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2304,
																"name": "getTxDeadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "1565:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1565:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2294,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "1410:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2293,
																"name": "IGlideRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "1397:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGlideRouter_$2177_$",
																	"typeString": "type(contract IGlideRouter)"
																}
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1397:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGlideRouter_$2177",
																"typeString": "contract IGlideRouter"
															}
														},
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2150,
														"src": "1397:74:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1397:193:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "1397:193:11"
											},
											{
												"assignments": [
													2309
												],
												"declarations": [
													{
														"constant": false,
														"id": 2309,
														"mutability": "mutable",
														"name": "gains",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2325,
														"src": "1601:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1601:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2322,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2320,
															"name": "outputTokenBal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "1666:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2316,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1655:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_RouterHelper_$2455",
																				"typeString": "library RouterHelper"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_RouterHelper_$2455",
																				"typeString": "library RouterHelper"
																			}
																		],
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1647:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2314,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1647:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1647:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2311,
																			"name": "outputToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "1624:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2310,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "1617:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1617:19:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$615",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 554,
																"src": "1617:29:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1617:44:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 386,
														"src": "1617:48:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1601:80:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2323,
													"name": "gains",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2309,
													"src": "1698:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2324,
												"nodeType": "Return",
												"src": "1691:12:11"
											}
										]
									},
									"documentation": null,
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "670:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "686:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "inputToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "702:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "outputToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "722:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "743:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2211,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "743:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2212,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "743:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:96:11"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2326,
												"src": "784:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "783:9:11"
									},
									"scope": 2455,
									"src": "650:1060:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "1929:483:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2349,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "1983:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2350,
															"name": "token0Amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "1991:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2346,
																	"name": "token0Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "1946:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2345,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "1939:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1939:21:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "1939:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2352,
												"nodeType": "ExpressionStatement",
												"src": "1939:62:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2357,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2328,
															"src": "2055:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2358,
															"name": "token1Amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "2063:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2354,
																	"name": "token1Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "2018:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2353,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2011:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:21:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "2011:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "2011:62:11"
											},
											{
												"assignments": [
													2362,
													2364,
													2366
												],
												"declarations": [
													{
														"constant": false,
														"id": 2362,
														"mutability": "mutable",
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2390,
														"src": "2084:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2361,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2084:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2390,
														"src": "2098:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2363,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2098:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2390,
														"src": "2112:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2365,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2112:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2384,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2371,
															"name": "token0Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "2177:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2372,
															"name": "token1Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "2204:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2373,
															"name": "token0Amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "2231:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2374,
															"name": "token1Amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "2254:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2277:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2292:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2379,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2315:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																],
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2307:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2307:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2307:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2381,
																"name": "getTxDeadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "2334:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2334:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2368,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "2143:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2367,
																"name": "IGlideRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "2130:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGlideRouter_$2177_$",
																	"typeString": "type(contract IGlideRouter)"
																}
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2130:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGlideRouter_$2177",
																"typeString": "contract IGlideRouter"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1824,
														"src": "2130:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
														}
													},
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:229:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2083:276:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 2385,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "2377:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2386,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "2386:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2387,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "2395:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2388,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2376:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2344,
												"id": 2389,
												"nodeType": "Return",
												"src": "2369:36:11"
											}
										]
									},
									"documentation": null,
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1747:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "token0Address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1771:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "token1Address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1802:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "token0Amt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1833:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "token1Amt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1860:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1737:146:11"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1902:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1911:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2391,
												"src": "1920:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1901:27:11"
									},
									"scope": 2455,
									"src": "1716:696:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "2565:503:11",
										"statements": [
											{
												"assignments": [
													2405
												],
												"declarations": [
													{
														"constant": false,
														"id": 2405,
														"mutability": "mutable",
														"name": "token0Address",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2453,
														"src": "2575:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2575:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2411,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2407,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "2610:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2406,
																"name": "IGlidePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "2599:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGlidePair_$1787_$",
																	"typeString": "type(contract IGlidePair)"
																}
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2599:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGlidePair_$1787",
																"typeString": "contract IGlidePair"
															}
														},
														"id": 2409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1715,
														"src": "2599:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2575:56:11"
											},
											{
												"assignments": [
													2413
												],
												"declarations": [
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "token1Address",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2453,
														"src": "2641:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2412,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2641:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2419,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2415,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "2676:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2414,
																"name": "IGlidePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "2665:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGlidePair_$1787_$",
																	"typeString": "type(contract IGlidePair)"
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2665:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGlidePair_$1787",
																"typeString": "contract IGlidePair"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1720,
														"src": "2665:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2665:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2641:56:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2424,
															"name": "router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "2750:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2425,
															"name": "pairAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "2758:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2421,
																	"name": "pairAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2395,
																	"src": "2715:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2420,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2708:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$615_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2708:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$615",
																"typeString": "contract IERC20"
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "2708:41:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$615_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$615_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2708:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2427,
												"nodeType": "ExpressionStatement",
												"src": "2708:61:11"
											},
											{
												"assignments": [
													2429,
													2431
												],
												"declarations": [
													{
														"constant": false,
														"id": 2429,
														"mutability": "mutable",
														"name": "amount0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2453,
														"src": "2780:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2780:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "amount1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2453,
														"src": "2797:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2797:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2448,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2436,
															"name": "token0Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "2866:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2437,
															"name": "token1Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "2893:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2438,
															"name": "pairAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "2920:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2944:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2443,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2982:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RouterHelper_$2455",
																		"typeString": "library RouterHelper"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2974:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2974:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2445,
																"name": "getTxDeadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "3001:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3001:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2433,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "2829:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2432,
																"name": "IGlideRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "2816:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGlideRouter_$2177_$",
																	"typeString": "type(contract IGlideRouter)"
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2816:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGlideRouter_$2177",
																"typeString": "contract IGlideRouter"
															}
														},
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1866,
														"src": "2816:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2816:210:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2779:247:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 2449,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "3044:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2450,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "3053:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2451,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3043:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2403,
												"id": 2452,
												"nodeType": "Return",
												"src": "3036:25:11"
											}
										]
									},
									"documentation": null,
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2454,
												"src": "2452:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "pairAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2454,
												"src": "2476:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "pairAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2454,
												"src": "2505:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2442:87:11"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2454,
												"src": "2548:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2454,
												"src": "2557:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2547:18:11"
									},
									"scope": 2455,
									"src": "2418:650:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2456,
							"src": "363:2708:11"
						}
					],
					"src": "39:3032:11"
				},
				"id": 11
			}
		}
	}
}