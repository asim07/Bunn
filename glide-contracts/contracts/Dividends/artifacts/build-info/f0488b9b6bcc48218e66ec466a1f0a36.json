{
	"id": "f0488b9b6bcc48218e66ec466a1f0a36",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dividends/PhantzGlideStake.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract BunnyBunnStake is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    uint256 public lastUpdatedBlock;\n\n    mapping(address => uint256) public glideRewards;\n\n    IERC20 public immutable token; // Bunn token\n\n    event AddReward(address indexed user, uint256 block, uint256 amount);\n    event WithdrawReward(address indexed user, uint256 block, uint256 amount);\n    event RescueTokens(address indexed user, address indexed token, uint256 amount);\n\n    constructor(\n        IERC20 _token,\n        uint256 _startBlock\n    ) public {\n        token = _token;\n        lastUpdatedBlock = _startBlock;\n    }\n\n    receive() external payable {\n\n    }\n    \n    function setLastUpdateBlock(uint256 _lastUpdatedBlock) external onlyOwner {\n        lastUpdatedBlock = _lastUpdatedBlock;\n    }\n\n    function addGlideReward(address _user, uint256 _amount) external onlyOwner {\n        glideRewards[_user] = glideRewards[_user].add(_amount);\n\n        token.safeTransferFrom(msg.sender, address(this), _amount);\n\n        emit AddReward(_user, block.number, _amount);\n    }\n\n    function addGlideReward(address[] memory _users, uint256[] memory _amounts) external onlyOwner {\n        require(_users.length == _amounts.length, \"Arrays are not equal\");\n\n        for(uint256 i = 0; i < _users.length; i++) {\n            glideRewards[_users[i]] = glideRewards[_users[i]].add(_amounts[i]);\n\n            token.safeTransferFrom(msg.sender, address(this), _amounts[i]);\n\n            emit AddReward(_users[i], block.number, _amounts[i]);\n        }\n    }\n\n    function withdrawGlideReward() external nonReentrant {\n        if (glideRewards[msg.sender] > 0) {\n            uint256 amount = glideRewards[msg.sender];\n\n            glideRewards[msg.sender] = 0;\n            \n            token.safeTransfer(msg.sender, amount);\n            \n            emit WithdrawReward(msg.sender, block.number, amount);\n        }\n    }\n\n    function rescueToken(address rewardToken, address addressForReceive) external onlyOwner {\n        uint256 balance = IERC20(rewardToken).balanceOf(address(this));\n        IERC20(token).safeTransfer(addressForReceive, balance);\n        emit RescueTokens(msg.sender, rewardToken, balance);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE8 0xB3 0xE JUMP 0x22 KECCAK256 STOP 0xED 0x1F INVALID SELFBALANCE 0xC2 CODECOPY 0x2E PUSH32 0x14DB6413D7CA2BA4690B7E66E49B685C64736F6C634300060C00330000000000 ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE8 0xB3 0xE JUMP 0x22 KECCAK256 STOP 0xED 0x1F INVALID SELFBALANCE 0xC2 CODECOPY 0x2E PUSH32 0x14DB6413D7CA2BA4690B7E66E49B685C64736F6C634300060C00330000000000 ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084e8b30e56222000ed1ffe47c2392e7f14db6413d7ca2ba4690b7e66e49b685c64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":616:3720  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE0 0xD1 SELFDESTRUCT PUSH32 0x2C2D733D847B459A235EE7C593115D17C8B4E8DD44CFF50888CA9864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xE0 0xD1 SELFDESTRUCT PUSH32 0x2C2D733D847B459A235EE7C593115D17C8B4E8DD44CFF50888CA9864736F6C63 NUMBER STOP MOD 0xC STOP CALLER ",
							"sourceMap": "616:3104:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 616,
									"end": 3720,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008e0d1ff7f2c2d733d847b459a235ee7c593115d17c8b4e8dd44cff50888ca9864736f6c634300060c0033",
									".code": [
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 616,
											"end": 3720,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":134:7818  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB6 0x22 0x29 INVALID PUSH30 0x609475A1D56051D57A1B79C6D477BBA6A418596CF0C9977D3B3A64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB6 0x22 0x29 INVALID PUSH30 0x609475A1D56051D57A1B79C6D477BBA6A418596CF0C9977D3B3A64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "134:7684:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 134,
									"end": 7818,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3b62229fe7d609475a1d56051d57a1b79c6d477bba6a418596cf0c9977d3b3a64736f6c634300060c0033",
									".code": [
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 134,
											"end": 7818,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dividends/PhantzGlideStake.sol": {
				"BunnyBunnStake": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "block",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AddReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RescueTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "block",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawReward",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addGlideReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "addGlideReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "glideRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdatedBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "addressForReceive",
									"type": "address"
								}
							],
							"name": "rescueToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lastUpdatedBlock",
									"type": "uint256"
								}
							],
							"name": "setLastUpdateBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawGlideReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dividends/PhantzGlideStake.sol\":340:2580  contract BunnyBunnStake is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":844:992  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1760:1782  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":931:945  token = _token */\n  0x60\n  swap2\n  swap1\n  swap2\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n  and\n  0x80\n  mstore\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":955:971  lastUpdatedBlock */\n  0x02\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":955:985  lastUpdatedBlock = _startBlock */\n  sstore\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":340:2580  contract BunnyBunnStake is Ownable, ReentrancyGuard {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Dividends/PhantzGlideStake.sol\":340:2580  contract BunnyBunnStake is Ownable, ReentrancyGuard {... */\ntag_11:\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":340:2580  contract BunnyBunnStake is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf90ce5ba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc945c0d4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd5af17e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x6d273e91\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x6d273e91\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x817fd71b\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x146a3e2c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4707d000\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":501:548  mapping(address => uint256) public glideRewards */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_22\n      jump\t// in\n    tag_20:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2286:2578  function rescueToken(address rewardToken, address addressForReceive) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_26\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1043:1170  function setLastUpdateBlock(uint256 _lastUpdatedBlock) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      calldataload\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_24\n      tag_33\n      jump\t// in\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1176:1446  function addGlideReward(address _user, uint256 _amount) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1452:1917  function addGlideReward(address[] memory _users, uint256[] memory _amounts) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_50\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1923:2280  function withdrawGlideReward() external nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_24\n      tag_53\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_57\n      jump\t// in\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":463:494  uint256 public lastUpdatedBlock */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_20\n      tag_60\n      jump\t// in\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":555:584  IERC20 public immutable token */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_39\n      tag_63\n      jump\t// in\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":501:548  mapping(address => uint256) public glideRewards */\n    tag_22:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2286:2578  function rescueToken(address rewardToken, address addressForReceive) external onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2384:2399  uint256 balance */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2409:2420  rewardToken */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2402:2431  IERC20(rewardToken).balanceOf */\n      and\n      0x70a08231\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2440:2444  this */\n      address\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2402:2446  IERC20(rewardToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2456:2510  IERC20(token).safeTransfer(addressForReceive, balance) */\n      tag_74\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2463:2468  token */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2456:2482  IERC20(token).safeTransfer */\n      and\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2483:2500  addressForReceive */\n      dup4\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2402:2446  IERC20(rewardToken).balanceOf(address(this)) */\n      dup4\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2456:2482  IERC20(token).safeTransfer */\n      tag_75\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2456:2510  IERC20(token).safeTransfer(addressForReceive, balance) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2525:2571  RescueTokens(msg.sender, rewardToken, balance) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2538:2548  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2525:2571  RescueTokens(msg.sender, rewardToken, balance) */\n      0x0de377c3f3362540c047602ad996510f81ec5d84f9ad151c7b6ebecce8ea6b7b\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1367:1368  _ */\n      pop\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2286:2578  function rescueToken(address rewardToken, address addressForReceive) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1043:1170  function setLastUpdateBlock(uint256 _lastUpdatedBlock) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1127:1143  lastUpdatedBlock */\n      0x02\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1127:1163  lastUpdatedBlock = _lastUpdatedBlock */\n      sstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1043:1170  function setLastUpdateBlock(uint256 _lastUpdatedBlock) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1176:1446  function addGlideReward(address _user, uint256 _amount) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1302  glideRewards[_user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1295  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1302  glideRewards[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1315  glideRewards[_user].add(_amount) */\n      tag_91\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1307:1314  _amount */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1306  glideRewards[_user].add */\n      tag_92\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1283:1315  glideRewards[_user].add(_amount) */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1261:1280  glideRewards[_user] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1261:1273  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1261:1280  glideRewards[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1261:1315  glideRewards[_user] = glideRewards[_user].add(_amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1326:1384  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_93\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1326:1331  token */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1326:1348  token.safeTransferFrom */\n      and\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1349:1359  msg.sender */\n      caller\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1369:1373  this */\n      address\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1376:1383  _amount */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1326:1348  token.safeTransferFrom */\n      tag_94\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1326:1384  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1400:1439  AddReward(_user, block.number, _amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1417:1429  block.number */\n      number\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1400:1439  AddReward(_user, block.number, _amount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap3\n      0x8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1176:1446  function addGlideReward(address _user, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1452:1917  function addGlideReward(address[] memory _users, uint256[] memory _amounts) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1582:1590  _amounts */\n      dup1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1582:1597  _amounts.length */\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1565:1571  _users */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1565:1578  _users.length */\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1565:1597  _users.length == _amounts.length */\n      eq\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1557:1622  require(_users.length == _amounts.length, \"Arrays are not equal\") */\n      tag_101\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x41727261797320617265206e6f7420657175616c000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1637:1646  uint256 i */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1633:1911  for(uint256 i = 0; i < _users.length; i++) {... */\n    tag_102:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1656:1662  _users */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1656:1669  _users.length */\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1652:1653  i */\n      dup2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1652:1669  i < _users.length */\n      lt\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1633:1911  for(uint256 i = 0; i < _users.length; i++) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1756  glideRewards[_users[i]].add(_amounts[i]) */\n      tag_105\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1744:1752  _amounts */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1753:1754  i */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1744:1755  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1728  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1739  glideRewards[_users[i]] */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1729:1735  _users */\n      dup7\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1736:1737  i */\n      dup6\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1729:1738  _users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1739  glideRewards[_users[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1743  glideRewards[_users[i]].add */\n      tag_92\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1716:1756  glideRewards[_users[i]].add(_amounts[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1690:1702  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1690:1713  glideRewards[_users[i]] */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1703:1709  _users */\n      dup6\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1710:1711  i */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1703:1712  _users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1690:1713  glideRewards[_users[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1690:1756  glideRewards[_users[i]] = glideRewards[_users[i]].add(_amounts[i]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1771:1833  token.safeTransferFrom(msg.sender, address(this), _amounts[i]) */\n      tag_109\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1794:1804  msg.sender */\n      caller\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1814:1818  this */\n      address\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1821:1829  _amounts */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1830:1831  i */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1821:1832  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_110\n      jumpi\n      invalid\n    tag_110:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1771:1776  token */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1771:1793  token.safeTransferFrom */\n      and\n      tag_94\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1771:1833  token.safeTransferFrom(msg.sender, address(this), _amounts[i]) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1863:1869  _users */\n      dup3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1870:1871  i */\n      dup2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1863:1872  _users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1853:1900  AddReward(_users[i], block.number, _amounts[i]) */\n      and\n      0x8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1874:1886  block.number */\n      number\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1888:1896  _amounts */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1897:1898  i */\n      dup5\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1888:1899  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1853:1900  AddReward(_users[i], block.number, _amounts[i]) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1671:1674  i++ */\n      0x01\n      add\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1633:1911  for(uint256 i = 0; i < _users.length; i++) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1452:1917  function addGlideReward(address[] memory _users, uint256[] memory _amounts) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1923:2280  function withdrawGlideReward() external nonReentrant {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2284  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2277:2296  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2269:2332  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1688:1689  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2414  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2407:2425  _status = _ENTERED */\n      sstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2003:2013  msg.sender */\n      caller\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2017:2018  0 */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1990:2014  glideRewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1990:2002  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1990:2014  glideRewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1990:2018  glideRewards[msg.sender] > 0 */\n      iszero\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1986:2274  if (glideRewards[msg.sender] > 0) {... */\n      tag_116\n      jumpi\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2064:2074  msg.sender */\n      caller\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2034:2048  uint256 amount */\n      0x00\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2051:2075  glideRewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2051:2063  glideRewards */\n      0x03\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2051:2075  glideRewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2090:2118  glideRewards[msg.sender] = 0 */\n      swap2\n      swap1\n      sstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2051:2075  glideRewards[msg.sender] */\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2145:2183  token.safeTransfer(msg.sender, amount) */\n      tag_117\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2145:2150  token */\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2145:2163  token.safeTransfer */\n      and\n      swap1\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2051:2075  glideRewards[msg.sender] */\n      dup4\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2145:2163  token.safeTransfer */\n      tag_75\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2145:2183  token.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2215:2263  WithdrawReward(msg.sender, block.number, amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2242:2254  block.number */\n      number\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2215:2263  WithdrawReward(msg.sender, block.number, amount) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2230:2240  msg.sender */\n      caller\n      swap3\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":2215:2263  WithdrawReward(msg.sender, block.number, amount) */\n      0x48f1e4b8fb0469595617480e6784e40ab6b8c49209761b8e09305bf7b73e53de\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1986:2274  if (glideRewards[msg.sender] > 0) {... */\n      pop\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1645:1646  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2580:2602  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":1923:2280  function withdrawGlideReward() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_121\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x00\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      swap3\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":463:494  uint256 public lastUpdatedBlock */\n    tag_60:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Dividends/PhantzGlideStake.sol\":555:584  IERC20 public immutable token */\n    tag_63:\n      immutable(\"0x0a2c56019ccb5f08608c3b05b18a6137874ce411ef59ecc21ab7d289712eec9f\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":704:879  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":836:859  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":813:871  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_103\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":806:811  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:805  _callOptionalReturn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":786:872  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_129\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      swap4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1012:1080  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1035:1062  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1012:1080  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_131\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":1005:1010  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1004  _callOptionalReturn */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":985:1081  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":885:1088  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":2967:3718  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3409  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3440:3444  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3420:3425  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3439  address(token).functionCall */\n      and\n      tag_134\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3412:3481  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3512  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3386:3481  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3495:3516  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3491:3712  if (returndata.length > 0) { // Return data is optional... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3635:3645  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3624:3654  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":3616:3701  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3684:3696  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3737:3743  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3745:3749  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3751:3752  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3754:3766  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3736  functionCallWithValue */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3715:3767  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3708:3767  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3581:3774  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4735:4747  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4792:4797  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4788  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4767:4797  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4759:4840  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4869:4875  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4868  isContract */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4858:4876  isContract(target) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4850:4910  require(isContract(target), \"Address: call to non-contract\") */\n      tag_145\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4981:4993  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4995:5018  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5028  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5033  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5042:5047  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5050:5054  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5022:5055  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_146:\n      0x20\n      dup4\n      lt\n      tag_148\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_146)\n    tag_148:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_151\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_150)\n    tag_151:\n      0x60\n      swap2\n      pop\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4980:5055  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5090:5097  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5099:5109  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5111:5123  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5089  _verifyCallResult */\n      tag_153\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5072:5124  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5065:5124  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4608:5131  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1086:1106  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1124:1132  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":726:1139  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7091:7816  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7206:7218  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7234:7241  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7264:7274  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7257:7274  return returndata */\n      jump(tag_129)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7230:7810  if (success) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7392  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7375:7396  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7371:7800  if (returndata.length > 0) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7633:7643  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7627:7644  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7693:7708  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7680:7690  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7676:7678  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7672:7691  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7665:7709  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7582:7727  {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7772:7784  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7785  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_160:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_162\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_160)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_163:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220048bd7f34f8a11be295695e275d20deaedd93dab7b28cd06c1ae9bfcabc7b3bb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11EE CODESIZE SUB DUP1 PUSH2 0x11EE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 PUSH2 0x46 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0x2 SSTORE PUSH2 0xB3 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x110A PUSH2 0xE4 PUSH1 0x0 CODECOPY DUP1 PUSH2 0x4AD MSTORE DUP1 PUSH2 0x717 MSTORE DUP1 PUSH2 0x920 MSTORE DUP1 PUSH2 0xA61 MSTORE DUP1 PUSH2 0xBFB MSTORE POP PUSH2 0x110A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xF90CE5BA EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x388 JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC945C0D4 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDD5AF17E EQ PUSH2 0x32B JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x6D273E91 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6D273E91 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x817FD71B EQ PUSH2 0x18D JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x146A3E2C EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4707D000 EQ PUSH2 0x111 JUMPI PUSH2 0xC7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xC7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x592 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x65D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x795 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C8 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x423 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x4D4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0xDE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x532 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x59A PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5AB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x606 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x665 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x676 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F4 SWAP1 DUP3 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x73F SWAP1 PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH32 0x8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x79D PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AE PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x809 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x85F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41727261797320617265206E6F7420657175616C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x8C9 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x87A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCA1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8D9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x958 CALLER ADDRESS DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x916 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD02 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x964 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0 NUMBER DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x862 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xACC JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0xA90 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x48F1E4B8FB0469595617480E6784E40AB6B8C49209761B8E09305BF7B73E53DE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xADA PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAEB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x105F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x9CF SWAP1 DUP5 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xD8A SWAP1 DUP6 SWAP1 PUSH2 0xD90 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDE5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x9CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10AB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xE50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1085 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA2 DUP6 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0xEF3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF32 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFA9 DUP3 DUP3 DUP7 PUSH2 0xFBA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xFC9 JUMPI POP DUP2 PUSH2 0xCFB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFD9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1023 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x100B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1050 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220048BD7F3 0x4F DUP11 GT 0xBE 0x29 JUMP SWAP6 0xE2 PUSH22 0xD20DEAEDD93DAB7B28CD06C1AE9BFCABC7B3BB64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "340:2240:7:-:0;;;844:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;844:148:7;;;;;;;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;-1:-1:-1;1645:1:6;1760:22;;931:14:7;;;;;-1:-1:-1;;;;;;931:14:7;;;955:16;:30;340:2240;;598:104:5;685:10;598:104;:::o;340:2240:7:-;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {
								"1139": [
									{
										"length": 32,
										"start": 1197
									},
									{
										"length": 32,
										"start": 1815
									},
									{
										"length": 32,
										"start": 2336
									},
									{
										"length": 32,
										"start": 2657
									},
									{
										"length": 32,
										"start": 3067
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c05760003560e01c80638da5cb5b11610074578063f2fde38b1161004e578063f2fde38b14610340578063f90ce5ba14610373578063fc0c546a14610388576100c7565b80638da5cb5b146101c6578063c945c0d4146101f7578063dd5af17e1461032b576100c7565b80636d273e91116100a55780636d273e911461014e578063715018a614610178578063817fd71b1461018d576100c7565b8063146a3e2c146100cc5780634707d00014610111576100c7565b366100c757005b600080fd5b3480156100d857600080fd5b506100ff600480360360208110156100ef57600080fd5b50356001600160a01b031661039d565b60408051918252519081900360200190f35b34801561011d57600080fd5b5061014c6004803603604081101561013457600080fd5b506001600160a01b03813581169160200135166103af565b005b34801561015a57600080fd5b5061014c6004803603602081101561017157600080fd5b5035610519565b34801561018457600080fd5b5061014c610592565b34801561019957600080fd5b5061014c600480360360408110156101b057600080fd5b506001600160a01b03813516906020013561065d565b3480156101d257600080fd5b506101db610786565b604080516001600160a01b039092168252519081900360200190f35b34801561020357600080fd5b5061014c6004803603604081101561021a57600080fd5b81019060208101813564010000000081111561023557600080fd5b82018360208201111561024757600080fd5b8035906020019184602083028401116401000000008311171561026957600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156102b957600080fd5b8201836020820111156102cb57600080fd5b803590602001918460208302840111640100000000831117156102ed57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610795945050505050565b34801561033757600080fd5b5061014c6109d4565b34801561034c57600080fd5b5061014c6004803603602081101561036357600080fd5b50356001600160a01b0316610ad2565b34801561037f57600080fd5b506100ff610bf3565b34801561039457600080fd5b506101db610bf9565b60036020526000908152604090205481565b6103b7610c1d565b6001600160a01b03166103c8610786565b6001600160a01b031614610423576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561047257600080fd5b505afa158015610486573d6000803e3d6000fd5b505050506040513d602081101561049c57600080fd5b505190506104d46001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610c21565b6040805182815290516001600160a01b0385169133917f0de377c3f3362540c047602ad996510f81ec5d84f9ad151c7b6ebecce8ea6b7b9181900360200190a3505050565b610521610c1d565b6001600160a01b0316610532610786565b6001600160a01b03161461058d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600255565b61059a610c1d565b6001600160a01b03166105ab610786565b6001600160a01b031614610606576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b610665610c1d565b6001600160a01b0316610676610786565b6001600160a01b0316146106d1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0382166000908152600360205260409020546106f49082610ca1565b6001600160a01b0380841660009081526003602052604090209190915561073f907f000000000000000000000000000000000000000000000000000000000000000016333084610d02565b604080514381526020810183905281516001600160a01b038516927f8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0928290030190a25050565b6000546001600160a01b031690565b61079d610c1d565b6001600160a01b03166107ae610786565b6001600160a01b031614610809576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b805182511461085f576040805162461bcd60e51b815260206004820152601460248201527f41727261797320617265206e6f7420657175616c000000000000000000000000604482015290519081900360640190fd5b60005b82518110156109cf576108c982828151811061087a57fe5b60200260200101516003600086858151811061089257fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054610ca190919063ffffffff16565b600360008584815181106108d957fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550610958333084848151811061091657fe5b60200260200101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d02909392919063ffffffff16565b82818151811061096457fe5b60200260200101516001600160a01b03167f8ad4c79f7fda5880944bd79d8607b099b5d19d1a10100101c978cdbc3878d3e0438484815181106109a357fe5b6020026020010151604051808381526020018281526020019250505060405180910390a2600101610862565b505050565b60026001541415610a2c576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001553360009081526003602052604090205415610acc57336000818152600360205260408120805491905590610a90907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083610c21565b6040805143815260208101839052815133927f48f1e4b8fb0469595617480e6784e40ab6b8c49209761b8e09305bf7b73e53de928290030190a2505b60018055565b610ada610c1d565b6001600160a01b0316610aeb610786565b6001600160a01b031614610b46576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610b8b5760405162461bcd60e51b815260040180806020018281038252602681526020018061105f6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526109cf908490610d90565b600082820183811015610cfb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610d8a908590610d90565b50505050565b6060610de5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e419092919063ffffffff16565b8051909150156109cf57808060200190516020811015610e0457600080fd5b50516109cf5760405162461bcd60e51b815260040180806020018281038252602a8152602001806110ab602a913960400191505060405180910390fd5b6060610e508484600085610e58565b949350505050565b606082471015610e995760405162461bcd60e51b81526004018080602001828103825260268152602001806110856026913960400191505060405180910390fd5b610ea285610fb4565b610ef3576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610f325780518252601f199092019160209182019101610f13565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610f94576040519150601f19603f3d011682016040523d82523d6000602084013e610f99565b606091505b5091509150610fa9828286610fba565b979650505050505050565b3b151590565b60608315610fc9575081610cfb565b825115610fd95782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561102357818101518382015260200161100b565b50505050905090810190601f1680156110505780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220048bd7f34f8a11be295695e275d20deaedd93dab7b28cd06c1ae9bfcabc7b3bb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x74 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xF90CE5BA EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x388 JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC945C0D4 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xDD5AF17E EQ PUSH2 0x32B JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x6D273E91 GT PUSH2 0xA5 JUMPI DUP1 PUSH4 0x6D273E91 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x817FD71B EQ PUSH2 0x18D JUMPI PUSH2 0xC7 JUMP JUMPDEST DUP1 PUSH4 0x146A3E2C EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x4707D000 EQ PUSH2 0x111 JUMPI PUSH2 0xC7 JUMP JUMPDEST CALLDATASIZE PUSH2 0xC7 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x592 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x65D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x795 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x9D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DB PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C8 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x423 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x4D4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP4 DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 CALLER SWAP2 PUSH32 0xDE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x521 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x532 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH2 0x59A PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5AB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x606 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x665 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x676 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F4 SWAP1 DUP3 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x73F SWAP1 PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH32 0x8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x79D PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AE PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x809 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x85F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41727261797320617265206E6F7420657175616C000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x8C9 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x87A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xCA1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8D9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x958 CALLER ADDRESS DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x916 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD02 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x964 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0 NUMBER DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x9A3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 ADD PUSH2 0x862 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xACC JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0xA90 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD NUMBER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD CALLER SWAP3 PUSH32 0x48F1E4B8FB0469595617480E6784E40AB6B8C49209761B8E09305BF7B73E53DE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xADA PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAEB PUSH2 0x786 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB46 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x105F PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x9CF SWAP1 DUP5 SWAP1 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xD8A SWAP1 DUP6 SWAP1 PUSH2 0xD90 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDE5 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x9CF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x10AB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xE50 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xE58 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1085 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA2 DUP6 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0xEF3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF32 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFA9 DUP3 DUP3 DUP7 PUSH2 0xFBA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xFC9 JUMPI POP DUP2 PUSH2 0xCFB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xFD9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1023 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x100B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1050 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220048BD7F3 0x4F DUP11 GT 0xBE 0x29 JUMP SWAP6 0xE2 PUSH22 0xD20DEAEDD93DAB7B28CD06C1AE9BFCABC7B3BB64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "340:2240:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:47:7;-1:-1:-1;;;;;501:47:7;;:::i;:::-;;;;;;;;;;;;;;;;2286:292;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2286:292:7;;;;;;;;;;:::i;:::-;;1043:127;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1043:127:7;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;1176:270:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1176:270:7;;;;;;;;:::i;1085:85:0:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1085:85:0;;;;;;;;;;;;;;1452:465:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1452:465:7;;;;;;;;-1:-1:-1;1452:465:7;;-1:-1:-1;;1452:465:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1452:465:7;;-1:-1:-1;1452:465:7;;-1:-1:-1;;;;;1452:465:7:i;1923:357::-;;;;;;;;;;;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;463:31:7:-;;;;;;;;;;;;;:::i;555:29::-;;;;;;;;;;;;;:::i;501:47::-;;;;;;;;;;;;;:::o;2286:292::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:15:7::1;2409:11;-1:-1:-1::0;;;;;2402:29:7::1;;2440:4;2402:44;;;;;;;;;;;;;-1:-1:-1::0;;;;;2402:44:7::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2402:44:7;;-1:-1:-1;2456:54:7::1;-1:-1:-1::0;;;;;2463:5:7::1;2456:26;2483:17:::0;2402:44;2456:26:::1;:54::i;:::-;2525:46;::::0;;;;;;;-1:-1:-1;;;;;2525:46:7;::::1;::::0;2538:10:::1;::::0;2525:46:::1;::::0;;;;::::1;::::0;;::::1;1367:1:0;2286:292:7::0;;:::o;1043:127::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:16:7::1;:36:::0;1043:127::o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;1836:19:0::1;::::0;;1717:145::o;1176:270:7:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1283:19:7;::::1;;::::0;;;:12:::1;:19;::::0;;;;;:32:::1;::::0;1307:7;1283:23:::1;:32::i;:::-;-1:-1:-1::0;;;;;1261:19:7;;::::1;;::::0;;;:12:::1;:19;::::0;;;;:54;;;;1326:58:::1;::::0;:5:::1;:22;1349:10;1369:4;1376:7:::0;1326:22:::1;:58::i;:::-;1400:39;::::0;;1417:12:::1;1400:39:::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;1400:39:7;::::1;::::0;::::1;::::0;;;;;;::::1;1176:270:::0;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;1452:465:7:-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:8:7::1;:15;1565:6;:13;:32;1557:65;;;::::0;;-1:-1:-1;;;1557:65:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1637:9;1633:278;1656:6;:13;1652:1;:17;1633:278;;;1716:40;1744:8;1753:1;1744:11;;;;;;;;;;;;;;1716:12;:23;1729:6;1736:1;1729:9;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1716:23:7::1;-1:-1:-1::0;;;;;1716:23:7::1;;;;;;;;;;;;;:27;;:40;;;;:::i;:::-;1690:12;:23;1703:6;1710:1;1703:9;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1690:23:7::1;-1:-1:-1::0;;;;;1690:23:7::1;;;;;;;;;;;;:66;;;;1771:62;1794:10;1814:4;1821:8;1830:1;1821:11;;;;;;;;;;;;;;1771:5;-1:-1:-1::0;;;;;1771:22:7::1;;;:62;;;;;;:::i;:::-;1863:6;1870:1;1863:9;;;;;;;;;;;;;;-1:-1:-1::0;;;;;1853:47:7::1;;1874:12;1888:8;1897:1;1888:11;;;;;;;;;;;;;;1853:47;;;;;;;;;;;;;;;;;;;;;;;;1671:3;;1633:278;;;;1452:465:::0;;:::o;1923:357::-;1688:1:6;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;2003:10:7::1;2017:1;1990:24:::0;;;:12:::1;:24;::::0;;;;;:28;1986:288:::1;;2064:10;2034:14;2051:24:::0;;;:12:::1;:24;::::0;;;;;;2090:28;;;2051:24;2145:38:::1;::::0;:5:::1;-1:-1:-1::0;;;;;2145:18:7::1;::::0;2051:24;2145:18:::1;:38::i;:::-;2215:48;::::0;;2242:12:::1;2215:48:::0;;::::1;::::0;::::1;::::0;;;;;2230:10:::1;::::0;2215:48:::1;::::0;;;;;;::::1;1986:288;;1645:1:6::0;2580:22;;1923:357:7:o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;463:31:7:-;;;;:::o;555:29::-;;;:::o;598:104:5:-;685:10;598:104;:::o;704:175:3:-;813:58;;;-1:-1:-1;;;;;813:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:23;813:58;;;786:86;;806:5;;786:19;:86::i;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:1:o;885:203:3:-;1012:68;;;-1:-1:-1;;;;;1012:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:27;1012:68;;;985:96;;1005:5;;985:19;:96::i;:::-;885:203;;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:3;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:3;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:3;3616:85;;;;-1:-1:-1;;;3616:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:4;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:4:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:4;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:4:o;726:413::-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:4;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "872400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addGlideReward(address,uint256)": "infinite",
								"addGlideReward(address[],uint256[])": "infinite",
								"glideRewards(address)": "1148",
								"lastUpdatedBlock()": "1042",
								"owner()": "1060",
								"renounceOwnership()": "24288",
								"rescueToken(address,address)": "infinite",
								"setLastUpdateBlock(uint256)": "21142",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawGlideReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 844,
									"end": 992,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 844,
									"end": 992,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 844,
									"end": 992,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1760,
									"end": 1782,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 931,
									"end": 945,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 931,
									"end": 945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 931,
									"end": 945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 931,
									"end": 945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 931,
									"end": 945,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 931,
									"end": 945,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 931,
									"end": 945,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 931,
									"end": 945,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 955,
									"end": 971,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 985,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "1139"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 2580,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220048bd7f34f8a11be295695e275d20deaedd93dab7b28cd06c1ae9bfcabc7b3bb64736f6c634300060c0033",
									".code": [
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "F90CE5BA"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "C945C0D4"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "DD5AF17E"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "6D273E91"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "6D273E91"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "817FD71B"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "146A3E2C"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "4707D000"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 340,
											"end": 2580,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 501,
											"end": 548,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 501,
											"end": 548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 501,
											"end": 548,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2384,
											"end": 2399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2431,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2463,
											"end": 2468,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1139"
										},
										{
											"begin": 2456,
											"end": 2482,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2548,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "DE377C3F3362540C047602AD996510F81EC5D84F9AD151C7B6EBECCE8EA6B7B"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2578,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1127,
											"end": 1163,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1043,
											"end": 1170,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1295,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1302,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1273,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1280,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1315,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1326,
											"end": 1384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1139"
										},
										{
											"begin": 1326,
											"end": 1348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1373,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1326,
											"end": 1384,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1384,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1326,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0"
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1439,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1446,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1565,
											"end": 1597,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "41727261797320617265206E6F7420657175616C000000000000000000000000"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1744,
											"end": 1752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1755,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1728,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1739,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1716,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1713,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1756,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1756,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1829,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1776,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1771,
											"end": 1793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1771,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "8AD4C79F7FDA5880944BD79D8607B099B5D19D1A10100101C978CDBC3878D3E0"
										},
										{
											"begin": 1874,
											"end": 1886,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "INVALID",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1900,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1452,
											"end": 1917,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2269,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2407,
											"end": 2425,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2013,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2014,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1986,
											"end": 2274,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2074,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2118,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2145,
											"end": 2183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2075,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2145,
											"end": 2183,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2145,
											"end": 2183,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2145,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2254,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "PUSH",
											"source": 7,
											"value": "48F1E4B8FB0469595617480E6784E40AB6B8C49209761B8E09305BF7B73E53DE"
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2263,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1986,
											"end": 2274,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1986,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2602,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 2280,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 494,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 463,
											"end": 494,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1139"
										},
										{
											"begin": 555,
											"end": 584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 555,
											"end": 584,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 704,
											"end": 879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 871,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 813,
											"end": 871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 786,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 806,
											"end": 811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 806,
											"end": 811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 786,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 786,
											"end": 872,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 985,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 1088,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2967,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3412,
											"end": 3439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3412,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3495,
											"end": 3516,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3491,
											"end": 3712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3624,
											"end": 3654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH data",
											"source": 3,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3701,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3684,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3715,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3767,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3774,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4788,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH data",
											"source": 4,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4759,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4858,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4850,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5047,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5022,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 5055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5090,
											"end": 5097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5123,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5072,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5072,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5065,
											"end": 5124,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 5131,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1139,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7091,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7264,
											"end": 7274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7257,
											"end": 7274,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 7230,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7392,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7371,
											"end": 7800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7678,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7582,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "REVERT",
											"source": 4
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"addGlideReward(address,uint256)": "817fd71b",
							"addGlideReward(address[],uint256[])": "c945c0d4",
							"glideRewards(address)": "146a3e2c",
							"lastUpdatedBlock()": "f90ce5ba",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rescueToken(address,address)": "4707d000",
							"setLastUpdateBlock(uint256)": "6d273e91",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"withdrawGlideReward()": "dd5af17e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AddReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RescueTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawReward\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addGlideReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"addGlideReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"glideRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addressForReceive\",\"type\":\"address\"}],\"name\":\"rescueToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastUpdatedBlock\",\"type\":\"uint256\"}],\"name\":\"setLastUpdateBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGlideReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dividends/PhantzGlideStake.sol\":\"BunnyBunnStake\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]},\"contracts/Dividends/PhantzGlideStake.sol\":{\"keccak256\":\"0xdab1c2677c4beec066031e929647d9c79de63951429854c061bb2e33ce91873e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3449899e51116e35aa8b6c7f04df5df9cfd9183865ebee99de36d52c907decfc\",\"dweb:/ipfs/QmPutK7VjK3fqpSeCLkKQ1dUn2TyMSKiU97kkBMQZCmGjB\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 1075,
							"src": "66:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1074,
										"src": "621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1074",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:0"
								}
							],
							"contractDependencies": [
								1074
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								1074
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "635:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "691:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "722:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:0"
									},
									"src": "664:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "874:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "884:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "926:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "935:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "926:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "954:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 109,
									"src": "850:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1140:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1150:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 109,
									"src": "1085:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1279:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1297:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "1308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:0"
									},
									"src": "1258:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1771:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1781:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1761:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:0"
									},
									"scope": 109,
									"src": "1717:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2081:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2179:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2174:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2071:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:0"
									},
									"scope": 109,
									"src": "2011:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "592:1661:0"
						}
					],
					"src": "33:2221:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 142,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 137,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 123,
													"id": 136,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 140,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 464,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 162,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 154,
													"id": 161,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 167,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 154,
												"id": 168,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 464,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 189,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 188,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 210,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 197,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 204,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 181,
												"id": 209,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 464,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 230,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 222,
													"id": 229,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 235,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 222,
												"id": 236,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 464,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 249,
													"id": 256,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 464,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 290,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 282,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 288,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 289,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 464,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 311,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 464,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 323,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 328,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 322,
													"id": 327,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 346,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 344,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 345,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 464,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 367,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 464,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 389,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 464,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 407,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 413,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 464,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 431,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 435,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 437,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 464,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 461,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 464,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							542
						]
					},
					"id": 543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 467,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 542,
							"linearizedBaseContracts": [
								542
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:2"
									},
									"scope": 542,
									"src": "231:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 481,
												"src": "428:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:2"
									},
									"scope": 542,
									"src": "369:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "675:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:2"
									},
									"scope": 542,
									"src": "657:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "1028:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "1083:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:2"
									},
									"scope": 542,
									"src": "1009:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "1762:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "1779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "1813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:2"
									},
									"scope": 542,
									"src": "1745:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2148:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2164:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2183:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "2217:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:2"
									},
									"scope": 542,
									"src": "2126:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 532,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2429:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 532,
												"src": "2449:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:2"
									},
									"src": "2392:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 541,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "2638:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "2661:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 541,
												"src": "2686:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:2"
									},
									"src": "2623:78:2"
								}
							],
							"scope": 543,
							"src": "137:2566:2"
						}
					],
					"src": "33:2671:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 544,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 545,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 543,
							"src": "66:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 546,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 465,
							"src": "89:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 547,
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 1052,
							"src": "123:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 548,
								"nodeType": "StructuredDocumentation",
								"src": "158:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 551,
									"libraryName": {
										"contractScope": null,
										"id": 549,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "646:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "640:27:3",
									"typeName": {
										"id": 550,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 554,
									"libraryName": {
										"contractScope": null,
										"id": 552,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1051,
										"src": "678:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1051",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "672:26:3",
									"typeName": {
										"id": 553,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "776:103:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 564,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "806:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 567,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 491,
																		"src": "836:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "836:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 570,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "861:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "865:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 565,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "813:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "813:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 563,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "786:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "786:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "786:86:3"
											}
										]
									},
									"documentation": null,
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "726:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 555,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "726:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "740:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 576,
												"src": "752:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:41:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:3"
									},
									"scope": 755,
									"src": "704:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "975:113:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 588,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "1005:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 591,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "1035:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 523,
																		"src": "1035:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1035:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 594,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "1064:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 595,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1070:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 596,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1074:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 589,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1012:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1012:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1012:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 587,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "985:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "985:96:3"
											}
										]
									},
									"documentation": null,
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "911:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 577,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "911:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "925:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "939:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "951:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:55:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:3"
									},
									"scope": 755,
									"src": "885:203:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "1424:537:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "1713:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1722:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1713:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 615,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1712:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 620,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1753:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$755",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1745:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 618,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1745:7:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 621,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1745:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 622,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 606,
																					"src": "1760:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 616,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "1729:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$542",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 501,
																				"src": "1729:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1729:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1772:1:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1729:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 626,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1728:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1712:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1788:56:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1704:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1704:150:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1884:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 635,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "1914:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "1914:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1914:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 638,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "1938:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 633,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1891:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1891:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1891:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1864:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "1864:90:3"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1094:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "1369:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 603,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "1369:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "1383:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "1400:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1368:46:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1424:0:3"
									},
									"scope": 755,
									"src": "1348:613:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2053:197:3",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 679,
														"src": "2063:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2063:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 664,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "2130:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 659,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2110:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2102:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 657,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2102:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2102:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 661,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2117:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 655,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "2086:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "2086:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "2086:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2063:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 668,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "2166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 671,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 646,
																			"src": "2196:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "2196:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2196:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 674,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "2220:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 675,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "2229:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 669,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2173:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2173:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2173:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 667,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2146:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2146:97:3"
											}
										]
									},
									"documentation": null,
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 680,
												"src": "1998:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 645,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "1998:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 680,
												"src": "2012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 680,
												"src": "2029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1997:46:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:3"
									},
									"scope": 755,
									"src": "1967:283:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "2342:242:3",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 716,
														"src": "2352:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "2419:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 695,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2399:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$755",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 693,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 697,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2406:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 691,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "2375:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 501,
																"src": "2375:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "2375:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:118:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "2500:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "2530:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$542",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 511,
																		"src": "2530:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2530:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 711,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2554:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 712,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "2563:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2507:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2507:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2507:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2480:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "2480:97:3"
											}
										]
									},
									"documentation": null,
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "2287:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 681,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "2287:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "2301:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "2318:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2318:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2286:46:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2342:0:3"
									},
									"scope": 755,
									"src": "2256:328:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "3037:681:3",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 753,
														"src": "3386:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 725,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3386:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3440:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3446:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 729,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "3420:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3412:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 727,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3412:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3412:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "3412:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3386:95:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 736,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3495:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3495:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3515:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3495:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 752,
												"nodeType": "IfStatement",
												"src": "3491:221:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "3518:194:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 743,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "3635:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3648:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 744,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3648:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 746,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3647:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 741,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3624:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3624:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3624:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:44:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 740,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3616:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3616:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "ExpressionStatement",
															"src": "3616:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2590:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 754,
												"src": "2996:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 719,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "2996:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 754,
												"src": "3010:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3010:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:33:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3037:0:3"
									},
									"scope": 755,
									"src": "2967:751:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 756,
							"src": "616:3104:3"
						}
					],
					"src": "33:3688:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1051
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "66:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "792:347:4",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 774,
														"src": "989:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "989:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "989:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1078:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1086:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1078:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": false,
														"src": "1098:7:4",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "1078:4:4",
														"valueSize": 1
													}
												],
												"id": 769,
												"nodeType": "InlineAssembly",
												"src": "1067:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 770,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "1124:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1131:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1124:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 765,
												"id": 773,
												"nodeType": "Return",
												"src": "1117:15:4"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "156:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 775,
												"src": "746:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:17:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 775,
												"src": "786:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "786:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:6:4"
									},
									"scope": 1051,
									"src": "726:413:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "2127:320:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 786,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		],
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 784,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2145:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 789,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2170:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2145:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "2137:73:4"
											},
											{
												"assignments": [
													795,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 808,
														"src": "2299:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2299:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 802,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2349:2:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 796,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "2317:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2317:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 798,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2340:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2317:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:54:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 804,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:60:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2362:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2362:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "2362:78:4"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "1145:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "2075:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 809,
												"src": "2102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:43:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:4"
									},
									"scope": 1051,
									"src": "2056:391:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3277:82:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 820,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "3305:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "3313:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3319:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 819,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															826,
															846
														],
														"referencedDeclaration": 846,
														"src": "3292:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 818,
												"id": 824,
												"nodeType": "Return",
												"src": "3285:67:4"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "2453:730:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "3210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "3226:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3226:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3209:35:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "3263:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3263:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3262:14:4"
									},
									"scope": 1051,
									"src": "3188:171:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "3698:76:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3745:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3751:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 842,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3754:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 838,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															866,
															916
														],
														"referencedDeclaration": 916,
														"src": "3715:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 837,
												"id": 844,
												"nodeType": "Return",
												"src": "3708:59:4"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "3365:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "3603:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "3619:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3619:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "3638:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3638:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:63:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 846,
												"src": "3684:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3684:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3683:14:4"
									},
									"scope": 1051,
									"src": "3581:193:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "4249:111:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "4288:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 860,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "4296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 861,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "4302:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 858,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															866,
															916
														],
														"referencedDeclaration": 916,
														"src": "4266:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 857,
												"id": 864,
												"nodeType": "Return",
												"src": "4259:94:4"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "3780:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "4167:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "4183:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4183:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "4202:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:50:4"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 866,
												"src": "4235:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4235:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4234:14:4"
									},
									"scope": 1051,
									"src": "4136:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "4749:382:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 883,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4775:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1051",
																				"typeString": "library Address"
																			}
																		],
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4767:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 881,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4767:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4767:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4767:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 886,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "4792:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "4759:81:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 893,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "4869:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 892,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4858:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4858:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4878:31:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4850:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "4850:60:4"
											},
											{
												"assignments": [
													899,
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 915,
														"src": "4981:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 898,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4981:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 915,
														"src": "4995:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 900,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 906,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5050:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 902,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "5022:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5022:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "5042:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5022:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:75:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 910,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "5090:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 911,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "5099:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 912,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5111:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 909,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "5072:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 879,
												"id": 914,
												"nodeType": "Return",
												"src": "5065:59:4"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "4366:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "4639:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "4655:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4655:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "4674:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "4689:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 874,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4689:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4638:78:4"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "4735:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4734:14:4"
									},
									"scope": 1051,
									"src": "4608:523:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "5408:97:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 927,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 928,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "5452:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5458:39:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 926,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															968
														],
														"referencedDeclaration": 968,
														"src": "5425:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 925,
												"id": 931,
												"nodeType": "Return",
												"src": "5418:80:4"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "5137:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "5336:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "5352:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5335:35:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 933,
												"src": "5394:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5394:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5393:14:4"
									},
									"scope": 1051,
									"src": "5308:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "5817:288:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 947,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "5846:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 946,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "5835:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5835:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5855:38:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5827:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "5827:67:4"
											},
											{
												"assignments": [
													953,
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 967,
														"src": "5965:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 952,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5965:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 967,
														"src": "5979:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 954,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5979:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "6024:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6006:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6006:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5964:65:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "6064:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 963,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6073:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 964,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "6085:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 961,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "6046:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6046:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 944,
												"id": 966,
												"nodeType": "Return",
												"src": "6039:59:4"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5511:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "5717:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "5733:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 937,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5733:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "5752:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5752:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5716:63:4"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 968,
												"src": "5803:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5802:14:4"
									},
									"scope": 1051,
									"src": "5689:416:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6381:101:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 979,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "6419:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "6427:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6433:41:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 978,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															985,
															1020
														],
														"referencedDeclaration": 1020,
														"src": "6398:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 977,
												"id": 983,
												"nodeType": "Return",
												"src": "6391:84:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "6111:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "6314:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "6330:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6313:35:4"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 985,
												"src": "6367:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6366:14:4"
									},
									"scope": 1051,
									"src": "6284:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "6793:292:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 999,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "6822:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "6811:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6811:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6831:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "6803:69:4"
											},
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1019,
														"src": "6943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6943:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1019,
														"src": "6957:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6957:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7004:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "6984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6984:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6984:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6942:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1014,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7044:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1015,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "7053:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1016,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "7065:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "7026:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7026:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 996,
												"id": 1018,
												"nodeType": "Return",
												"src": "7019:59:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "6488:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1020,
												"src": "6698:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1020,
												"src": "6714:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6714:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1020,
												"src": "6733:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 991,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6697:63:4"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1020,
												"src": "6779:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6779:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6778:14:4"
									},
									"scope": 1051,
									"src": "6668:417:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "7220:596:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 1031,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "7234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "7291:519:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1035,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "7375:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7375:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7395:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7375:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1045,
																"nodeType": "Block",
																"src": "7747:53:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1042,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "7772:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1041,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7765:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7765:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1044,
																		"nodeType": "ExpressionStatement",
																		"src": "7765:20:4"
																	}
																]
															},
															"id": 1046,
															"nodeType": "IfStatement",
															"src": "7371:429:4",
															"trueBody": {
																"id": 1040,
																"nodeType": "Block",
																"src": "7398:343:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7582:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7604:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7633:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7627:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7627:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7608:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7676:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7680:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7672:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7672:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7693:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7665:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7665:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7665:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1024,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7633:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1024,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7680:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1039,
																		"nodeType": "InlineAssembly",
																		"src": "7573:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1048,
												"nodeType": "IfStatement",
												"src": "7230:580:4",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "7243:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1032,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "7264:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1030,
															"id": 1033,
															"nodeType": "Return",
															"src": "7257:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "7118:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7118:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "7132:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1023,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "7157:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7157:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7117:67:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1050,
												"src": "7206:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7205:14:4"
									},
									"scope": 1051,
									"src": "7091:725:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1052,
							"src": "134:7684:4"
						}
					],
					"src": "33:7786:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1053,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "668:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1060,
												"nodeType": "Return",
												"src": "678:17:5"
											}
										]
									},
									"documentation": null,
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:5"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1062,
												"src": "651:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:5"
									},
									"scope": 1074,
									"src": "598:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "773:165:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1067,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1074",
														"typeString": "contract Context"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "783:4:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1069,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1071,
												"nodeType": "Return",
												"src": "916:15:5"
											}
										]
									},
									"documentation": null,
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:5"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1073,
												"src": "759:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:5"
									},
									"scope": 1074,
									"src": "708:230:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1075,
							"src": "566:374:5"
						}
					],
					"src": "33:908:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "66:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1080,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1114,
									"src": "1605:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1605:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 1079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1645:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1083,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1114,
									"src": "1652:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1652:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32",
										"id": 1082,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1688:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1085,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1114,
									"src": "1696:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1084,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1696:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "1750:39:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1088,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1760:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1089,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1770:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1760:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "1760:22:6"
											}
										]
									},
									"documentation": null,
									"id": 1093,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:6"
									},
									"scope": 1114,
									"src": "1726:63:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "2188:421:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1097,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "2277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1098,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "2288:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2277:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2269:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2269:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "2269:63:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2407:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1104,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "2417:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2407:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2407:18:6"
											},
											{
												"id": 1107,
												"nodeType": "PlaceholderStatement",
												"src": "2436:1:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1108,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2580:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1109,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2590:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2580:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "2580:22:6"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1795:364:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 1113,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2185:2:6"
									},
									"src": "2164:445:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1115,
							"src": "817:1794:6"
						}
					],
					"src": "33:2579:6"
				},
				"id": 6
			},
			"contracts/Dividends/PhantzGlideStake.sol": {
				"ast": {
					"absolutePath": "contracts/Dividends/PhantzGlideStake.sol",
					"exportedSymbols": {
						"BunnyBunnStake": [
							1393
						]
					},
					"id": 1394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/math/SafeMath.sol",
							"id": 1117,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 465,
							"src": "57:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1118,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 110,
							"src": "109:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1119,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 543,
							"src": "162:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
							"id": 1120,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 756,
							"src": "219:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1121,
							"nodeType": "ImportDirective",
							"scope": 1394,
							"sourceUnit": 1115,
							"src": "279:59:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1122,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "367:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 1123,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:7"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1124,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1114,
										"src": "376:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$1114",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 1125,
									"nodeType": "InheritanceSpecifier",
									"src": "376:15:7"
								}
							],
							"contractDependencies": [
								109,
								1074,
								1114
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1393,
							"linearizedBaseContracts": [
								1393,
								1114,
								109,
								1074
							],
							"name": "BunnyBunnStake",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1128,
									"libraryName": {
										"contractScope": null,
										"id": 1126,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 755,
										"src": "404:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$755",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "398:27:7",
									"typeName": {
										"contractScope": null,
										"id": 1127,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 542,
										"src": "418:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$542",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 1131,
									"libraryName": {
										"contractScope": null,
										"id": 1129,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "436:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "430:27:7",
									"typeName": {
										"id": 1130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f90ce5ba",
									"id": 1133,
									"mutability": "mutable",
									"name": "lastUpdatedBlock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "463:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1132,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "146a3e2c",
									"id": 1137,
									"mutability": "mutable",
									"name": "glideRewards",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "501:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1136,
										"keyType": {
											"id": 1134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1139,
									"mutability": "immutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1393,
									"src": "555:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$542",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1138,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 542,
										"src": "555:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$542",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1147,
									"name": "AddReward",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1147,
												"src": "621:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "block",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1147,
												"src": "643:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1147,
												"src": "658:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "620:53:7"
									},
									"src": "605:69:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1155,
									"name": "WithdrawReward",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "700:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "block",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "722:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "737:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "699:53:7"
									},
									"src": "679:74:7"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1163,
									"name": "RescueTokens",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "777:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "799:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1163,
												"src": "822:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:61:7"
									},
									"src": "758:80:7"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "921:71:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1170,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "931:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$542",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1171,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "939:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$542",
															"typeString": "contract IERC20"
														}
													},
													"src": "931:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "931:14:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1174,
														"name": "lastUpdatedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "955:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1175,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "974:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "955:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "955:30:7"
											}
										]
									},
									"documentation": null,
									"id": 1179,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "865:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$542",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1164,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 542,
													"src": "865:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$542",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_startBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "888:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "855:58:7"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:7"
									},
									"scope": 1393,
									"src": "844:148:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "1025:8:7",
										"statements": []
									},
									"documentation": null,
									"id": 1183,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:7"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:7"
									},
									"scope": 1393,
									"src": "998:35:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "1117:53:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1190,
														"name": "lastUpdatedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "1127:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1191,
														"name": "_lastUpdatedBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "1146:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1127:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "1127:36:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6d273e91",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1188,
											"modifierName": {
												"argumentTypes": null,
												"id": 1187,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1107:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1107:9:7"
										}
									],
									"name": "setLastUpdateBlock",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "_lastUpdatedBlock",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1195,
												"src": "1071:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:27:7"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1117:0:7"
									},
									"scope": 1393,
									"src": "1043:127:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "1251:195:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1204,
															"name": "glideRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1261:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1206,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1205,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "1274:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1261:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1211,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "1307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1207,
																	"name": "glideRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "1283:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1209,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1208,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "1296:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1283:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "1283:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1283:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1261:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "1261:54:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1349:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1349:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1222,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "1369:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																		"typeString": "contract BunnyBunnStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																		"typeString": "contract BunnyBunnStake"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1361:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1361:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1361:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "1376:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1215,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "1326:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 601,
														"src": "1326:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$542_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1326:58:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1228,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "1410:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1229,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "1417:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1417:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1231,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "1431:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1227,
														"name": "AddReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1400:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1400:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "EmitStatement",
												"src": "1395:44:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "817fd71b",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1202,
											"modifierName": {
												"argumentTypes": null,
												"id": 1201,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1241:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1241:9:7"
										}
									],
									"name": "addGlideReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1235,
												"src": "1200:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1235,
												"src": "1215:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1199:32:7"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1251:0:7"
									},
									"scope": 1393,
									"src": "1176:270:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "1547:370:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1247,
																	"name": "_users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "1565:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1565:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1249,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "1582:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1582:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1565:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41727261797320617265206e6f7420657175616c",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1599:22:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4886b38c599869808cd68fe67a6f6fc2441475766eb3a671c0ee90ac6f8b57a",
																"typeString": "literal_string \"Arrays are not equal\""
															},
															"value": "Arrays are not equal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4886b38c599869808cd68fe67a6f6fc2441475766eb3a671c0ee90ac6f8b57a",
																"typeString": "literal_string \"Arrays are not equal\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1557:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "1557:65:7"
											},
											{
												"body": {
													"id": 1308,
													"nodeType": "Block",
													"src": "1676:235:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1266,
																		"name": "glideRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "1690:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1267,
																			"name": "_users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "1703:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1268,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "1710:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1703:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1690:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1277,
																				"name": "_amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "1744:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1279,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1278,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "1753:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1744:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1271,
																				"name": "glideRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "1716:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1275,
																			"indexExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1272,
																					"name": "_users",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "1729:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1274,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1273,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "1736:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1729:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1716:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 291,
																		"src": "1716:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1716:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1690:66:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1282,
															"nodeType": "ExpressionStatement",
															"src": "1690:66:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1286,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "1794:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1794:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1290,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "1814:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																					"typeString": "contract BunnyBunnStake"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																					"typeString": "contract BunnyBunnStake"
																				}
																			],
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1806:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1288,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1806:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1806:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1292,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "1821:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1294,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1293,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "1830:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1821:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1283,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "1771:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$542",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 601,
																	"src": "1771:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$542_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1771:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1296,
															"nodeType": "ExpressionStatement",
															"src": "1771:62:7"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1298,
																			"name": "_users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1238,
																			"src": "1863:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1300,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1299,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "1870:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1863:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1301,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "1874:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1874:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1303,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "1888:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1305,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1304,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "1897:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1888:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1297,
																	"name": "AddReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "1853:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1853:47:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1307,
															"nodeType": "EmitStatement",
															"src": "1848:52:7"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1259,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "1652:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1260,
															"name": "_users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "1656:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1656:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1652:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"initializationExpression": {
													"assignments": [
														1256
													],
													"declarations": [
														{
															"constant": false,
															"id": 1256,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1309,
															"src": "1637:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1255,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1637:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1258,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1649:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1637:13:7"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1671:3:7",
														"subExpression": {
															"argumentTypes": null,
															"id": 1263,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "1671:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1265,
													"nodeType": "ExpressionStatement",
													"src": "1671:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1633:278:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "c945c0d4",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1244,
											"modifierName": {
												"argumentTypes": null,
												"id": 1243,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1537:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1537:9:7"
										}
									],
									"name": "addGlideReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_users",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1311,
												"src": "1476:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1236,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1476:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1237,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1476:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1311,
												"src": "1501:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1239,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1501:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1240,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1501:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1475:52:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:0:7"
									},
									"scope": 1393,
									"src": "1452:465:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "1976:304:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1316,
															"name": "glideRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1990:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1319,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2003:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2003:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1990:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2017:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1990:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1353,
												"nodeType": "IfStatement",
												"src": "1986:288:7",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "2020:254:7",
													"statements": [
														{
															"assignments": [
																1323
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1323,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1352,
																	"src": "2034:14:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2034:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1328,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1324,
																	"name": "glideRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "2051:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1327,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1325,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "2064:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2064:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2051:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2034:41:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1329,
																		"name": "glideRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "2090:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1332,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1330,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2103:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2103:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2090:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2117:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2090:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "2090:28:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1339,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2164:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2164:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1341,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "2176:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1336,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "2145:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$542",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 576,
																	"src": "2145:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$542_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2145:38:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "2145:38:7"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1345,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2230:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2230:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1347,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "2242:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2242:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1349,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "2256:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1344,
																	"name": "WithdrawReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "2215:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2215:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "EmitStatement",
															"src": "2210:53:7"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "dd5af17e",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1314,
											"modifierName": {
												"argumentTypes": null,
												"id": 1313,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1113,
												"src": "1963:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1963:12:7"
										}
									],
									"name": "withdrawGlideReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1951:2:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:7"
									},
									"scope": 1393,
									"src": "1923:357:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "2374:204:7",
										"statements": [
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1391,
														"src": "2384:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2384:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1372,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2440:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																		"typeString": "contract BunnyBunnStake"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BunnyBunnStake_$1393",
																		"typeString": "contract BunnyBunnStake"
																	}
																],
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2432:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1370,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2432:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1367,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "2409:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1366,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "2402:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$542_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2402:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 481,
														"src": "2402:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2402:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2384:62:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1380,
															"name": "addressForReceive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "2483:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1381,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "2502:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1377,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "2463:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$542",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1376,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "2456:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$542_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2456:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$542",
																"typeString": "contract IERC20"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 576,
														"src": "2456:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$542_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$542_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "2456:54:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1385,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2538:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2538:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1387,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "2550:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1388,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "2563:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "RescueTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "2525:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2525:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "2520:51:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4707d000",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1362,
											"modifierName": {
												"argumentTypes": null,
												"id": 1361,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2364:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2364:9:7"
										}
									],
									"name": "rescueToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "rewardToken",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "2307:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "addressForReceive",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1392,
												"src": "2328:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2306:48:7"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:7"
									},
									"scope": 1393,
									"src": "2286:292:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1394,
							"src": "340:2240:7"
						}
					],
					"src": "32:2548:7"
				},
				"id": 7
			}
		}
	}
}